; Listing generated by Microsoft (R) Optimizing Compiler Version 19.44.35215.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_Avx2WmemEnabledWeakValue
;	COMDAT _Avx2WmemEnabledWeakValue
_BSS	SEGMENT
_Avx2WmemEnabledWeakValue DD 01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
?PROMOTION_PIECES@PawnOptimizations@@3QBW4PieceType@@B DB 05H ; PawnOptimizations::PROMOTION_PIECES
	DB	04H
	DB	03H
	DB	02H
	ORG $+4
?PIECE_VALUES_MG@@3V?$array@H$06@std@@B DD 00H		; PIECE_VALUES_MG
	DD	064H
	DD	0140H
	DD	014aH
	DD	01f4H
	DD	0384H
	DD	04e20H
	ORG $+12
?BIT_MASK@@3QB_KB DQ 0000000000000001H			; BIT_MASK
	DQ	0000000000000002H
	DQ	0000000000000004H
	DQ	0000000000000008H
	DQ	0000000000000010H
	DQ	0000000000000020H
	DQ	0000000000000040H
	DQ	0000000000000080H
	DQ	0000000000000100H
	DQ	0000000000000200H
	DQ	0000000000000400H
	DQ	0000000000000800H
	DQ	0000000000001000H
	DQ	0000000000002000H
	DQ	0000000000004000H
	DQ	0000000000008000H
	DQ	0000000000010000H
	DQ	0000000000020000H
	DQ	0000000000040000H
	DQ	0000000000080000H
	DQ	0000000000100000H
	DQ	0000000000200000H
	DQ	0000000000400000H
	DQ	0000000000800000H
	DQ	0000000001000000H
	DQ	0000000002000000H
	DQ	0000000004000000H
	DQ	0000000008000000H
	DQ	0000000010000000H
	DQ	0000000020000000H
	DQ	0000000040000000H
	DQ	0000000080000000H
	DQ	0000000100000000H
	DQ	0000000200000000H
	DQ	0000000400000000H
	DQ	0000000800000000H
	DQ	0000001000000000H
	DQ	0000002000000000H
	DQ	0000004000000000H
	DQ	0000008000000000H
	DQ	0000010000000000H
	DQ	0000020000000000H
	DQ	0000040000000000H
	DQ	0000080000000000H
	DQ	0000100000000000H
	DQ	0000200000000000H
	DQ	0000400000000000H
	DQ	0000800000000000H
	DQ	0001000000000000H
	DQ	0002000000000000H
	DQ	0004000000000000H
	DQ	0008000000000000H
	DQ	0010000000000000H
	DQ	0020000000000000H
	DQ	0040000000000000H
	DQ	0080000000000000H
	DQ	0100000000000000H
	DQ	0200000000000000H
	DQ	0400000000000000H
	DQ	0800000000000000H
	DQ	1000000000000000H
	DQ	2000000000000000H
	DQ	4000000000000000H
	DQ	8000000000000000H
?CLEAR_MASK@@3QB_KB DQ fffffffffffffffeH		; CLEAR_MASK
	DQ	fffffffffffffffdH
	DQ	fffffffffffffffbH
	DQ	fffffffffffffff7H
	DQ	ffffffffffffffefH
	DQ	ffffffffffffffdfH
	DQ	ffffffffffffffbfH
	DQ	ffffffffffffff7fH
	DQ	fffffffffffffeffH
	DQ	fffffffffffffdffH
	DQ	fffffffffffffbffH
	DQ	fffffffffffff7ffH
	DQ	ffffffffffffefffH
	DQ	ffffffffffffdfffH
	DQ	ffffffffffffbfffH
	DQ	ffffffffffff7fffH
	DQ	fffffffffffeffffH
	DQ	fffffffffffdffffH
	DQ	fffffffffffbffffH
	DQ	fffffffffff7ffffH
	DQ	ffffffffffefffffH
	DQ	ffffffffffdfffffH
	DQ	ffffffffffbfffffH
	DQ	ffffffffff7fffffH
	DQ	fffffffffeffffffH
	DQ	fffffffffdffffffH
	DQ	fffffffffbffffffH
	DQ	fffffffff7ffffffH
	DQ	ffffffffefffffffH
	DQ	ffffffffdfffffffH
	DQ	ffffffffbfffffffH
	DQ	ffffffff7fffffffH
	DQ	fffffffeffffffffH
	DQ	fffffffdffffffffH
	DQ	fffffffbffffffffH
	DQ	fffffff7ffffffffH
	DQ	ffffffefffffffffH
	DQ	ffffffdfffffffffH
	DQ	ffffffbfffffffffH
	DQ	ffffff7fffffffffH
	DQ	fffffeffffffffffH
	DQ	fffffdffffffffffH
	DQ	fffffbffffffffffH
	DQ	fffff7ffffffffffH
	DQ	ffffefffffffffffH
	DQ	ffffdfffffffffffH
	DQ	ffffbfffffffffffH
	DQ	ffff7fffffffffffH
	DQ	fffeffffffffffffH
	DQ	fffdffffffffffffH
	DQ	fffbffffffffffffH
	DQ	fff7ffffffffffffH
	DQ	ffefffffffffffffH
	DQ	ffdfffffffffffffH
	DQ	ffbfffffffffffffH
	DQ	ff7fffffffffffffH
	DQ	feffffffffffffffH
	DQ	fdffffffffffffffH
	DQ	fbffffffffffffffH
	DQ	f7ffffffffffffffH
	DQ	efffffffffffffffH
	DQ	dfffffffffffffffH
	DQ	bfffffffffffffffH
	DQ	7fffffffffffffffH
?SQUARE_FROM_FILE_RANK@@3QAY07$$CBHA DD 00H		; SQUARE_FROM_FILE_RANK
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	08H
	DD	09H
	DD	0aH
	DD	0bH
	DD	0cH
	DD	0dH
	DD	0eH
	DD	0fH
	DD	010H
	DD	011H
	DD	012H
	DD	013H
	DD	014H
	DD	015H
	DD	016H
	DD	017H
	DD	018H
	DD	019H
	DD	01aH
	DD	01bH
	DD	01cH
	DD	01dH
	DD	01eH
	DD	01fH
	DD	020H
	DD	021H
	DD	022H
	DD	023H
	DD	024H
	DD	025H
	DD	026H
	DD	027H
	DD	028H
	DD	029H
	DD	02aH
	DD	02bH
	DD	02cH
	DD	02dH
	DD	02eH
	DD	02fH
	DD	030H
	DD	031H
	DD	032H
	DD	033H
	DD	034H
	DD	035H
	DD	036H
	DD	037H
	DD	038H
	DD	039H
	DD	03aH
	DD	03bH
	DD	03cH
	DD	03dH
	DD	03eH
	DD	03fH
?FILE_OF_SQUARE@@3QBHB DD 00H				; FILE_OF_SQUARE
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
?RANK_OF_SQUARE@@3QBHB DD 00H				; RANK_OF_SQUARE
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	04H
	DD	04H
	DD	04H
	DD	04H
	DD	04H
	DD	04H
	DD	04H
	DD	04H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	06H
	DD	06H
	DD	06H
	DD	06H
	DD	06H
	DD	06H
	DD	06H
	DD	06H
	DD	07H
	DD	07H
	DD	07H
	DD	07H
	DD	07H
	DD	07H
	DD	07H
	DD	07H
CONST	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?fpclassify@@YAHN@Z				; fpclassify
PUBLIC	?fpclassify@@YAHO@Z				; fpclassify
PUBLIC	fabsl
PUBLIC	frexpl
PUBLIC	__local_stdio_printf_options
PUBLIC	_vsprintf_s_l
PUBLIC	sprintf_s
PUBLIC	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z	; std::_Char_traits<char,int>::copy
PUBLIC	?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z	; std::_Char_traits<char,int>::move
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	??0exception@std@@QEAA@QEBD@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	?_Orphan_all@_Container_base0@std@@QEAAXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base0@std@@QEAAXAEAU12@@Z ; std::_Container_base0::_Swap_proxy_and_iterators
PUBLIC	?_Alloc_proxy@_Container_base0@std@@QEAAXAEBU_Fake_allocator@2@@Z ; std::_Container_base0::_Alloc_proxy
PUBLIC	??0_Fake_proxy_ptr_impl@std@@QEAA@AEBU_Fake_allocator@1@AEBU_Container_base0@1@@Z ; std::_Fake_proxy_ptr_impl::_Fake_proxy_ptr_impl
PUBLIC	?_Release@_Fake_proxy_ptr_impl@std@@QEAAXXZ	; std::_Fake_proxy_ptr_impl::_Release
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_mode_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_mode_engaged
PUBLIC	?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer
PUBLIC	?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	?_Switch_to_buf@_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Switch_to_buf
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Deallocate_for_capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXAEAV?$allocator@D@2@QEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Deallocate_for_capacity
PUBLIC	?_Construct_empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_empty
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
PUBLIC	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
PUBLIC	??1runtime_error@std@@UEAA@XZ			; std::runtime_error::~runtime_error
PUBLIC	??0runtime_error@std@@QEAA@AEBV01@@Z		; std::runtime_error::runtime_error
PUBLIC	??_Gruntime_error@std@@UEAAPEAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	?iostream_category@std@@YAAEBVerror_category@1@XZ ; std::iostream_category
PUBLIC	??1error_category@std@@UEAA@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QEBA_NAEBV01@@Z		; std::error_category::operator==
PUBLIC	??$_Bit_cast@_KT_Addr_storage@error_category@std@@$0A@@std@@YA_KAEBT_Addr_storage@error_category@0@@Z ; std::_Bit_cast<unsigned __int64,std::error_category::_Addr_storage,0>
PUBLIC	??0error_code@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_code::error_code
PUBLIC	?value@error_code@std@@QEBAHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QEBAAEBVerror_category@2@XZ ; std::error_code::category
PUBLIC	?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::error_code::message
PUBLIC	??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QEBAHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8std@@YA_NAEBVerror_condition@0@0@Z		; std::operator==
PUBLIC	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
PUBLIC	?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
PUBLIC	??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
PUBLIC	??1_System_error@std@@UEAA@XZ			; std::_System_error::~_System_error
PUBLIC	??0_System_error@std@@QEAA@AEBV01@@Z		; std::_System_error::_System_error
PUBLIC	??_G_System_error@std@@UEAAPEAXI@Z		; std::_System_error::`scalar deleting destructor'
PUBLIC	??0system_error@std@@QEAA@Verror_code@1@PEBD@Z	; std::system_error::system_error
PUBLIC	??1system_error@std@@UEAA@XZ			; std::system_error::~system_error
PUBLIC	??0system_error@std@@QEAA@AEBV01@@Z		; std::system_error::system_error
PUBLIC	??_Gsystem_error@std@@UEAAPEAXI@Z		; std::system_error::`scalar deleting destructor'
PUBLIC	?name@_Iostream_error_category2@std@@UEBAPEBDXZ	; std::_Iostream_error_category2::name
PUBLIC	?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category2::message
PUBLIC	??1_Iostream_error_category2@std@@UEAA@XZ	; std::_Iostream_error_category2::~_Iostream_error_category2
PUBLIC	??_G_Iostream_error_category2@std@@UEAAPEAXI@Z	; std::_Iostream_error_category2::`scalar deleting destructor'
PUBLIC	??$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@0@XZ ; std::_Immortalize_memcpy_image<std::_Iostream_error_category2>
PUBLIC	??0bad_cast@std@@QEAA@XZ			; std::bad_cast::bad_cast
PUBLIC	??1bad_cast@std@@UEAA@XZ			; std::bad_cast::~bad_cast
PUBLIC	??0bad_cast@std@@QEAA@AEBV01@@Z			; std::bad_cast::bad_cast
PUBLIC	??_Gbad_cast@std@@UEAAPEAXI@Z			; std::bad_cast::`scalar deleting destructor'
PUBLIC	?_Throw_bad_cast@std@@YAXXZ			; std::_Throw_bad_cast
PUBLIC	??1_Facet_base@std@@UEAA@XZ			; std::_Facet_base::~_Facet_base
PUBLIC	??0_Facet_base@std@@QEAA@XZ			; std::_Facet_base::_Facet_base
PUBLIC	??_G_Facet_base@std@@UEAAPEAXI@Z		; std::_Facet_base::`scalar deleting destructor'
PUBLIC	??0_Locinfo@std@@QEAA@PEBD@Z			; std::_Locinfo::_Locinfo
PUBLIC	??1_Locinfo@std@@QEAA@XZ			; std::_Locinfo::~_Locinfo
PUBLIC	?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ	; std::_Locinfo::_Getctype
PUBLIC	?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ	; std::_Locinfo::_Getcvt
PUBLIC	?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ	; std::_Locinfo::_Getlconv
PUBLIC	?_Getfalse@_Locinfo@std@@QEBAPEBDXZ		; std::_Locinfo::_Getfalse
PUBLIC	?_Gettrue@_Locinfo@std@@QEBAPEBDXZ		; std::_Locinfo::_Gettrue
PUBLIC	??0?$_Yarn@D@std@@QEAA@XZ			; std::_Yarn<char>::_Yarn<char>
PUBLIC	??1?$_Yarn@D@std@@QEAA@XZ			; std::_Yarn<char>::~_Yarn<char>
PUBLIC	?c_str@?$_Yarn@D@std@@QEBAPEBDXZ		; std::_Yarn<char>::c_str
PUBLIC	?_Tidy@?$_Yarn@D@std@@AEAAXXZ			; std::_Yarn<char>::_Tidy
PUBLIC	??0?$_Yarn@_W@std@@QEAA@XZ			; std::_Yarn<wchar_t>::_Yarn<wchar_t>
PUBLIC	??1?$_Yarn@_W@std@@QEAA@XZ			; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
PUBLIC	?_Tidy@?$_Yarn@_W@std@@AEAAXXZ			; std::_Yarn<wchar_t>::_Tidy
PUBLIC	?_Incref@facet@locale@std@@UEAAXXZ		; std::locale::facet::_Incref
PUBLIC	?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ; std::locale::facet::_Decref
PUBLIC	??0facet@locale@std@@IEAA@_K@Z			; std::locale::facet::facet
PUBLIC	??1facet@locale@std@@MEAA@XZ			; std::locale::facet::~facet
PUBLIC	??_Gfacet@locale@std@@MEAAPEAXI@Z		; std::locale::facet::`scalar deleting destructor'
PUBLIC	??0locale@std@@QEAA@AEBV01@@Z			; std::locale::locale
PUBLIC	??1locale@std@@QEAA@XZ				; std::locale::~locale
PUBLIC	?_C_str@locale@std@@QEBAPEBDXZ			; std::locale::_C_str
PUBLIC	?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z	; std::locale::_Getfacet
PUBLIC	??$_Adl_verify_range@PEBDPEBD@std@@YAXAEBQEBD0@Z ; std::_Adl_verify_range<char const *,char const *>
PUBLIC	??0ctype_base@std@@QEAA@_K@Z			; std::ctype_base::ctype_base
PUBLIC	??1ctype_base@std@@UEAA@XZ			; std::ctype_base::~ctype_base
PUBLIC	??_Gctype_base@std@@UEAAPEAXI@Z			; std::ctype_base::`scalar deleting destructor'
PUBLIC	?widen@?$ctype@D@std@@QEBADD@Z			; std::ctype<char>::widen
PUBLIC	?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z	; std::ctype<char>::widen
PUBLIC	??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z	; std::ctype<char>::ctype<char>
PUBLIC	?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::ctype<char>::_Getcat
PUBLIC	??1?$ctype@D@std@@MEAA@XZ			; std::ctype<char>::~ctype<char>
PUBLIC	?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z	; std::ctype<char>::_Init
PUBLIC	?_Tidy@?$ctype@D@std@@IEAAXXZ			; std::ctype<char>::_Tidy
PUBLIC	?do_tolower@?$ctype@D@std@@MEBADD@Z		; std::ctype<char>::do_tolower
PUBLIC	?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z	; std::ctype<char>::do_tolower
PUBLIC	?do_toupper@?$ctype@D@std@@MEBADD@Z		; std::ctype<char>::do_toupper
PUBLIC	?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z	; std::ctype<char>::do_toupper
PUBLIC	?do_widen@?$ctype@D@std@@MEBADD@Z		; std::ctype<char>::do_widen
PUBLIC	?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z	; std::ctype<char>::do_widen
PUBLIC	?do_narrow@?$ctype@D@std@@MEBADDD@Z		; std::ctype<char>::do_narrow
PUBLIC	?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z	; std::ctype<char>::do_narrow
PUBLIC	??_G?$ctype@D@std@@MEAAPEAXI@Z			; std::ctype<char>::`scalar deleting destructor'
PUBLIC	??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<char> >
PUBLIC	??$_Adl_verify_range@PEADPEBD@std@@YAXAEBQEADAEBQEBD@Z ; std::_Adl_verify_range<char *,char const *>
PUBLIC	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
PUBLIC	??1failure@ios_base@std@@UEAA@XZ		; std::ios_base::failure::~failure
PUBLIC	??0failure@ios_base@std@@QEAA@AEBV012@@Z	; std::ios_base::failure::failure
PUBLIC	??_Gfailure@ios_base@std@@UEAAPEAXI@Z		; std::ios_base::failure::`scalar deleting destructor'
PUBLIC	?clear@ios_base@std@@QEAAXH_N@Z			; std::ios_base::clear
PUBLIC	?rdstate@ios_base@std@@QEBAHXZ			; std::ios_base::rdstate
PUBLIC	?good@ios_base@std@@QEBA_NXZ			; std::ios_base::good
PUBLIC	?flags@ios_base@std@@QEBAHXZ			; std::ios_base::flags
PUBLIC	?precision@ios_base@std@@QEBA_JXZ		; std::ios_base::precision
PUBLIC	?width@ios_base@std@@QEBA_JXZ			; std::ios_base::width
PUBLIC	?width@ios_base@std@@QEAA_J_J@Z			; std::ios_base::width
PUBLIC	?getloc@ios_base@std@@QEBA?AVlocale@2@XZ	; std::ios_base::getloc
PUBLIC	??7@YA?AW4Color@@W40@@Z				; operator!
PUBLIC	?is_none@@YA_NW4Piece@@@Z			; is_none
PUBLIC	?is_offboard@@YA_NW4Piece@@@Z			; is_offboard
PUBLIC	?type_of@@YA?AW4PieceType@@W4Piece@@@Z		; type_of
PUBLIC	?color_of@@YA?AW4Color@@W4Piece@@@Z		; color_of
PUBLIC	?make_piece@@YA?AW4Piece@@W4Color@@W4PieceType@@@Z ; make_piece
PUBLIC	??A?$array@H$06@std@@QEAAAEAH_K@Z		; std::array<int,7>::operator[]
PUBLIC	??A?$array@H$06@std@@QEBAAEBH_K@Z		; std::array<int,7>::operator[]
PUBLIC	?value_of@@YAHW4Piece@@@Z			; value_of
PUBLIC	?_Unchecked_begin@?$array@H$07@std@@QEBAPEBHXZ	; std::array<int,8>::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$array@H$07@std@@QEBAPEBHXZ	; std::array<int,8>::_Unchecked_end
PUBLIC	?sq@@YAHW4File@@W4Rank@@@Z			; sq
PUBLIC	??A?$array@W4File@@$0HI@@std@@QEBAAEBW4File@@_K@Z ; std::array<enum File,120>::operator[]
PUBLIC	??A?$array@W4Rank@@$0HI@@std@@QEBAAEBW4Rank@@_K@Z ; std::array<enum Rank,120>::operator[]
PUBLIC	??A?$array@_N$0HI@@std@@QEBAAEB_N_K@Z		; std::array<bool,120>::operator[]
PUBLIC	?file_of@@YA?AW4File@@H@Z			; file_of
PUBLIC	?rank_of@@YA?AW4Rank@@H@Z			; rank_of
PUBLIC	?is_playable@@YA_NH@Z				; is_playable
PUBLIC	??A?$array@H$0HI@@std@@QEBAAEBH_K@Z		; std::array<int,120>::operator[]
PUBLIC	??0S_MOVE@@QEAA@XZ				; S_MOVE::S_MOVE
PUBLIC	??0S_MOVE@@QEAA@HHW4PieceType@@_N101@Z		; S_MOVE::S_MOVE
PUBLIC	?get_from@S_MOVE@@QEBAHXZ			; S_MOVE::get_from
PUBLIC	?get_to@S_MOVE@@QEBAHXZ				; S_MOVE::get_to
PUBLIC	?get_captured@S_MOVE@@QEBA?AW4PieceType@@XZ	; S_MOVE::get_captured
PUBLIC	?is_en_passant@S_MOVE@@QEBA_NXZ			; S_MOVE::is_en_passant
PUBLIC	?get_promoted@S_MOVE@@QEBA?AW4PieceType@@XZ	; S_MOVE::get_promoted
PUBLIC	?is_castle@S_MOVE@@QEBA_NXZ			; S_MOVE::is_castle
PUBLIC	?is_capture@S_MOVE@@QEBA_NXZ			; S_MOVE::is_capture
PUBLIC	?is_promotion@S_MOVE@@QEBA_NXZ			; S_MOVE::is_promotion
PUBLIC	?make_move@@YA?AUS_MOVE@@HH@Z			; make_move
PUBLIC	?make_capture@@YA?AUS_MOVE@@HHW4PieceType@@@Z	; make_capture
PUBLIC	?make_en_passant@@YA?AUS_MOVE@@HH@Z		; make_en_passant
PUBLIC	?make_pawn_start@@YA?AUS_MOVE@@HH@Z		; make_pawn_start
PUBLIC	?make_promotion@@YA?AUS_MOVE@@HHW4PieceType@@0@Z ; make_promotion
PUBLIC	?make_castle@@YA?AUS_MOVE@@HH@Z			; make_castle
PUBLIC	??A?$array@H$01@std@@QEAAAEAH_K@Z		; std::array<int,2>::operator[]
PUBLIC	??A?$array@H$01@std@@QEBAAEBH_K@Z		; std::array<int,2>::operator[]
PUBLIC	??A?$array@_K$01@std@@QEAAAEA_K_K@Z		; std::array<unsigned __int64,2>::operator[]
PUBLIC	??A?$array@V?$array@V?$array@H$09@std@@$06@std@@$01@std@@QEAAAEAV?$array@V?$array@H$09@std@@$06@1@_K@Z ; std::array<std::array<std::array<int,10>,7>,2>::operator[]
PUBLIC	??A?$array@V?$array@V?$array@H$09@std@@$06@std@@$01@std@@QEBAAEBV?$array@V?$array@H$09@std@@$06@1@_K@Z ; std::array<std::array<std::array<int,10>,7>,2>::operator[]
PUBLIC	??A?$array@V?$array@H$09@std@@$06@std@@QEAAAEAV?$array@H$09@1@_K@Z ; std::array<std::array<int,10>,7>::operator[]
PUBLIC	??A?$array@V?$array@H$09@std@@$06@std@@QEBAAEBV?$array@H$09@1@_K@Z ; std::array<std::array<int,10>,7>::operator[]
PUBLIC	??A?$array@H$09@std@@QEAAAEAH_K@Z		; std::array<int,10>::operator[]
PUBLIC	??A?$array@H$09@std@@QEBAAEBH_K@Z		; std::array<int,10>::operator[]
PUBLIC	??A?$array@V?$array@H$06@std@@$01@std@@QEAAAEAV?$array@H$06@1@_K@Z ; std::array<std::array<int,7>,2>::operator[]
PUBLIC	??A?$array@V?$array@H$06@std@@$01@std@@QEBAAEBV?$array@H$06@1@_K@Z ; std::array<std::array<int,7>,2>::operator[]
PUBLIC	??0S_UNDO@@QEAA@XZ				; S_UNDO::S_UNDO
PUBLIC	??A?$array@W4Piece@@$0HI@@std@@QEAAAEAW4Piece@@_K@Z ; std::array<enum Piece,120>::operator[]
PUBLIC	??A?$array@W4Piece@@$0HI@@std@@QEBAAEBW4Piece@@_K@Z ; std::array<enum Piece,120>::operator[]
PUBLIC	?deallocate@?$allocator@US_UNDO@@@std@@QEAAXQEAUS_UNDO@@_K@Z ; std::allocator<S_UNDO>::deallocate
PUBLIC	?allocate@?$allocator@US_UNDO@@@std@@QEAAPEAUS_UNDO@@_K@Z ; std::allocator<S_UNDO>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SA_KAEBV?$allocator@US_UNDO@@@2@@Z ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::max_size
PUBLIC	?resize@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAAX_K@Z ; std::vector<S_UNDO,std::allocator<S_UNDO> >::resize
PUBLIC	?size@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEBA_KXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::size
PUBLIC	?max_size@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEBA_KXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::max_size
PUBLIC	?capacity@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEBA_KXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::capacity
PUBLIC	??A?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAAAEAUS_UNDO@@_K@Z ; std::vector<S_UNDO,std::allocator<S_UNDO> >::operator[]
PUBLIC	?_Calculate_growth@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEBA_K_K@Z ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXQEAUS_UNDO@@_K1@Z ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Change_array
PUBLIC	?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEBAXPEAUS_UNDO@@0@Z ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Orphan_range
PUBLIC	?_Getal@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAAEAV?$allocator@US_UNDO@@@2@XZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Getal
PUBLIC	?_Getal@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEBAAEBV?$allocator@US_UNDO@@@2@XZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEAAAEAV?$allocator@US_UNDO@@@2@XZ ; std::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEBAAEBV?$allocator@US_UNDO@@@2@XZ ; std::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1>::_Get_first
PUBLIC	?restore_derived_state@Position@@QEAAXAEBUS_UNDO@@@Z ; Position::restore_derived_state
PUBLIC	?update_derived_state_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1@Z ; Position::update_derived_state_for_move
PUBLIC	?at@Position@@QEBA?AW4Piece@@H@Z		; Position::at
PUBLIC	?set@Position@@QEAAXHW4Piece@@@Z		; Position::set
PUBLIC	?add_piece_to_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z ; Position::add_piece_to_list
PUBLIC	?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z ; Position::remove_piece_from_list
PUBLIC	?move_piece_in_list@Position@@QEAAXW4Color@@W4PieceType@@HH@Z ; Position::move_piece_in_list
PUBLIC	?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z ; Position::make_move_with_undo
PUBLIC	?undo_move@Position@@QEAA_NXZ			; Position::undo_move
PUBLIC	?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::clear
PUBLIC	?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
PUBLIC	?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::tie
PUBLIC	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
PUBLIC	?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ; std::basic_ios<char,std::char_traits<char> >::fill
PUBLIC	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
PUBLIC	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
PUBLIC	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
PUBLIC	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
PUBLIC	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
PUBLIC	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??0S_MOVELIST@@QEAA@XZ				; S_MOVELIST::S_MOVELIST
PUBLIC	?add_quiet_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z	; S_MOVELIST::add_quiet_move
PUBLIC	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
PUBLIC	?add_en_passant_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z ; S_MOVELIST::add_en_passant_move
PUBLIC	?add_promotion_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z ; S_MOVELIST::add_promotion_move
PUBLIC	?add_castle_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z ; S_MOVELIST::add_castle_move
PUBLIC	??AS_MOVELIST@@QEAAAEAUS_MOVE@@H@Z		; S_MOVELIST::operator[]
PUBLIC	?size@S_MOVELIST@@QEBAHXZ			; S_MOVELIST::size
PUBLIC	?generate_all_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@@Z ; generate_all_moves
PUBLIC	?generate_pawn_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; generate_pawn_moves
PUBLIC	?generate_knight_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; generate_knight_moves
PUBLIC	?generate_bishop_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; generate_bishop_moves
PUBLIC	?generate_rook_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; generate_rook_moves
PUBLIC	?generate_queen_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; generate_queen_moves
PUBLIC	?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; generate_king_moves
PUBLIC	?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z ; generate_sliding_moves
PUBLIC	?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z ; generate_legal_moves_enhanced
PUBLIC	?generate_promotion_batch@PawnOptimizations@@YAXAEAUS_MOVELIST@@HHW4PieceType@@@Z ; PawnOptimizations::generate_promotion_batch
PUBLIC	?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; PawnOptimizations::generate_pawn_moves_optimized
PUBLIC	??A?$array@H$02@std@@QEBAAEBH_K@Z		; std::array<int,3>::operator[]
PUBLIC	?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; KingOptimizations::generate_king_moves_optimized
PUBLIC	?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; KnightOptimizations::generate_knight_moves_template
PUBLIC	??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ; KnightOptimizations::generate_single_knight_move<21>
PUBLIC	??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ; KnightOptimizations::generate_single_knight_move<19>
PUBLIC	??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ; KnightOptimizations::generate_single_knight_move<12>
PUBLIC	??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ; KnightOptimizations::generate_single_knight_move<8>
PUBLIC	??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ; KnightOptimizations::generate_single_knight_move<-8>
PUBLIC	??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ; KnightOptimizations::generate_single_knight_move<-12>
PUBLIC	??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ; KnightOptimizations::generate_single_knight_move<-19>
PUBLIC	??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ; KnightOptimizations::generate_single_knight_move<-21>
PUBLIC	?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; SlidingPieceOptimizations::generate_bishop_moves_optimized
PUBLIC	??$generate_sliding_ray@$0L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ; SlidingPieceOptimizations::generate_sliding_ray<11>
PUBLIC	??$generate_sliding_ray@$08@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ; SlidingPieceOptimizations::generate_sliding_ray<9>
PUBLIC	??$generate_sliding_ray@$0?8@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ; SlidingPieceOptimizations::generate_sliding_ray<-9>
PUBLIC	??$generate_sliding_ray@$0?L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ; SlidingPieceOptimizations::generate_sliding_ray<-11>
PUBLIC	?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; SlidingPieceOptimizations::generate_rook_moves_optimized
PUBLIC	??$generate_sliding_ray@$09@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ; SlidingPieceOptimizations::generate_sliding_ray<10>
PUBLIC	??$generate_sliding_ray@$0?9@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ; SlidingPieceOptimizations::generate_sliding_ray<-10>
PUBLIC	??$generate_sliding_ray@$00@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ; SlidingPieceOptimizations::generate_sliding_ray<1>
PUBLIC	??$generate_sliding_ray@$0?0@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ; SlidingPieceOptimizations::generate_sliding_ray<-1>
PUBLIC	?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; SlidingPieceOptimizations::generate_queen_moves_optimized
PUBLIC	?generate_all_sliding_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; SlidingPieceOptimizations::generate_all_sliding_moves_optimized
PUBLIC	??0?$initializer_list@H@std@@QEAA@PEBH0@Z	; std::initializer_list<int>::initializer_list<int>
PUBLIC	?begin@?$initializer_list@H@std@@QEBAPEBHXZ	; std::initializer_list<int>::begin
PUBLIC	?end@?$initializer_list@H@std@@QEBAPEBHXZ	; std::initializer_list<int>::end
PUBLIC	??$min@_K@std@@YAAEB_KAEB_K0@Z			; std::min<unsigned __int64>
PUBLIC	??$_Get_index@$0A@@id@locale@std@@QEAA_KXZ	; std::locale::id::_Get_index<0>
PUBLIC	??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z ; std::default_delete<std::_Facet_base>::operator()
PUBLIC	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
PUBLIC	?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
PUBLIC	??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
PUBLIC	?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
PUBLIC	?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputn
PUBLIC	?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
PUBLIC	?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Resize<std::_Value_init_tag>
PUBLIC	??$_Convert_size@_K_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64,unsigned __int64>
PUBLIC	??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<0,char>
PUBLIC	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
PUBLIC	??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<2,char const *>
PUBLIC	??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >
PUBLIC	?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat
PUBLIC	??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::~num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
PUBLIC	?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Init
PUBLIC	??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
PUBLIC	?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ffmt
PUBLIC	?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt
PUBLIC	?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
PUBLIC	?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
PUBLIC	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
PUBLIC	??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`scalar deleting destructor'
PUBLIC	??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z ; std::ostreambuf_iterator<char,std::char_traits<char> >::ostreambuf_iterator<char,std::char_traits<char> >
PUBLIC	??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator=
PUBLIC	??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator*
PUBLIC	??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator++
PUBLIC	?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::failed
PUBLIC	??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
PUBLIC	??$_Allocate_at_least_helper@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<S_UNDO> >
PUBLIC	??$_Uninitialized_move@PEAUS_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@QEAU1@0PEAU1@AEAV?$allocator@US_UNDO@@@0@@Z ; std::_Uninitialized_move<S_UNDO *,std::allocator<S_UNDO> >
PUBLIC	??$_Destroy_range@V?$allocator@US_UNDO@@@std@@@std@@YAXPEAUS_UNDO@@QEAU1@AEAV?$allocator@US_UNDO@@@0@@Z ; std::_Destroy_range<std::allocator<S_UNDO> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@PEAU1@_KAEAV?$allocator@US_UNDO@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<S_UNDO> >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$_Allocate_for_capacity@$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAPEADAEAV?$allocator@D@1@AEA_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Allocate_for_capacity<0>
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$exchange@PEAV_Facet_base@std@@$$T@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEA$$T@Z ; std::exchange<std::_Facet_base *,std::nullptr_t>
PUBLIC	??$addressof@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::addressof<std::basic_ostream<char,std::char_traits<char> > >
PUBLIC	??$_Float_put_desired_precision@O@std@@YAH_JH@Z	; std::_Float_put_desired_precision<long double>
PUBLIC	??$isfinite@O@@YA_NO@Z				; isfinite<long double>
PUBLIC	??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput_v3<0>
PUBLIC	??$_Float_put_desired_precision@N@std@@YAH_JH@Z	; std::_Float_put_desired_precision<double>
PUBLIC	??$isfinite@N@@YA_NN@Z				; isfinite<double>
PUBLIC	??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
PUBLIC	?decimal_point@?$numpunct@D@std@@QEBADXZ	; std::numpunct<char>::decimal_point
PUBLIC	?thousands_sep@?$numpunct@D@std@@QEBADXZ	; std::numpunct<char>::thousands_sep
PUBLIC	?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::grouping
PUBLIC	?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::falsename
PUBLIC	?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::truename
PUBLIC	??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z	; std::numpunct<char>::numpunct<char>
PUBLIC	?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::numpunct<char>::_Getcat
PUBLIC	??1?$numpunct@D@std@@MEAA@XZ			; std::numpunct<char>::~numpunct<char>
PUBLIC	?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z ; std::numpunct<char>::_Init
PUBLIC	?do_decimal_point@?$numpunct@D@std@@MEBADXZ	; std::numpunct<char>::do_decimal_point
PUBLIC	?do_thousands_sep@?$numpunct@D@std@@MEBADXZ	; std::numpunct<char>::do_thousands_sep
PUBLIC	?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::do_grouping
PUBLIC	?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::do_falsename
PUBLIC	?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::do_truename
PUBLIC	?_Tidy@?$numpunct@D@std@@AEAAXXZ		; std::numpunct<char>::_Tidy
PUBLIC	??_G?$numpunct@D@std@@MEAAPEAXI@Z		; std::numpunct<char>::`scalar deleting destructor'
PUBLIC	??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$_Max_limit@_J@std@@YA_JXZ			; std::_Max_limit<__int64>
PUBLIC	??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBA@QEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z ; std::_Construct_in_place<char *,char * &>
PUBLIC	??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z ; std::forward<std::_Facet_base * &>
PUBLIC	??$_Get_unwrapped@AEBQEAUS_UNDO@@@std@@YA?A_TAEBQEAUS_UNDO@@@Z ; std::_Get_unwrapped<S_UNDO * const &>
PUBLIC	??$move@AEAUS_UNDO@@@std@@YA$$QEAUS_UNDO@@AEAU1@@Z ; std::move<S_UNDO &>
PUBLIC	??$_Unfancy@US_UNDO@@@std@@YAPEAUS_UNDO@@PEAU1@@Z ; std::_Unfancy<S_UNDO>
PUBLIC	??$_Copy_memmove@PEAUS_UNDO@@PEAU1@@std@@YAPEAUS_UNDO@@PEAU1@00@Z ; std::_Copy_memmove<S_UNDO *,S_UNDO *>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAA@PEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Uninitialized_backout_al<std::allocator<S_UNDO> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::~_Uninitialized_backout_al<std::allocator<S_UNDO> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAPEAUS_UNDO@@XZ ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Release
PUBLIC	??$_Emplace_back@US_UNDO@@@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAX$$QEAUS_UNDO@@@Z ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Emplace_back<S_UNDO>
PUBLIC	??1_Reallocation_guard@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Reallocation_guard::~_Reallocation_guard
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Emplace_back<>
PUBLIC	??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<char> >
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * const &>
PUBLIC	??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z	; std::forward<char * &>
PUBLIC	??$?0$0A@@id@locale@std@@QEAA@XZ		; std::locale::id::id<0>
PUBLIC	??$max@_K@std@@YAAEB_KAEB_K0@Z			; std::max<unsigned __int64>
PUBLIC	??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z		; std::_Deallocate<16>
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_To_address@PEAUS_UNDO@@@std@@YA?A_PAEBQEAUS_UNDO@@@Z ; std::_To_address<S_UNDO *>
PUBLIC	??$move@AEAPEAUS_UNDO@@@std@@YA$$QEAPEAUS_UNDO@@AEAPEAU1@@Z ; std::move<S_UNDO * &>
PUBLIC	??$_Copy_memmove_tail@PEAUS_UNDO@@@std@@YAPEAUS_UNDO@@QEBDQEAU1@_K2@Z ; std::_Copy_memmove_tail<S_UNDO *>
PUBLIC	??$forward@US_UNDO@@@std@@YA$$QEAUS_UNDO@@AEAU1@@Z ; std::forward<S_UNDO>
PUBLIC	??$construct@US_UNDO@@U1@@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SAXAEAV?$allocator@US_UNDO@@@1@QEAUS_UNDO@@$$QEAU3@@Z ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::construct<S_UNDO,S_UNDO>
PUBLIC	??$construct@US_UNDO@@$$V@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SAXAEAV?$allocator@US_UNDO@@@1@QEAUS_UNDO@@@Z ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::construct<S_UNDO>
PUBLIC	??$_Get_size_of_n@$0CNI@@std@@YA_K_K@Z		; std::_Get_size_of_n<728>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
PUBLIC	??R<lambda_b986da8d428e4af07c64af60eec09b61>@@QEBA@QEADQEBD_K22D@Z ; <lambda_b986da8d428e4af07c64af60eec09b61>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_b986da8d428e4af07c64af60eec09b61>,unsigned __int64,unsigned __int64,char>
PUBLIC	??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBA@QEADQEBD_K2D@Z ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
PUBLIC	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::numpunct<char> >::~_Tidy_guard<std::numpunct<char> >
PUBLIC	??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
PUBLIC	??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z	; std::_Maklocchr<char>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24
PUBLIC	??_7_System_error@std@@6B@			; std::_System_error::`vftable'
PUBLIC	??_C@_02LMMGGCAJ@?3?5@				; `string'
PUBLIC	??_7system_error@std@@6B@			; std::system_error::`vftable'
PUBLIC	??_R0?AVsystem_error@std@@@8			; std::system_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40
PUBLIC	??_R0?AV_System_error@std@@@8			; std::_System_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40
PUBLIC	??_7_Iostream_error_category2@std@@6B@		; std::_Iostream_error_category2::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream@			; `string'
PUBLIC	?_Iostream_error@?4??message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB ; `std::_Iostream_error_category2::message'::`5'::_Iostream_error
PUBLIC	??_7bad_cast@std@@6B@				; std::bad_cast::`vftable'
PUBLIC	??_C@_08EPJLHIJG@bad?5cast@			; `string'
PUBLIC	_TI2?AVbad_cast@std@@
PUBLIC	_CTA2?AVbad_cast@std@@
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
PUBLIC	??_7_Facet_base@std@@6B@			; std::_Facet_base::`vftable'
PUBLIC	??_C@_0BA@ELKIONDK@bad?5locale?5name@		; `string'
PUBLIC	??_C@_05LAPONLG@false@				; `string'
PUBLIC	??_C@_04LOAJBDKD@true@				; `string'
PUBLIC	??_7facet@locale@std@@6B@			; std::locale::facet::`vftable'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7ctype_base@std@@6B@				; std::ctype_base::`vftable'
PUBLIC	??_7?$ctype@D@std@@6B@				; std::ctype<char>::`vftable'
PUBLIC	??_7failure@ios_base@std@@6B@			; std::ios_base::failure::`vftable'
PUBLIC	??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@	; `string'
PUBLIC	??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@	; `string'
PUBLIC	??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@	; `string'
PUBLIC	_TI5?AVfailure@ios_base@std@@
PUBLIC	_CTA5?AVfailure@ios_base@std@@
PUBLIC	??_R0?AVfailure@ios_base@std@@@8		; std::ios_base::failure `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QEAA@AEBV012@@Z40
PUBLIC	?KNIGHT_DELTAS@@3QBHB				; KNIGHT_DELTAS
PUBLIC	?KING_DELTAS@@3V?$array@H$07@std@@B		; KING_DELTAS
PUBLIC	?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B	; FILE_RANK_LOOKUPS
PUBLIC	?MAILBOX_MAPS@@3UMailboxMaps@@B			; MAILBOX_MAPS
PUBLIC	??_C@_0BE@MEEEPPEO@is_playable?$CIsquare?$CJ@	; `string'
PUBLIC	??_C@_0P@PPNCGEME@?6?5?5Condition?3?5@		; `string'
PUBLIC	??_C@_0BM@BPCCCNAP@Position?3?3add_piece_to_list@ ; `string'
PUBLIC	??_C@_0O@PIFLCCFC@?6?5?5Function?3?5@		; `string'
PUBLIC	??_C@_09EKACCMND@?6?5?5Line?3?5@		; `string'
PUBLIC	??_C@_0DN@KBGLLII@C?3?2Users?2m_lad?2source?2repos?2MTD@ ; `string'
PUBLIC	??_C@_09JELCCAPN@?6?5?5File?3?5@		; `string'
PUBLIC	??_C@_0CD@DGKNEBEB@Cannot?5add?5piece?5to?5invalid?5squ@ ; `string'
PUBLIC	??_C@_0BD@POIAKKDB@ASSERTION?5FAILED?3?5@	; `string'
PUBLIC	??_C@_0DC@KHBHEAPL@pCount?$FLcolor_idx?$FN?$FLtype_idx?$FN?5?$DM?5M@ ; `string'
PUBLIC	??_C@_0CK@LHFJFDDN@Too?5many?5pieces?5of?5this?5type?5on@ ; `string'
PUBLIC	??_C@_0CB@EGEAGGNG@Position?3?3remove_piece_from_lis@ ; `string'
PUBLIC	??_C@_0CI@PFOHCAPB@Cannot?5remove?5piece?5from?5invali@ ; `string'
PUBLIC	??_C@_0CA@LILOMOJN@pCount?$FLcolor_idx?$FN?$FLtype_idx?$FN?5?$DO?50@ ; `string'
PUBLIC	??_C@_0CK@PIOMOIAC@Cannot?5remove?5piece?5from?5empty?5@ ; `string'
PUBLIC	??_C@_0CN@JFKCPLIP@Piece?5not?5found?5in?5piece?5list?5d@ ; `string'
PUBLIC	??_C@_0BJ@IEJBKKEH@is_playable?$CIfrom_square?$CJ@ ; `string'
PUBLIC	??_C@_0BN@EOFLAMKG@Position?3?3move_piece_in_list@ ; `string'
PUBLIC	??_C@_0CF@LHMGNHND@Invalid?5source?5square?5for?5piece@ ; `string'
PUBLIC	??_C@_0BH@DAFNLHPP@is_playable?$CIto_square?$CJ@ ; `string'
PUBLIC	??_C@_0CK@IABJNNHF@Invalid?5destination?5square?5for?5@ ; `string'
PUBLIC	??_C@_0BK@BNNIJGEB@is_playable?$CIm?4get_from?$CI?$CJ?$CJ@ ; `string'
PUBLIC	??_C@_0BO@LNOOKDOM@Position?3?3make_move_with_undo@ ; `string'
PUBLIC	??_C@_0CE@NPCAPDGH@Move?5source?5square?5must?5be?5play@ ; `string'
PUBLIC	??_C@_0BI@MKMFONOJ@is_playable?$CIm?4get_to?$CI?$CJ?$CJ@ ; `string'
PUBLIC	??_C@_0CJ@LCBDJEPI@Move?5destination?5square?5must?5be@ ; `string'
PUBLIC	??_C@_0BC@KKDIGLCF@?5but?5found?5piece?5@	; `string'
PUBLIC	??_C@_0BB@BMFLINMC@?5rook?5at?5square?5@	; `string'
PUBLIC	??_C@_05PMAELIEO@white@				; `string'
PUBLIC	??_C@_05BIMBDNDC@black@				; `string'
PUBLIC	??_C@_0BK@LOLBDCGO@CASTLING?5ERROR?3?5Expected?5@ ; `string'
PUBLIC	?_Static@?1???$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@1@XZ@4U?$_Constexpr_immortalize_impl@V_Iostream_error_category2@std@@@1@A ; `std::_Immortalize_memcpy_image<std::_Iostream_error_category2>'::`2'::_Static
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::ctype<char> >::_Psave
PUBLIC	?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
PUBLIC	??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`vftable'
PUBLIC	?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave
PUBLIC	??_C@_02BBAHNLBA@?$CFp@				; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	??_7?$numpunct@D@std@@6B@			; std::numpunct<char>::`vftable'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_C@_02MDKMJEGG@eE@				; `string'
PUBLIC	??_C@_02OOPEBDOJ@pP@				; `string'
PUBLIC	?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::numpunct<char> >::_Psave
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error@std@@6B@			; std::_System_error::`RTTI Complete Object Locator'
PUBLIC	??_R3_System_error@std@@8			; std::_System_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error@std@@8			; std::_System_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error@std@@8		; std::_System_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4system_error@std@@6B@			; std::system_error::`RTTI Complete Object Locator'
PUBLIC	??_R3system_error@std@@8			; std::system_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2system_error@std@@8			; std::system_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@system_error@std@@8		; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category2@std@@6B@		; std::_Iostream_error_category2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category2@std@@@8	; std::_Iostream_error_category2 `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category2@std@@8		; std::_Iostream_error_category2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category2@std@@8		; std::_Iostream_error_category2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category2@std@@8	; std::_Iostream_error_category2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_cast@std@@6B@				; std::bad_cast::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_cast@std@@8				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_cast@std@@8				; std::bad_cast::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_cast@std@@8			; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Facet_base@std@@6B@			; std::_Facet_base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Facet_base@std@@@8			; std::_Facet_base `RTTI Type Descriptor'
PUBLIC	??_R3_Facet_base@std@@8				; std::_Facet_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Facet_base@std@@8				; std::_Facet_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Facet_base@std@@8		; std::_Facet_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4facet@locale@std@@6B@			; std::locale::facet::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVfacet@locale@std@@@8			; std::locale::facet `RTTI Type Descriptor'
PUBLIC	??_R3facet@locale@std@@8			; std::locale::facet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2facet@locale@std@@8			; std::locale::facet::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@facet@locale@std@@8		; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EA@_Crt_new_delete@std@@8		; std::_Crt_new_delete::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AU_Crt_new_delete@std@@@8			; std::_Crt_new_delete `RTTI Type Descriptor'
PUBLIC	??_R3_Crt_new_delete@std@@8			; std::_Crt_new_delete::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Crt_new_delete@std@@8			; std::_Crt_new_delete::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Crt_new_delete@std@@8		; std::_Crt_new_delete::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ctype_base@std@@6B@			; std::ctype_base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUctype_base@std@@@8			; std::ctype_base `RTTI Type Descriptor'
PUBLIC	??_R3ctype_base@std@@8				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ctype_base@std@@8				; std::ctype_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ctype_base@std@@8			; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ctype@D@std@@6B@				; std::ctype<char>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ctype@D@std@@@8			; std::ctype<char> `RTTI Type Descriptor'
PUBLIC	??_R3?$ctype@D@std@@8				; std::ctype<char>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ctype@D@std@@8				; std::ctype<char>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ctype@D@std@@8			; std::ctype<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4failure@ios_base@std@@6B@			; std::ios_base::failure::`RTTI Complete Object Locator'
PUBLIC	??_R3failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@failure@ios_base@std@@8		; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$numpunct@D@std@@6B@			; std::numpunct<char>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$numpunct@D@std@@@8			; std::numpunct<char> `RTTI Type Descriptor'
PUBLIC	??_R3?$numpunct@D@std@@8			; std::numpunct<char>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$numpunct@D@std@@8			; std::numpunct<char>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$numpunct@D@std@@8		; std::numpunct<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@4202a05f20000000
PUBLIC	__xmm@000000000000000f0000000000000000
PUBLIC	__xmm@7fffffffffffffff7fffffffffffffff
EXTRN	_purecall:PROC
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	??_V@YAXPEAX@Z:PROC				; operator delete[]
EXTRN	__std_terminate:PROC
EXTRN	_invoke_watson:PROC
EXTRN	??0_Lockit@std@@QEAA@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QEAA@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	strcspn:PROC
EXTRN	frexp:PROC
EXTRN	calloc:PROC
EXTRN	free:PROC
EXTRN	abort:PROC
EXTRN	__stdio_common_vsprintf_s:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPEBD@Z:PROC		; std::_Xout_of_range
EXTRN	?_Xruntime_error@std@@YAXPEBD@Z:PROC		; std::_Xruntime_error
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	??_Eruntime_error@std@@UEAAPEAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	??_E_System_error@std@@UEAAPEAXI@Z:PROC		; std::_System_error::`vector deleting destructor'
EXTRN	??_Esystem_error@std@@UEAAPEAXI@Z:PROC		; std::system_error::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPEBDH@Z:PROC		; std::_Syserror_map
EXTRN	??_E_Iostream_error_category2@std@@UEAAPEAXI@Z:PROC ; std::_Iostream_error_category2::`vector deleting destructor'
EXTRN	??_Ebad_cast@std@@UEAAPEAXI@Z:PROC		; std::bad_cast::`vector deleting destructor'
EXTRN	??_E_Facet_base@std@@UEAAPEAXI@Z:PROC		; std::_Facet_base::`vector deleting destructor'
EXTRN	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z:PROC ; std::_Facet_Register
EXTRN	localeconv:PROC
EXTRN	_Getctype:PROC
EXTRN	_Getcvt:PROC
EXTRN	_Tolower:PROC
EXTRN	_Toupper:PROC
EXTRN	?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z:PROC ; std::_Locinfo::_Locinfo_ctor
EXTRN	?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z:PROC	; std::_Locinfo::_Locinfo_dtor
EXTRN	??_Efacet@locale@std@@MEAAPEAXI@Z:PROC		; std::locale::facet::`vector deleting destructor'
EXTRN	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ:PROC ; std::locale::_Getgloballocale
EXTRN	??_Ectype_base@std@@UEAAPEAXI@Z:PROC		; std::ctype_base::`vector deleting destructor'
EXTRN	??_E?$ctype@D@std@@MEAAPEAXI@Z:PROC		; std::ctype<char>::`vector deleting destructor'
EXTRN	??_Efailure@ios_base@std@@UEAAPEAXI@Z:PROC	; std::ios_base::failure::`vector deleting destructor'
EXTRN	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z:PROC ; S_MOVE::encode_move
EXTRN	?save_derived_state@Position@@QEAAXAEAUS_UNDO@@@Z:PROC ; Position::save_derived_state
EXTRN	?update_zobrist_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1EH@Z:PROC ; Position::update_zobrist_for_move
EXTRN	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z:PROC ; SqAttacked
EXTRN	??_E?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z:PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`vector deleting destructor'
EXTRN	??_E?$numpunct@D@std@@MEAAPEAXI@Z:PROC		; std::numpunct<char>::`vector deleting destructor'
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	_dclass:PROC
EXTRN	_ldclass:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	strlen:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	?_Id_cnt@id@locale@std@@0HA:DWORD		; std::locale::id::_Id_cnt
EXTRN	?id@?$ctype@D@std@@2V0locale@2@A:QWORD		; std::ctype<char>::id
EXTRN	?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE ; std::cout
EXTRN	?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE ; std::cerr
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::ctype<char> >::_Psave
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A DQ 01H DUP (?) ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DQ 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::numpunct<char> >::_Psave
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN14
	DD	imagerel $LN14+72
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?fpclassify@@YAHN@Z DD imagerel $LN6
	DD	imagerel $LN6+15
	DD	imagerel $unwind$?fpclassify@@YAHN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?fpclassify@@YAHO@Z DD imagerel $LN6
	DD	imagerel $LN6+15
	DD	imagerel $unwind$?fpclassify@@YAHO@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsprintf_s_l DD imagerel $LN4
	DD	imagerel $LN4+100
	DD	imagerel $unwind$_vsprintf_s_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sprintf_s DD imagerel $LN6
	DD	imagerel $LN6+87
	DD	imagerel $unwind$sprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN6
	DD	imagerel $LN6+23
	DD	imagerel $unwind$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN6
	DD	imagerel $LN6+23
	DD	imagerel $unwind$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+61
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN6
	DD	imagerel $LN6+50
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+66
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN9
	DD	imagerel $LN9+60
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN17
	DD	imagerel $LN17+66
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN14
	DD	imagerel $LN14+60
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN22
	DD	imagerel $LN22+66
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+32
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN7
	DD	imagerel $LN7+61
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen_string@std@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xlen_string@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN17
	DD	imagerel $LN17+80
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD imagerel $LN7
	DD	imagerel $LN7+21
	DD	imagerel $unwind$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN56
	DD	imagerel $LN56+192
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD_K@Z DD imagerel $LN18
	DD	imagerel $LN18+39
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD imagerel $LN21
	DD	imagerel $LN21+68
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DD imagerel $LN48
	DD	imagerel $LN48+104
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DD imagerel $LN48+104
	DD	imagerel $LN48+179
	DD	imagerel $chain$0$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DD imagerel $LN48+179
	DD	imagerel $LN48+210
	DD	imagerel $chain$1$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Deallocate_for_capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXAEAV?$allocator@D@2@QEAD_K@Z DD imagerel $LN21
	DD	imagerel $LN21+81
	DD	imagerel $unwind$?_Deallocate_for_capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXAEAV?$allocator@D@2@QEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN50
	DD	imagerel $LN50+156
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z DD imagerel $LN53
	DD	imagerel $LN53+156
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN86
	DD	imagerel $LN86+111
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN86+111
	DD	imagerel $LN86+321
	DD	imagerel $chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN86+321
	DD	imagerel $LN86+342
	DD	imagerel $chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN86+342
	DD	imagerel $LN86+367
	DD	imagerel $chain$3$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN86+367
	DD	imagerel $LN86+373
	DD	imagerel $chain$4$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN8
	DD	imagerel $LN8+48
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN86
	DD	imagerel $LN86+118
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN86+118
	DD	imagerel $LN86+328
	DD	imagerel $chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN86+328
	DD	imagerel $LN86+349
	DD	imagerel $chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN86+349
	DD	imagerel $LN86+374
	DD	imagerel $chain$3$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN86+374
	DD	imagerel $LN86+380
	DD	imagerel $chain$4$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z DD imagerel $LN28
	DD	imagerel $LN28+53
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z DD imagerel $LN28+53
	DD	imagerel $LN28+137
	DD	imagerel $chain$0$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z DD imagerel $LN28+137
	DD	imagerel $LN28+186
	DD	imagerel $chain$1$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN32
	DD	imagerel $LN32+113
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN20
	DD	imagerel $LN20+81
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@AEBV01@@Z DD imagerel $LN9
	DD	imagerel $LN9+60
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gruntime_error@std@@UEAAPEAXI@Z DD imagerel $LN17
	DD	imagerel $LN17+66
	DD	imagerel $unwind$??_Gruntime_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z DD imagerel $LN16
	DD	imagerel $LN16+63
	DD	imagerel $unwind$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN7
	DD	imagerel $LN7+31
	DD	imagerel $unwind$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD imagerel $LN125
	DD	imagerel $LN125+278
	DD	imagerel $unwind$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN226
	DD	imagerel $LN226+620
	DD	imagerel $unwind$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_System_error@std@@QEAA@AEBV01@@Z DD imagerel $LN14
	DD	imagerel $LN14+77
	DD	imagerel $unwind$??0_System_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_System_error@std@@UEAAPEAXI@Z DD imagerel $LN22
	DD	imagerel $LN22+66
	DD	imagerel $unwind$??_G_System_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD imagerel $LN59
	DD	imagerel $LN59+222
	DD	imagerel $unwind$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0system_error@std@@QEAA@AEBV01@@Z DD imagerel $LN19
	DD	imagerel $LN19+87
	DD	imagerel $unwind$??0system_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gsystem_error@std@@UEAAPEAXI@Z DD imagerel $LN27
	DD	imagerel $LN27+66
	DD	imagerel $unwind$??_Gsystem_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD imagerel $LN70
	DD	imagerel $LN70+182
	DD	imagerel $unwind$?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_Iostream_error_category2@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+33
	DD	imagerel $unwind$??_G_Iostream_error_category2@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_cast@std@@QEAA@AEBV01@@Z DD imagerel $LN9
	DD	imagerel $LN9+60
	DD	imagerel $unwind$??0bad_cast@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_cast@std@@UEAAPEAXI@Z DD imagerel $LN17
	DD	imagerel $LN17+66
	DD	imagerel $unwind$??_Gbad_cast@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_cast@std@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+32
	DD	imagerel $unwind$?_Throw_bad_cast@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_Facet_base@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+43
	DD	imagerel $unwind$??_G_Facet_base@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Locinfo@std@@QEAA@PEBD@Z DD imagerel $LN32
	DD	imagerel $LN32+119
	DD	imagerel $unwind$??0_Locinfo@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Locinfo@std@@QEAA@XZ DD imagerel $LN48
	DD	imagerel $LN48+146
	DD	imagerel $unwind$??1_Locinfo@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ DD imagerel $LN4
	DD	imagerel $LN4+42
	DD	imagerel $unwind$?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Yarn@D@std@@QEAA@XZ DD imagerel $LN12
	DD	imagerel $LN12+35
	DD	imagerel $unwind$??1?$_Yarn@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Yarn@D@std@@AEAAXXZ DD imagerel $LN9
	DD	imagerel $LN9+35
	DD	imagerel $unwind$?_Tidy@?$_Yarn@D@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Yarn@_W@std@@QEAA@XZ DD imagerel $LN12
	DD	imagerel $LN12+35
	DD	imagerel $unwind$??1?$_Yarn@_W@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Yarn@_W@std@@AEAAXXZ DD imagerel $LN9
	DD	imagerel $LN9+35
	DD	imagerel $unwind$?_Tidy@?$_Yarn@_W@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gfacet@locale@std@@MEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+43
	DD	imagerel $unwind$??_Gfacet@locale@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0locale@std@@QEAA@AEBV01@@Z DD imagerel $LN6
	DD	imagerel $LN6+32
	DD	imagerel $unwind$??0locale@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1locale@std@@QEAA@XZ DD imagerel $LN9
	DD	imagerel $LN9+50
	DD	imagerel $unwind$??1locale@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+97
	DD	imagerel $unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gctype_base@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+43
	DD	imagerel $unwind$??_Gctype_base@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+57
	DD	imagerel $unwind$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel $LN118
	DD	imagerel $LN118+438
	DD	imagerel $unwind$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+32
	DD	imagerel $unwind$?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ctype@D@std@@MEAA@XZ DD imagerel $LN15
	DD	imagerel $LN15+73
	DD	imagerel $unwind$??1?$ctype@D@std@@MEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z DD imagerel $LN6
	DD	imagerel $LN6+40
	DD	imagerel $unwind$?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$ctype@D@std@@IEAAXXZ DD imagerel $LN12
	DD	imagerel $LN12+64
	DD	imagerel $unwind$?_Tidy@?$ctype@D@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN15
	DD	imagerel $LN15+21
	DD	imagerel $unwind$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN15+21
	DD	imagerel $LN15+58
	DD	imagerel $chain$0$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN15+58
	DD	imagerel $LN15+72
	DD	imagerel $chain$1$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN15
	DD	imagerel $LN15+21
	DD	imagerel $unwind$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN15+21
	DD	imagerel $LN15+58
	DD	imagerel $chain$0$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN15+58
	DD	imagerel $LN15+72
	DD	imagerel $chain$1$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z DD imagerel $LN4
	DD	imagerel $LN4+29
	DD	imagerel $unwind$?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z DD imagerel $LN4
	DD	imagerel $LN4+31
	DD	imagerel $unwind$?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$ctype@D@std@@MEAAPEAXI@Z DD imagerel $LN23
	DD	imagerel $LN23+106
	DD	imagerel $unwind$??_G?$ctype@D@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DD imagerel $LN49
	DD	imagerel $LN49+273
	DD	imagerel $unwind$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DD imagerel $LN63
	DD	imagerel $LN63+245
	DD	imagerel $unwind$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0failure@ios_base@std@@QEAA@AEBV012@@Z DD imagerel $LN24
	DD	imagerel $LN24+87
	DD	imagerel $unwind$??0failure@ios_base@std@@QEAA@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gfailure@ios_base@std@@UEAAPEAXI@Z DD imagerel $LN32
	DD	imagerel $LN32+66
	DD	imagerel $unwind$??_Gfailure@ios_base@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@ios_base@std@@QEAAXH_N@Z DD imagerel $LN15
	DD	imagerel $LN15+130
	DD	imagerel $unwind$?clear@ios_base@std@@QEAAXH_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ DD imagerel $LN9
	DD	imagerel $LN9+36
	DD	imagerel $unwind$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0S_MOVE@@QEAA@HHW4PieceType@@_N101@Z DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$??0S_MOVE@@QEAA@HHW4PieceType@@_N101@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?make_move@@YA?AUS_MOVE@@HH@Z DD imagerel $LN6
	DD	imagerel $LN6+64
	DD	imagerel $unwind$?make_move@@YA?AUS_MOVE@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?make_capture@@YA?AUS_MOVE@@HHW4PieceType@@@Z DD imagerel $LN6
	DD	imagerel $LN6+70
	DD	imagerel $unwind$?make_capture@@YA?AUS_MOVE@@HHW4PieceType@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?make_en_passant@@YA?AUS_MOVE@@HH@Z DD imagerel $LN6
	DD	imagerel $LN6+65
	DD	imagerel $unwind$?make_en_passant@@YA?AUS_MOVE@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?make_pawn_start@@YA?AUS_MOVE@@HH@Z DD imagerel $LN6
	DD	imagerel $LN6+64
	DD	imagerel $unwind$?make_pawn_start@@YA?AUS_MOVE@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?make_promotion@@YA?AUS_MOVE@@HHW4PieceType@@0@Z DD imagerel $LN6
	DD	imagerel $LN6+67
	DD	imagerel $unwind$?make_promotion@@YA?AUS_MOVE@@HHW4PieceType@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?make_castle@@YA?AUS_MOVE@@HH@Z DD imagerel $LN6
	DD	imagerel $LN6+64
	DD	imagerel $unwind$?make_castle@@YA?AUS_MOVE@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@US_UNDO@@@std@@QEAAXQEAUS_UNDO@@_K@Z DD imagerel $LN17
	DD	imagerel $LN17+84
	DD	imagerel $unwind$?deallocate@?$allocator@US_UNDO@@@std@@QEAAXQEAUS_UNDO@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@US_UNDO@@@std@@QEAAPEAUS_UNDO@@_K@Z DD imagerel $LN10
	DD	imagerel $LN10+41
	DD	imagerel $unwind$?allocate@?$allocator@US_UNDO@@@std@@QEAAPEAUS_UNDO@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXQEAUS_UNDO@@_K1@Z DD imagerel $LN25
	DD	imagerel $LN25+196
	DD	imagerel $unwind$?_Change_array@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXQEAUS_UNDO@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?update_derived_state_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1@Z DD imagerel $LN214
	DD	imagerel $LN214+102
	DD	imagerel $unwind$?update_derived_state_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?update_derived_state_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1@Z DD imagerel $LN214+102
	DD	imagerel $LN214+272
	DD	imagerel $chain$2$?update_derived_state_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?update_derived_state_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1@Z DD imagerel $LN214+272
	DD	imagerel $LN214+607
	DD	imagerel $chain$3$?update_derived_state_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?add_piece_to_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z DD imagerel $LN60
	DD	imagerel $LN60+459
	DD	imagerel $unwind$?add_piece_to_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z DD imagerel $LN115
	DD	imagerel $LN115+72
	DD	imagerel $unwind$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z DD imagerel $LN115+72
	DD	imagerel $LN115+245
	DD	imagerel $chain$1$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z DD imagerel $LN115+245
	DD	imagerel $LN115+250
	DD	imagerel $chain$2$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z DD imagerel $LN115+250
	DD	imagerel $LN115+596
	DD	imagerel $chain$3$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z DD imagerel $LN115+596
	DD	imagerel $LN115+769
	DD	imagerel $chain$4$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move_piece_in_list@Position@@QEAAXW4Color@@W4PieceType@@HH@Z DD imagerel $LN76
	DD	imagerel $LN76+543
	DD	imagerel $unwind$?move_piece_in_list@Position@@QEAAXW4Color@@W4PieceType@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z DD imagerel $LN651
	DD	imagerel $LN651+127
	DD	imagerel $unwind$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z DD imagerel $LN651+127
	DD	imagerel $LN651+665
	DD	imagerel $chain$2$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z DD imagerel $LN651+665
	DD	imagerel $LN651+698
	DD	imagerel $chain$3$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z DD imagerel $LN651+698
	DD	imagerel $LN651+715
	DD	imagerel $chain$4$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z DD imagerel $LN651+715
	DD	imagerel $LN651+1568
	DD	imagerel $chain$6$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z DD imagerel $LN651+1568
	DD	imagerel $LN651+1577
	DD	imagerel $chain$7$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z DD imagerel $LN651+1577
	DD	imagerel $LN651+1780
	DD	imagerel $chain$8$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$9$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z DD imagerel $LN651+1780
	DD	imagerel $LN651+2126
	DD	imagerel $chain$9$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?undo_move@Position@@QEAA_NXZ DD imagerel $LN301
	DD	imagerel $LN301+35
	DD	imagerel $unwind$?undo_move@Position@@QEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?undo_move@Position@@QEAA_NXZ DD imagerel $LN301+35
	DD	imagerel $LN301+80
	DD	imagerel $chain$2$?undo_move@Position@@QEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?undo_move@Position@@QEAA_NXZ DD imagerel $LN301+80
	DD	imagerel $LN301+430
	DD	imagerel $chain$4$?undo_move@Position@@QEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?undo_move@Position@@QEAA_NXZ DD imagerel $LN301+430
	DD	imagerel $LN301+913
	DD	imagerel $chain$5$?undo_move@Position@@QEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?undo_move@Position@@QEAA_NXZ DD imagerel $LN301+913
	DD	imagerel $LN301+1089
	DD	imagerel $chain$6$?undo_move@Position@@QEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DD imagerel $LN24
	DD	imagerel $LN24+115
	DD	imagerel $unwind$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD imagerel $LN35
	DD	imagerel $LN35+177
	DD	imagerel $unwind$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA DD imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DD	imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA+30
	DD	imagerel $unwind$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z DD imagerel $LN141
	DD	imagerel $LN141+769
	DD	imagerel $unwind$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$8@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA DD imagerel ?catch$8@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA
	DD	imagerel ?catch$8@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA+91
	DD	imagerel $unwind$?catch$8@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD imagerel $LN93
	DD	imagerel $LN93+448
	DD	imagerel $unwind$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA DD imagerel ?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
	DD	imagerel ?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA+91
	DD	imagerel $unwind$?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD imagerel $LN98
	DD	imagerel $LN98+321
	DD	imagerel $unwind$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$10@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA DD imagerel ?catch$10@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA
	DD	imagerel ?catch$10@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA+91
	DD	imagerel $unwind$?catch$10@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN150
	DD	imagerel $LN150+729
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+91
	DD	imagerel $unwind$?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel $LN24
	DD	imagerel $LN24+152
	DD	imagerel $unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?add_promotion_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z DD imagerel $LN54
	DD	imagerel $LN54+146
	DD	imagerel $unwind$?add_promotion_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_all_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@@Z DD imagerel $LN6
	DD	imagerel $LN6+134
	DD	imagerel $unwind$?generate_all_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_pawn_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN562
	DD	imagerel $LN562+72
	DD	imagerel $unwind$?generate_pawn_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?generate_pawn_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN562+72
	DD	imagerel $LN562+2210
	DD	imagerel $chain$4$?generate_pawn_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?generate_pawn_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN562+2210
	DD	imagerel $LN562+2223
	DD	imagerel $chain$5$?generate_pawn_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_knight_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN94
	DD	imagerel $LN94+51
	DD	imagerel $unwind$?generate_knight_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?generate_knight_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN94+51
	DD	imagerel $LN94+444
	DD	imagerel $chain$3$?generate_knight_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?generate_knight_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN94+444
	DD	imagerel $LN94+455
	DD	imagerel $chain$4$?generate_knight_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_bishop_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN4
	DD	imagerel $LN4+37
	DD	imagerel $unwind$?generate_bishop_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_rook_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN4
	DD	imagerel $LN4+37
	DD	imagerel $unwind$?generate_rook_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_queen_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN4
	DD	imagerel $LN4+37
	DD	imagerel $unwind$?generate_queen_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN309
	DD	imagerel $LN309+39
	DD	imagerel $unwind$?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN309+39
	DD	imagerel $LN309+369
	DD	imagerel $chain$3$?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN309+369
	DD	imagerel $LN309+1124
	DD	imagerel $chain$4$?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN309+1124
	DD	imagerel $LN309+1134
	DD	imagerel $chain$5$?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z DD imagerel $LN158
	DD	imagerel $LN158+70
	DD	imagerel $unwind$?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z DD imagerel $LN158+70
	DD	imagerel $LN158+436
	DD	imagerel $chain$5$?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z DD imagerel $LN158+436
	DD	imagerel $LN158+446
	DD	imagerel $chain$6$?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z DD imagerel $LN158+446
	DD	imagerel $LN158+748
	DD	imagerel $chain$7$?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z DD imagerel $LN57
	DD	imagerel $LN57+198
	DD	imagerel $unwind$?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z DD imagerel $LN57+198
	DD	imagerel $LN57+354
	DD	imagerel $chain$0$?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z DD imagerel $LN57+354
	DD	imagerel $LN57+389
	DD	imagerel $chain$1$?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z DD imagerel $LN57+389
	DD	imagerel $LN57+414
	DD	imagerel $chain$2$?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_promotion_batch@PawnOptimizations@@YAXAEAUS_MOVELIST@@HHW4PieceType@@@Z DD imagerel $LN43
	DD	imagerel $LN43+300
	DD	imagerel $unwind$?generate_promotion_batch@PawnOptimizations@@YAXAEAUS_MOVELIST@@HHW4PieceType@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN227
	DD	imagerel $LN227+47
	DD	imagerel $unwind$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN227+47
	DD	imagerel $LN227+153
	DD	imagerel $chain$2$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN227+153
	DD	imagerel $LN227+1213
	DD	imagerel $chain$4$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN227+1213
	DD	imagerel $LN227+1237
	DD	imagerel $chain$5$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN227+1237
	DD	imagerel $LN227+1249
	DD	imagerel $chain$6$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN320
	DD	imagerel $LN320+40
	DD	imagerel $unwind$?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN320+40
	DD	imagerel $LN320+396
	DD	imagerel $chain$3$?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN320+396
	DD	imagerel $LN320+1215
	DD	imagerel $chain$4$?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN320+1215
	DD	imagerel $LN320+1225
	DD	imagerel $chain$5$?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN488
	DD	imagerel $LN488+51
	DD	imagerel $unwind$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN488+51
	DD	imagerel $LN488+80
	DD	imagerel $chain$1$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN488+80
	DD	imagerel $LN488+2085
	DD	imagerel $chain$3$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN488+2085
	DD	imagerel $LN488+2101
	DD	imagerel $chain$4$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN488+2101
	DD	imagerel $LN488+2114
	DD	imagerel $chain$5$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+66
	DD	imagerel $LN57+164
	DD	imagerel $chain$0$??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+164
	DD	imagerel $LN57+283
	DD	imagerel $chain$2$??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+283
	DD	imagerel $LN57+294
	DD	imagerel $chain$3$??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+66
	DD	imagerel $LN57+164
	DD	imagerel $chain$0$??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+164
	DD	imagerel $LN57+283
	DD	imagerel $chain$2$??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+283
	DD	imagerel $LN57+294
	DD	imagerel $chain$3$??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+66
	DD	imagerel $LN57+164
	DD	imagerel $chain$0$??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+164
	DD	imagerel $LN57+283
	DD	imagerel $chain$2$??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+283
	DD	imagerel $LN57+294
	DD	imagerel $chain$3$??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+66
	DD	imagerel $LN57+164
	DD	imagerel $chain$0$??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+164
	DD	imagerel $LN57+283
	DD	imagerel $chain$2$??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+283
	DD	imagerel $LN57+294
	DD	imagerel $chain$3$??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+66
	DD	imagerel $LN57+164
	DD	imagerel $chain$0$??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+164
	DD	imagerel $LN57+283
	DD	imagerel $chain$2$??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+283
	DD	imagerel $LN57+294
	DD	imagerel $chain$3$??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+66
	DD	imagerel $LN57+164
	DD	imagerel $chain$0$??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+164
	DD	imagerel $LN57+283
	DD	imagerel $chain$2$??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+283
	DD	imagerel $LN57+294
	DD	imagerel $chain$3$??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+66
	DD	imagerel $LN57+164
	DD	imagerel $chain$0$??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+164
	DD	imagerel $LN57+283
	DD	imagerel $chain$2$??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+283
	DD	imagerel $LN57+294
	DD	imagerel $chain$3$??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+66
	DD	imagerel $LN57+164
	DD	imagerel $chain$0$??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+164
	DD	imagerel $LN57+283
	DD	imagerel $chain$2$??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN57+283
	DD	imagerel $LN57+294
	DD	imagerel $chain$3$??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN279
	DD	imagerel $LN279+56
	DD	imagerel $unwind$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN279+56
	DD	imagerel $LN279+99
	DD	imagerel $chain$0$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN279+99
	DD	imagerel $LN279+1301
	DD	imagerel $chain$4$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN279+1301
	DD	imagerel $LN279+1309
	DD	imagerel $chain$5$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN279+1309
	DD	imagerel $LN279+1322
	DD	imagerel $chain$6$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$generate_sliding_ray@$0L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$0L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$generate_sliding_ray@$0L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66+41
	DD	imagerel $LN66+334
	DD	imagerel $chain$2$??$generate_sliding_ray@$0L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$generate_sliding_ray@$0L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66+334
	DD	imagerel $LN66+347
	DD	imagerel $chain$3$??$generate_sliding_ray@$0L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$generate_sliding_ray@$08@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$08@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$generate_sliding_ray@$08@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66+41
	DD	imagerel $LN66+334
	DD	imagerel $chain$2$??$generate_sliding_ray@$08@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$generate_sliding_ray@$08@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66+334
	DD	imagerel $LN66+347
	DD	imagerel $chain$3$??$generate_sliding_ray@$08@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$generate_sliding_ray@$0?8@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$0?8@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$generate_sliding_ray@$0?8@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66+41
	DD	imagerel $LN66+334
	DD	imagerel $chain$2$??$generate_sliding_ray@$0?8@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$generate_sliding_ray@$0?8@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66+334
	DD	imagerel $LN66+347
	DD	imagerel $chain$3$??$generate_sliding_ray@$0?8@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$generate_sliding_ray@$0?L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$0?L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$generate_sliding_ray@$0?L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66+41
	DD	imagerel $LN66+334
	DD	imagerel $chain$2$??$generate_sliding_ray@$0?L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$generate_sliding_ray@$0?L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66+334
	DD	imagerel $LN66+347
	DD	imagerel $chain$3$??$generate_sliding_ray@$0?L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN279
	DD	imagerel $LN279+56
	DD	imagerel $unwind$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN279+56
	DD	imagerel $LN279+99
	DD	imagerel $chain$0$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN279+99
	DD	imagerel $LN279+1287
	DD	imagerel $chain$4$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN279+1287
	DD	imagerel $LN279+1295
	DD	imagerel $chain$5$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN279+1295
	DD	imagerel $LN279+1308
	DD	imagerel $chain$6$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$generate_sliding_ray@$09@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$09@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$generate_sliding_ray@$09@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66+41
	DD	imagerel $LN66+334
	DD	imagerel $chain$2$??$generate_sliding_ray@$09@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$generate_sliding_ray@$09@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66+334
	DD	imagerel $LN66+347
	DD	imagerel $chain$3$??$generate_sliding_ray@$09@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$generate_sliding_ray@$0?9@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$0?9@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$generate_sliding_ray@$0?9@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66+41
	DD	imagerel $LN66+334
	DD	imagerel $chain$2$??$generate_sliding_ray@$0?9@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$generate_sliding_ray@$0?9@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66+334
	DD	imagerel $LN66+347
	DD	imagerel $chain$3$??$generate_sliding_ray@$0?9@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$generate_sliding_ray@$00@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$00@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$generate_sliding_ray@$00@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66+41
	DD	imagerel $LN66+331
	DD	imagerel $chain$2$??$generate_sliding_ray@$00@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$generate_sliding_ray@$00@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66+331
	DD	imagerel $LN66+344
	DD	imagerel $chain$3$??$generate_sliding_ray@$00@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$generate_sliding_ray@$0?0@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$0?0@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$generate_sliding_ray@$0?0@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66+41
	DD	imagerel $LN66+331
	DD	imagerel $chain$2$??$generate_sliding_ray@$0?0@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$generate_sliding_ray@$0?0@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD imagerel $LN66+331
	DD	imagerel $LN66+344
	DD	imagerel $chain$3$??$generate_sliding_ray@$0?0@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN519
	DD	imagerel $LN519+60
	DD	imagerel $unwind$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN519+60
	DD	imagerel $LN519+91
	DD	imagerel $chain$0$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN519+91
	DD	imagerel $LN519+2358
	DD	imagerel $chain$4$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN519+2358
	DD	imagerel $LN519+2366
	DD	imagerel $chain$5$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN519+2366
	DD	imagerel $LN519+2378
	DD	imagerel $chain$6$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_all_sliding_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD imagerel $LN4
	DD	imagerel $LN4+75
	DD	imagerel $unwind$?generate_all_sliding_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_index@$0A@@id@locale@std@@QEAA_KXZ DD imagerel $LN11
	DD	imagerel $LN11+80
	DD	imagerel $unwind$??$_Get_index@$0A@@id@locale@std@@QEAA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+44
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+36
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN18
	DD	imagerel $LN18+122
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN14
	DD	imagerel $LN14+60
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN123
	DD	imagerel $LN123+168
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN123+168
	DD	imagerel $LN123+322
	DD	imagerel $chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN123+322
	DD	imagerel $LN123+339
	DD	imagerel $chain$2$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN123+339
	DD	imagerel $LN123+366
	DD	imagerel $chain$3$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN123+366
	DD	imagerel $LN123+452
	DD	imagerel $chain$4$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN123+452
	DD	imagerel $LN123+458
	DD	imagerel $chain$5$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z DD imagerel $LN32
	DD	imagerel $LN32+85
	DD	imagerel $unwind$??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z DD imagerel $LN32+85
	DD	imagerel $LN32+160
	DD	imagerel $chain$0$??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z DD imagerel $LN32+160
	DD	imagerel $LN32+188
	DD	imagerel $chain$1$??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DD imagerel $LN32
	DD	imagerel $LN32+81
	DD	imagerel $unwind$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DD imagerel $LN32+81
	DD	imagerel $LN32+156
	DD	imagerel $chain$0$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DD imagerel $LN32+156
	DD	imagerel $LN32+184
	DD	imagerel $chain$1$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DD imagerel $LN32
	DD	imagerel $LN32+159
	DD	imagerel $unwind$??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z DD imagerel $LN49
	DD	imagerel $LN49+273
	DD	imagerel $unwind$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel $LN109
	DD	imagerel $LN109+414
	DD	imagerel $unwind$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+32
	DD	imagerel $unwind$?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z DD imagerel $LN330
	DD	imagerel $LN330+723
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z DD imagerel $LN18
	DD	imagerel $LN18+252
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z DD imagerel $LN18
	DD	imagerel $LN18+252
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z DD imagerel $LN18
	DD	imagerel $LN18+258
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z DD imagerel $LN18
	DD	imagerel $LN18+258
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z DD imagerel $LN136
	DD	imagerel $LN136+695
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z DD imagerel $LN140
	DD	imagerel $LN140+699
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z DD imagerel $LN4
	DD	imagerel $LN4+156
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z DD imagerel $LN464
	DD	imagerel $LN464+1685
	DD	imagerel $unwind$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z DD imagerel $LN42
	DD	imagerel $LN42+40
	DD	imagerel $unwind$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z DD imagerel $LN42+40
	DD	imagerel $LN42+139
	DD	imagerel $chain$0$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z DD imagerel $LN42+139
	DD	imagerel $LN42+172
	DD	imagerel $chain$1$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z DD imagerel $LN42
	DD	imagerel $LN42+41
	DD	imagerel $unwind$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z DD imagerel $LN42+41
	DD	imagerel $LN42+130
	DD	imagerel $chain$0$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z DD imagerel $LN42+130
	DD	imagerel $LN42+162
	DD	imagerel $chain$1$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+43
	DD	imagerel $unwind$??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z DD imagerel $LN34
	DD	imagerel $LN34+95
	DD	imagerel $unwind$??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_at_least_helper@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@0@AEA_K@Z DD imagerel $LN13
	DD	imagerel $LN13+44
	DD	imagerel $unwind$??$_Allocate_at_least_helper@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@0@AEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUS_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@QEAU1@0PEAU1@AEAV?$allocator@US_UNDO@@@0@@Z DD imagerel $LN20
	DD	imagerel $LN20+81
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUS_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@QEAU1@0PEAU1@AEAV?$allocator@US_UNDO@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN91
	DD	imagerel $LN91+58
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN91+58
	DD	imagerel $LN91+273
	DD	imagerel $chain$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN91+273
	DD	imagerel $LN91+300
	DD	imagerel $chain$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN91+300
	DD	imagerel $LN91+306
	DD	imagerel $chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN91+306
	DD	imagerel $LN91+312
	DD	imagerel $chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_for_capacity@$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAPEADAEAV?$allocator@D@1@AEA_K@Z DD imagerel $LN8
	DD	imagerel $LN8+29
	DD	imagerel $unwind$??$_Allocate_for_capacity@$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAPEADAEAV?$allocator@D@1@AEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z DD imagerel $LN480
	DD	imagerel $LN480+1798
	DD	imagerel $unwind$??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z DD imagerel $LN49
	DD	imagerel $LN49+273
	DD	imagerel $unwind$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN7
	DD	imagerel $LN7+24
	DD	imagerel $unwind$?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN7
	DD	imagerel $LN7+24
	DD	imagerel $unwind$?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN7
	DD	imagerel $LN7+24
	DD	imagerel $unwind$?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD imagerel $LN71
	DD	imagerel $LN71+326
	DD	imagerel $unwind$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel $LN166
	DD	imagerel $LN166+575
	DD	imagerel $unwind$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+32
	DD	imagerel $unwind$?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+44
	DD	imagerel $unwind$?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$numpunct@D@std@@MEAA@XZ DD imagerel $LN9
	DD	imagerel $LN9+62
	DD	imagerel $unwind$??1?$numpunct@D@std@@MEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DD imagerel $LN59
	DD	imagerel $LN59+315
	DD	imagerel $unwind$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN25
	DD	imagerel $LN25+69
	DD	imagerel $unwind$?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN25
	DD	imagerel $LN25+69
	DD	imagerel $unwind$?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN25
	DD	imagerel $LN25+69
	DD	imagerel $unwind$?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$numpunct@D@std@@AEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+41
	DD	imagerel $unwind$?_Tidy@?$numpunct@D@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$numpunct@D@std@@MEAAPEAXI@Z DD imagerel $LN17
	DD	imagerel $LN17+94
	DD	imagerel $unwind$??_G?$numpunct@D@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBA@QEADQEBD_K12@Z DD imagerel $LN11
	DD	imagerel $LN11+72
	DD	imagerel $unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBA@QEADQEBD_K12@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD imagerel $LN71
	DD	imagerel $LN71+46
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD imagerel $LN71+46
	DD	imagerel $LN71+302
	DD	imagerel $chain$3$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD imagerel $LN71+302
	DD	imagerel $LN71+327
	DD	imagerel $chain$5$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD imagerel $LN71+327
	DD	imagerel $LN71+333
	DD	imagerel $chain$6$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAUS_UNDO@@PEAU1@@std@@YAPEAUS_UNDO@@PEAU1@00@Z DD imagerel $LN6
	DD	imagerel $LN6+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAUS_UNDO@@PEAU1@@std@@YAPEAUS_UNDO@@PEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Reallocation_guard@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ DD imagerel $LN22
	DD	imagerel $LN22+96
	DD	imagerel $unwind$??1_Reallocation_guard@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+71
	DD	imagerel $unwind$??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove_tail@PEAUS_UNDO@@@std@@YAPEAUS_UNDO@@QEBDQEAU1@_K2@Z DD imagerel $LN4
	DD	imagerel $LN4+42
	DD	imagerel $unwind$??$_Copy_memmove_tail@PEAUS_UNDO@@@std@@YAPEAUS_UNDO@@QEBDQEAU1@_K2@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0CNI@@std@@YA_K_K@Z DD imagerel $LN7
	DD	imagerel $LN7+37
	DD	imagerel $unwind$??$_Get_size_of_n@$0CNI@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN18
	DD	imagerel $LN18+107
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_b986da8d428e4af07c64af60eec09b61>@@QEBA@QEADQEBD_K22D@Z DD imagerel $LN14
	DD	imagerel $LN14+125
	DD	imagerel $unwind$??R<lambda_b986da8d428e4af07c64af60eec09b61>@@QEBA@QEADQEBD_K22D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z DD imagerel $LN77
	DD	imagerel $LN77+45
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z DD imagerel $LN77+45
	DD	imagerel $LN77+343
	DD	imagerel $chain$3$??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z DD imagerel $LN77+343
	DD	imagerel $LN77+368
	DD	imagerel $chain$5$??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z DD imagerel $LN77+368
	DD	imagerel $LN77+374
	DD	imagerel $chain$6$??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBA@QEADQEBD_K2D@Z DD imagerel $LN11
	DD	imagerel $LN11+72
	DD	imagerel $unwind$??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBA@QEADQEBD_K2D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z DD imagerel $LN71
	DD	imagerel $LN71+45
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z DD imagerel $LN71+45
	DD	imagerel $LN71+301
	DD	imagerel $chain$3$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z DD imagerel $LN71+301
	DD	imagerel $LN71+326
	DD	imagerel $chain$5$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z DD imagerel $LN71+326
	DD	imagerel $LN71+332
	DD	imagerel $chain$6$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN11
	DD	imagerel $LN11+77
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+52
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD imagerel $LN17
	DD	imagerel $LN17+92
	DD	imagerel $unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT __xmm@7fffffffffffffff7fffffffffffffff
CONST	SEGMENT
__xmm@7fffffffffffffff7fffffffffffffff DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __xmm@000000000000000f0000000000000000
CONST	SEGMENT
__xmm@000000000000000f0000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 0fH, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@4202a05f20000000
CONST	SEGMENT
__real@4202a05f20000000 DQ 04202a05f20000000r	; 1e+10
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$numpunct@D@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$numpunct@D@std@@8 DD imagerel ??_R0?AV?$numpunct@D@std@@@8 ; std::numpunct<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$numpunct@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT
??_R2?$numpunct@D@std@@8 DD imagerel ??_R1A@?0A@EA@?$numpunct@D@std@@8 ; std::numpunct<char>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT
??_R3?$numpunct@D@std@@8 DD 00H				; std::numpunct<char>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	imagerel ??_R2?$numpunct@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
data$rs	SEGMENT
??_R0?AV?$numpunct@D@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::numpunct<char> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$numpunct@D@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT
??_R4?$numpunct@D@std@@6B@ DD 01H			; std::numpunct<char>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$numpunct@D@std@@@8
	DD	imagerel ??_R3?$numpunct@D@std@@8
	DD	imagerel ??_R4?$numpunct@D@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 DD imagerel ??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R2?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 DD 00H ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	imagerel ??_R2?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@'
	DB	'std@@@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ DD 01H ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8
	DD	imagerel ??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
	DD	imagerel ??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@failure@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@failure@ios_base@std@@8 DD imagerel ??_R0?AVfailure@ios_base@std@@@8 ; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2failure@ios_base@std@@8
rdata$r	SEGMENT
??_R2failure@ios_base@std@@8 DD imagerel ??_R1A@?0A@EA@failure@ios_base@std@@8 ; std::ios_base::failure::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@system_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@_System_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3failure@ios_base@std@@8
rdata$r	SEGMENT
??_R3failure@ios_base@std@@8 DD 00H			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R4failure@ios_base@std@@6B@
rdata$r	SEGMENT
??_R4failure@ios_base@std@@6B@ DD 01H			; std::ios_base::failure::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVfailure@ios_base@std@@@8
	DD	imagerel ??_R3failure@ios_base@std@@8
	DD	imagerel ??_R4failure@ios_base@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ctype@D@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ctype@D@std@@8 DD imagerel ??_R0?AV?$ctype@D@std@@@8 ; std::ctype<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT
??_R2?$ctype@D@std@@8 DD imagerel ??_R1A@?0A@EA@?$ctype@D@std@@8 ; std::ctype<char>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ctype_base@std@@8
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT
??_R3?$ctype@D@std@@8 DD 00H				; std::ctype<char>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	imagerel ??_R2?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
data$rs	SEGMENT
??_R0?AV?$ctype@D@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::ctype<char> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$ctype@D@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT
??_R4?$ctype@D@std@@6B@ DD 01H				; std::ctype<char>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$ctype@D@std@@@8
	DD	imagerel ??_R3?$ctype@D@std@@8
	DD	imagerel ??_R4?$ctype@D@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ctype_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ctype_base@std@@8 DD imagerel ??_R0?AUctype_base@std@@@8 ; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ctype_base@std@@8
rdata$r	SEGMENT
??_R2ctype_base@std@@8 DD imagerel ??_R1A@?0A@EA@ctype_base@std@@8 ; std::ctype_base::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ctype_base@std@@8
rdata$r	SEGMENT
??_R3ctype_base@std@@8 DD 00H				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	imagerel ??_R2ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
data$rs	SEGMENT
??_R0?AUctype_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::ctype_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUctype_base@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4ctype_base@std@@6B@
rdata$r	SEGMENT
??_R4ctype_base@std@@6B@ DD 01H				; std::ctype_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AUctype_base@std@@@8
	DD	imagerel ??_R3ctype_base@std@@8
	DD	imagerel ??_R4ctype_base@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Crt_new_delete@std@@8 DD imagerel ??_R0?AU_Crt_new_delete@std@@@8 ; std::_Crt_new_delete::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R2_Crt_new_delete@std@@8 DD imagerel ??_R1A@?0A@EA@_Crt_new_delete@std@@8 ; std::_Crt_new_delete::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R3_Crt_new_delete@std@@8 DD 00H			; std::_Crt_new_delete::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU_Crt_new_delete@std@@@8
data$rs	SEGMENT
??_R0?AU_Crt_new_delete@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Crt_new_delete `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU_Crt_new_delete@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R17?0A@EA@_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@_Crt_new_delete@std@@8 DD imagerel ??_R0?AU_Crt_new_delete@std@@@8 ; std::_Crt_new_delete::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@facet@locale@std@@8 DD imagerel ??_R0?AVfacet@locale@std@@@8 ; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R2facet@locale@std@@8
rdata$r	SEGMENT
??_R2facet@locale@std@@8 DD imagerel ??_R1A@?0A@EA@facet@locale@std@@8 ; std::locale::facet::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3facet@locale@std@@8
rdata$r	SEGMENT
??_R3facet@locale@std@@8 DD 00H				; std::locale::facet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	imagerel ??_R2facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
data$rs	SEGMENT
??_R0?AVfacet@locale@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::locale::facet `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVfacet@locale@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4facet@locale@std@@6B@
rdata$r	SEGMENT
??_R4facet@locale@std@@6B@ DD 01H			; std::locale::facet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVfacet@locale@std@@@8
	DD	imagerel ??_R3facet@locale@std@@8
	DD	imagerel ??_R4facet@locale@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Facet_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Facet_base@std@@8 DD imagerel ??_R0?AV_Facet_base@std@@@8 ; std::_Facet_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Facet_base@std@@8
rdata$r	SEGMENT
??_R2_Facet_base@std@@8 DD imagerel ??_R1A@?0A@EA@_Facet_base@std@@8 ; std::_Facet_base::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Facet_base@std@@8
rdata$r	SEGMENT
??_R3_Facet_base@std@@8 DD 00H				; std::_Facet_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Facet_base@std@@@8
data$rs	SEGMENT
??_R0?AV_Facet_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::_Facet_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Facet_base@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4_Facet_base@std@@6B@
rdata$r	SEGMENT
??_R4_Facet_base@std@@6B@ DD 01H			; std::_Facet_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Facet_base@std@@@8
	DD	imagerel ??_R3_Facet_base@std@@8
	DD	imagerel ??_R4_Facet_base@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_cast@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_cast@std@@8 DD imagerel ??_R0?AVbad_cast@std@@@8 ; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_cast@std@@8
rdata$r	SEGMENT
??_R2bad_cast@std@@8 DD imagerel ??_R1A@?0A@EA@bad_cast@std@@8 ; std::bad_cast::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_cast@std@@8
rdata$r	SEGMENT
??_R3bad_cast@std@@8 DD 00H				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_cast@std@@6B@
rdata$r	SEGMENT
??_R4bad_cast@std@@6B@ DD 01H				; std::bad_cast::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	imagerel ??_R3bad_cast@std@@8
	DD	imagerel ??_R4bad_cast@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category2@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category2@std@@8 DD imagerel ??_R0?AV_Iostream_error_category2@std@@@8 ; std::_Iostream_error_category2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Iostream_error_category2@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category2@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category2@std@@8 DD imagerel ??_R1A@?0A@EA@_Iostream_error_category2@std@@8 ; std::_Iostream_error_category2::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@error_category@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category2@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category2@std@@8 DD 00H		; std::_Iostream_error_category2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2_Iostream_error_category2@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category2@std@@@8
data$rs	SEGMENT
??_R0?AV_Iostream_error_category2@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category2 `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Iostream_error_category2@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4_Iostream_error_category2@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category2@std@@6B@ DD 01H		; std::_Iostream_error_category2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Iostream_error_category2@std@@@8
	DD	imagerel ??_R3_Iostream_error_category2@std@@8
	DD	imagerel ??_R4_Iostream_error_category2@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@system_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@system_error@std@@8 DD imagerel ??_R0?AVsystem_error@std@@@8 ; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2system_error@std@@8
rdata$r	SEGMENT
??_R2system_error@std@@8 DD imagerel ??_R1A@?0A@EA@system_error@std@@8 ; std::system_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_System_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3system_error@std@@8
rdata$r	SEGMENT
??_R3system_error@std@@8 DD 00H				; std::system_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4system_error@std@@6B@
rdata$r	SEGMENT
??_R4system_error@std@@6B@ DD 01H			; std::system_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVsystem_error@std@@@8
	DD	imagerel ??_R3system_error@std@@8
	DD	imagerel ??_R4system_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error@std@@8 DD imagerel ??_R0?AV_System_error@std@@@8 ; std::_System_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_System_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error@std@@8
rdata$r	SEGMENT
??_R2_System_error@std@@8 DD imagerel ??_R1A@?0A@EA@_System_error@std@@8 ; std::_System_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_System_error@std@@8
rdata$r	SEGMENT
??_R3_System_error@std@@8 DD 00H			; std::_System_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2_System_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4_System_error@std@@6B@
rdata$r	SEGMENT
??_R4_System_error@std@@6B@ DD 01H			; std::_System_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_System_error@std@@@8
	DD	imagerel ??_R3_System_error@std@@8
	DD	imagerel ??_R4_System_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD imagerel ??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD imagerel ??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$rs	SEGMENT
??_R0?AVerror_category@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVerror_category@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD imagerel ??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD imagerel ??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 01H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	imagerel ??_R3runtime_error@std@@8
	DD	imagerel ??_R4runtime_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_02OOPEBDOJ@pP@
CONST	SEGMENT
??_C@_02OOPEBDOJ@pP@ DB 'pP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MDKMJEGG@eE@
CONST	SEGMENT
??_C@_02MDKMJEGG@eE@ DB 'eE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$numpunct@D@std@@6B@
CONST	SEGMENT
??_7?$numpunct@D@std@@6B@ DQ FLAT:??_R4?$numpunct@D@std@@6B@ ; std::numpunct<char>::`vftable'
	DQ	FLAT:??_E?$numpunct@D@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
	DQ	FLAT:?do_decimal_point@?$numpunct@D@std@@MEBADXZ
	DQ	FLAT:?do_thousands_sep@?$numpunct@D@std@@MEBADXZ
	DQ	FLAT:?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DQ	FLAT:?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DQ	FLAT:?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
CONST	ENDS
;	COMDAT ??_C@_02BBAHNLBA@?$CFp@
CONST	SEGMENT
??_C@_02BBAHNLBA@?$CFp@ DB '%p', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
CONST	SEGMENT
??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ DQ FLAT:??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`vftable'
	DQ	FLAT:??_E?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
CONST	ENDS
;	COMDAT ?_Static@?1???$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@1@XZ@4U?$_Constexpr_immortalize_impl@V_Iostream_error_category2@std@@@1@A
_DATA	SEGMENT
?_Static@?1???$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@1@XZ@4U?$_Constexpr_immortalize_impl@V_Iostream_error_category2@std@@@1@A DQ FLAT:??_7_Iostream_error_category2@std@@6B@ ; `std::_Immortalize_memcpy_image<std::_Iostream_error_category2>'::`2'::_Static
	DQ	0000000000000005H
_DATA	ENDS
;	COMDAT ?directions@?1??generate_queen_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z@4QBHB
CONST	SEGMENT
?directions@?1??generate_queen_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z@4QBHB DD 0aH ; `generate_queen_moves'::`2'::directions
	DD	0fffffff6H
	DD	01H
	DD	0ffffffffH
	DD	0bH
	DD	09H
	DD	0fffffff7H
	DD	0fffffff5H
CONST	ENDS
;	COMDAT ?directions@?1??generate_rook_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z@4QBHB
CONST	SEGMENT
?directions@?1??generate_rook_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z@4QBHB DD 0aH ; `generate_rook_moves'::`2'::directions
	DD	0fffffff6H
	DD	01H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?directions@?1??generate_bishop_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z@4QBHB
CONST	SEGMENT
?directions@?1??generate_bishop_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z@4QBHB DD 0bH ; `generate_bishop_moves'::`2'::directions
	DD	09H
	DD	0fffffff7H
	DD	0fffffff5H
CONST	ENDS
;	COMDAT ??_C@_0BK@LOLBDCGO@CASTLING?5ERROR?3?5Expected?5@
CONST	SEGMENT
??_C@_0BK@LOLBDCGO@CASTLING?5ERROR?3?5Expected?5@ DB 'CASTLING ERROR: Exp'
	DB	'ected ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05BIMBDNDC@black@
CONST	SEGMENT
??_C@_05BIMBDNDC@black@ DB 'black', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PMAELIEO@white@
CONST	SEGMENT
??_C@_05PMAELIEO@white@ DB 'white', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BMFLINMC@?5rook?5at?5square?5@
CONST	SEGMENT
??_C@_0BB@BMFLINMC@?5rook?5at?5square?5@ DB ' rook at square ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KKDIGLCF@?5but?5found?5piece?5@
CONST	SEGMENT
??_C@_0BC@KKDIGLCF@?5but?5found?5piece?5@ DB ' but found piece ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@LCBDJEPI@Move?5destination?5square?5must?5be@
CONST	SEGMENT
??_C@_0CJ@LCBDJEPI@Move?5destination?5square?5must?5be@ DB 'Move destinat'
	DB	'ion square must be playable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MKMFONOJ@is_playable?$CIm?4get_to?$CI?$CJ?$CJ@
CONST	SEGMENT
??_C@_0BI@MKMFONOJ@is_playable?$CIm?4get_to?$CI?$CJ?$CJ@ DB 'is_playable('
	DB	'm.get_to())', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@NPCAPDGH@Move?5source?5square?5must?5be?5play@
CONST	SEGMENT
??_C@_0CE@NPCAPDGH@Move?5source?5square?5must?5be?5play@ DB 'Move source '
	DB	'square must be playable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LNOOKDOM@Position?3?3make_move_with_undo@
CONST	SEGMENT
??_C@_0BO@LNOOKDOM@Position?3?3make_move_with_undo@ DB 'Position::make_mo'
	DB	've_with_undo', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BNNIJGEB@is_playable?$CIm?4get_from?$CI?$CJ?$CJ@
CONST	SEGMENT
??_C@_0BK@BNNIJGEB@is_playable?$CIm?4get_from?$CI?$CJ?$CJ@ DB 'is_playabl'
	DB	'e(m.get_from())', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@IABJNNHF@Invalid?5destination?5square?5for?5@
CONST	SEGMENT
??_C@_0CK@IABJNNHF@Invalid?5destination?5square?5for?5@ DB 'Invalid desti'
	DB	'nation square for piece move', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DAFNLHPP@is_playable?$CIto_square?$CJ@
CONST	SEGMENT
??_C@_0BH@DAFNLHPP@is_playable?$CIto_square?$CJ@ DB 'is_playable(to_squar'
	DB	'e)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@LHMGNHND@Invalid?5source?5square?5for?5piece@
CONST	SEGMENT
??_C@_0CF@LHMGNHND@Invalid?5source?5square?5for?5piece@ DB 'Invalid sourc'
	DB	'e square for piece move', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@EOFLAMKG@Position?3?3move_piece_in_list@
CONST	SEGMENT
??_C@_0BN@EOFLAMKG@Position?3?3move_piece_in_list@ DB 'Position::move_pie'
	DB	'ce_in_list', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IEJBKKEH@is_playable?$CIfrom_square?$CJ@
CONST	SEGMENT
??_C@_0BJ@IEJBKKEH@is_playable?$CIfrom_square?$CJ@ DB 'is_playable(from_s'
	DB	'quare)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@JFKCPLIP@Piece?5not?5found?5in?5piece?5list?5d@
CONST	SEGMENT
??_C@_0CN@JFKCPLIP@Piece?5not?5found?5in?5piece?5list?5d@ DB 'Piece not f'
	DB	'ound in piece list during removal', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PIOMOIAC@Cannot?5remove?5piece?5from?5empty?5@
CONST	SEGMENT
??_C@_0CK@PIOMOIAC@Cannot?5remove?5piece?5from?5empty?5@ DB 'Cannot remov'
	DB	'e piece from empty piece list', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LILOMOJN@pCount?$FLcolor_idx?$FN?$FLtype_idx?$FN?5?$DO?50@
CONST	SEGMENT
??_C@_0CA@LILOMOJN@pCount?$FLcolor_idx?$FN?$FLtype_idx?$FN?5?$DO?50@ DB 'p'
	DB	'Count[color_idx][type_idx] > 0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@PFOHCAPB@Cannot?5remove?5piece?5from?5invali@
CONST	SEGMENT
??_C@_0CI@PFOHCAPB@Cannot?5remove?5piece?5from?5invali@ DB 'Cannot remove'
	DB	' piece from invalid square', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@EGEAGGNG@Position?3?3remove_piece_from_lis@
CONST	SEGMENT
??_C@_0CB@EGEAGGNG@Position?3?3remove_piece_from_lis@ DB 'Position::remov'
	DB	'e_piece_from_list', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@LHFJFDDN@Too?5many?5pieces?5of?5this?5type?5on@
CONST	SEGMENT
??_C@_0CK@LHFJFDDN@Too?5many?5pieces?5of?5this?5type?5on@ DB 'Too many pi'
	DB	'eces of this type on the board', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@KHBHEAPL@pCount?$FLcolor_idx?$FN?$FLtype_idx?$FN?5?$DM?5M@
CONST	SEGMENT
??_C@_0DC@KHBHEAPL@pCount?$FLcolor_idx?$FN?$FLtype_idx?$FN?5?$DM?5M@ DB 'p'
	DB	'Count[color_idx][type_idx] < MAX_PIECES_PER_TYPE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@POIAKKDB@ASSERTION?5FAILED?3?5@
CONST	SEGMENT
??_C@_0BD@POIAKKDB@ASSERTION?5FAILED?3?5@ DB 'ASSERTION FAILED: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DGKNEBEB@Cannot?5add?5piece?5to?5invalid?5squ@
CONST	SEGMENT
??_C@_0CD@DGKNEBEB@Cannot?5add?5piece?5to?5invalid?5squ@ DB 'Cannot add p'
	DB	'iece to invalid square', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JELCCAPN@?6?5?5File?3?5@
CONST	SEGMENT
??_C@_09JELCCAPN@?6?5?5File?3?5@ DB 0aH, '  File: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@KBGLLII@C?3?2Users?2m_lad?2source?2repos?2MTD@
CONST	SEGMENT
??_C@_0DN@KBGLLII@C?3?2Users?2m_lad?2source?2repos?2MTD@ DB 'C:\Users\m_l'
	DB	'ad\source\repos\MTDuke71\Huginn\src\position.hpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EKACCMND@?6?5?5Line?3?5@
CONST	SEGMENT
??_C@_09EKACCMND@?6?5?5Line?3?5@ DB 0aH, '  Line: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PIFLCCFC@?6?5?5Function?3?5@
CONST	SEGMENT
??_C@_0O@PIFLCCFC@?6?5?5Function?3?5@ DB 0aH, '  Function: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BPCCCNAP@Position?3?3add_piece_to_list@
CONST	SEGMENT
??_C@_0BM@BPCCCNAP@Position?3?3add_piece_to_list@ DB 'Position::add_piece'
	DB	'_to_list', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PPNCGEME@?6?5?5Condition?3?5@
CONST	SEGMENT
??_C@_0P@PPNCGEME@?6?5?5Condition?3?5@ DB 0aH, '  Condition: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MEEEPPEO@is_playable?$CIsquare?$CJ@
CONST	SEGMENT
??_C@_0BE@MEEEPPEO@is_playable?$CIsquare?$CJ@ DB 'is_playable(square)', 00H ; `string'
CONST	ENDS
;	COMDAT ?MAILBOX_MAPS@@3UMailboxMaps@@B
CONST	SEGMENT
?MAILBOX_MAPS@@3UMailboxMaps@@B DD 015H			; MAILBOX_MAPS
	DD	016H
	DD	017H
	DD	018H
	DD	019H
	DD	01aH
	DD	01bH
	DD	01cH
	DD	01fH
	DD	020H
	DD	021H
	DD	022H
	DD	023H
	DD	024H
	DD	025H
	DD	026H
	DD	029H
	DD	02aH
	DD	02bH
	DD	02cH
	DD	02dH
	DD	02eH
	DD	02fH
	DD	030H
	DD	033H
	DD	034H
	DD	035H
	DD	036H
	DD	037H
	DD	038H
	DD	039H
	DD	03aH
	DD	03dH
	DD	03eH
	DD	03fH
	DD	040H
	DD	041H
	DD	042H
	DD	043H
	DD	044H
	DD	047H
	DD	048H
	DD	049H
	DD	04aH
	DD	04bH
	DD	04cH
	DD	04dH
	DD	04eH
	DD	051H
	DD	052H
	DD	053H
	DD	054H
	DD	055H
	DD	056H
	DD	057H
	DD	058H
	DD	05bH
	DD	05cH
	DD	05dH
	DD	05eH
	DD	05fH
	DD	060H
	DD	061H
	DD	062H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	08H
	DD	09H
	DD	0aH
	DD	0bH
	DD	0cH
	DD	0dH
	DD	0eH
	DD	0fH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	010H
	DD	011H
	DD	012H
	DD	013H
	DD	014H
	DD	015H
	DD	016H
	DD	017H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	018H
	DD	019H
	DD	01aH
	DD	01bH
	DD	01cH
	DD	01dH
	DD	01eH
	DD	01fH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	020H
	DD	021H
	DD	022H
	DD	023H
	DD	024H
	DD	025H
	DD	026H
	DD	027H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	028H
	DD	029H
	DD	02aH
	DD	02bH
	DD	02cH
	DD	02dH
	DD	02eH
	DD	02fH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	030H
	DD	031H
	DD	032H
	DD	033H
	DD	034H
	DD	035H
	DD	036H
	DD	037H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	038H
	DD	039H
	DD	03aH
	DD	03bH
	DD	03cH
	DD	03dH
	DD	03eH
	DD	03fH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B
CONST	SEGMENT
?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B DB 0ffH	; FILE_RANK_LOOKUPS
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	0ffH
	DB	0ffH
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	0ffH
	DB	0ffH
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	0ffH
	DB	0ffH
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	0ffH
	DB	0ffH
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	0ffH
	DB	0ffH
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
CONST	ENDS
;	COMDAT ?KING_DELTAS@@3V?$array@H$07@std@@B
CONST	SEGMENT
?KING_DELTAS@@3V?$array@H$07@std@@B DD 0aH		; KING_DELTAS
	DD	0fffffff6H
	DD	01H
	DD	0ffffffffH
	DD	0bH
	DD	09H
	DD	0fffffff7H
	DD	0fffffff5H
CONST	ENDS
;	COMDAT ?KNIGHT_DELTAS@@3QBHB
CONST	SEGMENT
?KNIGHT_DELTAS@@3QBHB DD 015H				; KNIGHT_DELTAS
	DD	013H
	DD	0cH
	DD	08H
	DD	0fffffff8H
	DD	0fffffff4H
	DD	0ffffffedH
	DD	0ffffffebH
CONST	ENDS
;	COMDAT _CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QEAA@AEBV012@@Z40
xdata$x	SEGMENT
_CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QEAA@AEBV012@@Z40 DD 00H
	DD	imagerel ??_R0?AVfailure@ios_base@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0failure@ios_base@std@@QEAA@AEBV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
data$r	SEGMENT
??_R0?AVfailure@ios_base@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::ios_base::failure `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVfailure@ios_base@std@@', 00H
data$r	ENDS
;	COMDAT _CTA5?AVfailure@ios_base@std@@
xdata$x	SEGMENT
_CTA5?AVfailure@ios_base@std@@ DD 05H
	DD	imagerel _CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QEAA@AEBV012@@Z40
	DD	imagerel _CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40
	DD	imagerel _CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40
	DD	imagerel _CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI5?AVfailure@ios_base@std@@
xdata$x	SEGMENT
_TI5?AVfailure@ios_base@std@@ DD 00H
	DD	imagerel ??1failure@ios_base@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA5?AVfailure@ios_base@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@
CONST	SEGMENT
??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@ DB 'ios_base::eofbit set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@
CONST	SEGMENT
??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@ DB 'ios_base::failbit set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@
CONST	SEGMENT
??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@ DB 'ios_base::badbit set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT
??_7failure@ios_base@std@@6B@ DQ FLAT:??_R4failure@ios_base@std@@6B@ ; std::ios_base::failure::`vftable'
	DQ	FLAT:??_Efailure@ios_base@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7?$ctype@D@std@@6B@
CONST	SEGMENT
??_7?$ctype@D@std@@6B@ DQ FLAT:??_R4?$ctype@D@std@@6B@	; std::ctype<char>::`vftable'
	DQ	FLAT:??_E?$ctype@D@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
	DQ	FLAT:?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
	DQ	FLAT:?do_tolower@?$ctype@D@std@@MEBADD@Z
	DQ	FLAT:?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
	DQ	FLAT:?do_toupper@?$ctype@D@std@@MEBADD@Z
	DQ	FLAT:?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z
	DQ	FLAT:?do_widen@?$ctype@D@std@@MEBADD@Z
	DQ	FLAT:?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z
	DQ	FLAT:?do_narrow@?$ctype@D@std@@MEBADDD@Z
CONST	ENDS
;	COMDAT ??_7ctype_base@std@@6B@
CONST	SEGMENT
??_7ctype_base@std@@6B@ DQ FLAT:??_R4ctype_base@std@@6B@ ; std::ctype_base::`vftable'
	DQ	FLAT:??_Ectype_base@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_7facet@locale@std@@6B@
CONST	SEGMENT
??_7facet@locale@std@@6B@ DQ FLAT:??_R4facet@locale@std@@6B@ ; std::locale::facet::`vftable'
	DQ	FLAT:??_Efacet@locale@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
CONST	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true@
CONST	SEGMENT
??_C@_04LOAJBDKD@true@ DB 'true', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false@
CONST	SEGMENT
??_C@_05LAPONLG@false@ DB 'false', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ELKIONDK@bad?5locale?5name@
CONST	SEGMENT
??_C@_0BA@ELKIONDK@bad?5locale?5name@ DB 'bad locale name', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7_Facet_base@std@@6B@
CONST	SEGMENT
??_7_Facet_base@std@@6B@ DQ FLAT:??_R4_Facet_base@std@@6B@ ; std::_Facet_base::`vftable'
	DQ	FLAT:??_E_Facet_base@std@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT _CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_cast@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
data$r	SEGMENT
??_R0?AVbad_cast@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_cast@std@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
_CTA2?AVbad_cast@std@@ DD 02H
	DD	imagerel _CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI2?AVbad_cast@std@@
xdata$x	SEGMENT
_TI2?AVbad_cast@std@@ DD 00H
	DD	imagerel ??1bad_cast@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast@ DB 'bad cast', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7bad_cast@std@@6B@
CONST	SEGMENT
??_7bad_cast@std@@6B@ DQ FLAT:??_R4bad_cast@std@@6B@	; std::bad_cast::`vftable'
	DQ	FLAT:??_Ebad_cast@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ?_Iostream_error@?4??message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB
CONST	SEGMENT
?_Iostream_error@?4??message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB DB 069H ; `std::_Iostream_error_category2::message'::`5'::_Iostream_error
	DB	06fH
	DB	073H
	DB	074H
	DB	072H
	DB	065H
	DB	061H
	DB	06dH
	DB	020H
	DB	073H
	DB	074H
	DB	072H
	DB	065H
	DB	061H
	DB	06dH
	DB	020H
	DB	065H
	DB	072H
	DB	072H
	DB	06fH
	DB	072H
	DB	00H
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream@ DB 'iostream', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category2@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category2@std@@6B@ DQ FLAT:??_R4_Iostream_error_category2@std@@6B@ ; std::_Iostream_error_category2::`vftable'
	DQ	FLAT:??_E_Iostream_error_category2@std@@UEAAPEAXI@Z
	DQ	FLAT:?name@_Iostream_error_category2@std@@UEBAPEBDXZ
	DQ	FLAT:?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DQ	FLAT:?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
CONST	ENDS
;	COMDAT _CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40
xdata$x	SEGMENT
_CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40 DD 00H
	DD	imagerel ??_R0?AV_System_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0_System_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AV_System_error@std@@@8
data$r	SEGMENT
??_R0?AV_System_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_System_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_System_error@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40
xdata$x	SEGMENT
_CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40 DD 00H
	DD	imagerel ??_R0?AVsystem_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0system_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVsystem_error@std@@@8
data$r	SEGMENT
??_R0?AVsystem_error@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::system_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVsystem_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_7system_error@std@@6B@
CONST	SEGMENT
??_7system_error@std@@6B@ DQ FLAT:??_R4system_error@std@@6B@ ; std::system_error::`vftable'
	DQ	FLAT:??_Esystem_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5@ DB ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7_System_error@std@@6B@
CONST	SEGMENT
??_7_System_error@std@@6B@ DQ FLAT:??_R4_System_error@std@@6B@ ; std::_System_error::`vftable'
	DQ	FLAT:??_E_System_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT _CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0runtime_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
data$r	SEGMENT
??_R0?AVruntime_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DQ FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DQ	FLAT:??_Eruntime_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z DD 021H
	DD	imagerel $LN71
	DD	imagerel $LN71+45
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z DD 080021H
	DD	06e400H
	DD	0ed400H
	DD	0dc400H
	DD	0c6400H
	DD	imagerel $LN71
	DD	imagerel $LN71+45
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z DD 081f21H
	DD	06e41fH
	DD	0ed416H
	DD	0dc40aH
	DD	0c6405H
	DD	imagerel $LN71
	DD	imagerel $LN71+45
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z DD 050a01H
	DD	0f006620aH
	DD	050037004H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBA@QEADQEBD_K2D@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z DD 021H
	DD	imagerel $LN77
	DD	imagerel $LN77+45
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z DD 080021H
	DD	06f400H
	DD	0ee400H
	DD	0dd400H
	DD	0c5400H
	DD	imagerel $LN77
	DD	imagerel $LN77+45
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z DD 082321H
	DD	06f423H
	DD	0ee413H
	DD	0dd40eH
	DD	0c5405H
	DD	imagerel $LN77
	DD	imagerel $LN77+45
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z DD 050a01H
	DD	0c006620aH
	DD	060037004H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_b986da8d428e4af07c64af60eec09b61>@@QEBA@QEADQEBD_K22D@Z DD 0a1a01H
	DD	09741aH
	DD	08641aH
	DD	07541aH
	DD	06341aH
	DD	0e016321aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0CNI@@std@@YA_K_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove_tail@PEAUS_UNDO@@@std@@YAPEAUS_UNDO@@QEBDQEAU1@_K2@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Reallocation_guard@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAUS_UNDO@@PEAU1@@std@@YAPEAUS_UNDO@@PEAU1@00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD 021H
	DD	imagerel $LN71
	DD	imagerel $LN71+46
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD 080021H
	DD	06e400H
	DD	0ec400H
	DD	0d6400H
	DD	0c5400H
	DD	imagerel $LN71
	DD	imagerel $LN71+46
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD 081f21H
	DD	06e41fH
	DD	0ec41aH
	DD	0d640eH
	DD	0c5405H
	DD	imagerel $LN71
	DD	imagerel $LN71+46
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD 050b01H
	DD	0f007620bH
	DD	07003d005H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBA@QEADQEBD_K12@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$numpunct@D@std@@MEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$numpunct@D@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DB 02H
	DB	0a5H, 04H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ
	DB	0e0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
	DD	imagerel $ip2state$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DD 0a1811H
	DD	0116418H
	DD	0105418H
	DD	0f3418H
	DD	0f0149218H
	DD	07010e012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$numpunct@D@std@@MEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DB 0aH
	DB	'~'
	DB	00H
	DB	09H, 02H
	DB	010H
	DB	'!', 03H
	DB	01aH
	DB	'y', 02H
	DB	010H
	DB	0cH
	DB	016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DB 01aH
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02aH
	DD	imagerel ??1_Lockit@std@@QEAA@XZ
	DB	040H
	DB	036H
	DD	imagerel ?dtor$3@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	09dH
	DB	02H
	DD	imagerel ?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	034H
	DD	imagerel ??1facet@locale@std@@MEAA@XZ
	DB	01H
	DB	04H
	DB	03aH
	DD	imagerel ??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ
	DB	021H
	DB	04H
	DB	0edH
	DB	03H
	DD	imagerel ?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	04dH
	DB	04H
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	imagerel $ip2state$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 091811H
	DD	01f3418H
	DD	0180118H
	DD	0e00af00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DB 02H
	DB	0d1H, 04H
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DB 04H
	DB	0cH
	DD	imagerel ??1facet@locale@std@@MEAA@XZ
	DB	01H
	DB	02H
	DB	03aH
	DD	imagerel ??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ
	DB	041H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
	DD	imagerel $ip2state$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD 081511H
	DD	0113415H
	DD	0f0119215H
	DD	0700de00fH
	DD	0500b600cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z DB 08H
	DB	'e', 02H
	DB	02H
	DB	'~'
	DB	04H
	DB	'6'
	DB	00H
	DB	'0'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z DB 04H
	DB	0aH
	DD	imagerel ??1_Lockit@std@@QEAA@XZ
	DB	0b0H
	DB	032H
	DD	imagerel ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
	DB	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
	DD	imagerel $ip2state$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z DD 060b11H
	DD	0e007320bH
	DD	060047005H
	DD	030025003H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z DB 012H
	DB	0b1H, 03H
	DB	02H
	DB	'd'
	DB	00H
	DB	'D'
	DB	04H
	DB	'B'
	DB	06H
	DB	'd'
	DB	04H
	DB	014H
	DB	08H
	DB	011H, 012H
	DB	04H
	DB	'5', 02H
	DB	00H
	DB	'r'
	DB	08H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z DB 08H
	DB	0aH
	DD	imagerel ??1locale@std@@QEAA@XZ
	DB	0c0H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e0H
	DB	032H
	DD	imagerel ??1locale@std@@QEAA@XZ
	DB	0c0H
	DB	062H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	041H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z
	DD	imagerel $ip2state$??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z DD 0b2a19H
	DD	020341cH
	DD	018011cH
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z
	DD	0b2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_for_capacity@$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAPEADAEAV?$allocator@D@1@AEA_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040021H
	DD	08e400H
	DD	063400H
	DD	imagerel $LN91
	DD	imagerel $LN91+58
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN91
	DD	imagerel $LN91+58
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040021H
	DD	08e400H
	DD	063400H
	DD	imagerel $LN91
	DD	imagerel $LN91+58
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 065a21H
	DD	07545aH
	DD	08e40dH
	DD	063405H
	DD	imagerel $LN91
	DD	imagerel $LN91+58
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUS_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@QEAU1@0PEAU1@AEAV?$allocator@US_UNDO@@@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_at_least_helper@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@0@AEA_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z DD 021H
	DD	imagerel $LN42
	DD	imagerel $LN42+41
	DD	imagerel $unwind$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z DD 020521H
	DD	063405H
	DD	imagerel $LN42
	DD	imagerel $LN42+41
	DD	imagerel $unwind$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z DD 081501H
	DD	097415H
	DD	086415H
	DD	075415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z DD 021H
	DD	imagerel $LN42
	DD	imagerel $LN42+40
	DD	imagerel $unwind$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z DD 020521H
	DD	063405H
	DD	imagerel $LN42
	DD	imagerel $LN42+40
	DD	imagerel $unwind$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z DD 081501H
	DD	097415H
	DD	086415H
	DD	075415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z DB 012H
	DB	0a5H, 02H
	DB	02H
	DB	'd'
	DB	00H
	DB	'B'
	DB	04H
	DB	'<'
	DB	06H
	DB	'd'
	DB	04H
	DB	'V'
	DB	08H
	DB	0e5H, 010H
	DB	04H
	DB	'5', 02H
	DB	00H
	DB	'r'
	DB	08H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z DB 08H
	DB	0aH
	DD	imagerel ??1locale@std@@QEAA@XZ
	DB	060H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0c0H
	DB	032H
	DD	imagerel ??1locale@std@@QEAA@XZ
	DB	060H
	DB	062H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	01H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
	DD	imagerel $ip2state$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z DD 0b2a19H
	DD	01e341cH
	DD	016011cH
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
	DD	0a2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z DD 051d19H
	DD	014010bH
	DD	060037004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z DB 04H
	DB	'm', 04H
	DB	02H
	DB	09dH, 04H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0c0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z DB 028H
	DD	imagerel $stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
	DD	imagerel $ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z DD 0b2d19H
	DD	09681fH
	DD	0140117H
	DD	0e009f00bH
	DD	07005c007H
	DD	030036004H
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
	DD	08aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z DB 04H
	DB	'm', 04H
	DB	02H
	DB	08dH, 04H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0c0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z DB 028H
	DD	imagerel $stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
	DD	imagerel $ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z DD 0b2d19H
	DD	09681fH
	DD	0140117H
	DD	0e009f00bH
	DD	07005c007H
	DD	030036004H
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
	DD	08aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z DD 051d19H
	DD	016010bH
	DD	060037004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z DD 051d19H
	DD	016010bH
	DD	060037004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z DD 051d19H
	DD	016010bH
	DD	060037004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z DD 051d19H
	DD	016010bH
	DD	060037004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z DB 08H
	DB	01H, 02H
	DB	00H
	DB	'D'
	DB	02H
	DB	0a8H
	DB	04H
	DB	089H, 05H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z DB 04H
	DB	0aH
	DD	imagerel ??1locale@std@@QEAA@XZ
	DB	01H
	DB	02H
	DB	042H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0b0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z DB 028H
	DD	imagerel $stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
	DD	imagerel $ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z DD 0e3019H
	DD	0b7822H
	DD	0c681eH
	DD	01b011aH
	DD	0e00df00fH
	DD	0c009d00bH
	DD	060067007H
	DD	050043005H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
	DD	0a2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DB 08H
	DB	08eH
	DB	00H
	DB	09H, 02H
	DB	010H
	DB	'V'
	DB	012H
	DB	091H, 02H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DB 012H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02aH
	DD	imagerel ??1_Lockit@std@@QEAA@XZ
	DB	040H
	DB	036H
	DD	imagerel ?dtor$3@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	0adH
	DB	02H
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	imagerel $ip2state$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 0b2011H
	DD	0197420H
	DD	0186420H
	DD	0173420H
	DD	0120120H
	DD	0e012f014H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z DB 08H
	DB	'e', 02H
	DB	02H
	DB	'~'
	DB	04H
	DB	'6'
	DB	00H
	DB	'0'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z DB 04H
	DB	0aH
	DD	imagerel ??1_Lockit@std@@QEAA@XZ
	DB	0b0H
	DB	032H
	DD	imagerel ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
	DB	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
	DD	imagerel $ip2state$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z DD 060b11H
	DD	0e007320bH
	DD	060047005H
	DD	030025003H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DD 021H
	DD	imagerel $LN32
	DD	imagerel $LN32+81
	DD	imagerel $unwind$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DD 020521H
	DD	063405H
	DD	imagerel $LN32
	DD	imagerel $LN32+81
	DD	imagerel $unwind$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DD 081501H
	DD	097415H
	DD	086415H
	DD	075415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z DD 021H
	DD	imagerel $LN32
	DD	imagerel $LN32+85
	DD	imagerel $unwind$??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z DD 020521H
	DD	063405H
	DD	imagerel $LN32
	DD	imagerel $LN32+85
	DD	imagerel $unwind$??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z DD 081501H
	DD	097415H
	DD	086415H
	DD	075415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020021H
	DD	077400H
	DD	imagerel $LN123
	DD	imagerel $LN123+168
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN123
	DD	imagerel $LN123+168
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020021H
	DD	077400H
	DD	imagerel $LN123
	DD	imagerel $LN123+168
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN123
	DD	imagerel $LN123+168
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 042621H
	DD	065426H
	DD	077405H
	DD	imagerel $LN123
	DD	imagerel $LN123+168
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 061001H
	DD	096410H
	DD	083410H
	DD	0e00c3210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	'd'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 068H
	DD	imagerel $stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 04H
	DB	'X'
	DB	00H
	DB	'J'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 02H
	DB	0cH
	DD	imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	'6'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_index@$0A@@id@locale@std@@QEAA_KXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_all_sliding_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 021H
	DD	imagerel $LN519
	DD	imagerel $LN519+60
	DD	imagerel $unwind$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 021H
	DD	imagerel $LN519+60
	DD	imagerel $LN519+91
	DD	imagerel $chain$0$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 081321H
	DD	01af413H
	DD	01be40fH
	DD	01d740bH
	DD	0236404H
	DD	imagerel $LN519+60
	DD	imagerel $LN519+91
	DD	imagerel $chain$0$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 020421H
	DD	01cd404H
	DD	imagerel $LN519
	DD	imagerel $LN519+60
	DD	imagerel $unwind$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 051601H
	DD	01e0116H
	DD	03009c00bH
	DD	05008H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$generate_sliding_ray@$0?0@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 021H
	DD	imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$0?0@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$generate_sliding_ray@$0?0@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 060e21H
	DD	012e40eH
	DD	0115408H
	DD	0103404H
	DD	imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$0?0@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$generate_sliding_ray@$0?0@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 060f01H
	DD	0f00b920fH
	DD	0c007d009H
	DD	060047005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$generate_sliding_ray@$00@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 021H
	DD	imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$00@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$generate_sliding_ray@$00@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 060e21H
	DD	012e40eH
	DD	0117408H
	DD	0103404H
	DD	imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$00@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$generate_sliding_ray@$00@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 060f01H
	DD	0f00b920fH
	DD	0c007d009H
	DD	050046005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$generate_sliding_ray@$0?9@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 021H
	DD	imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$0?9@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$generate_sliding_ray@$0?9@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 060e21H
	DD	012e40eH
	DD	0115408H
	DD	0103404H
	DD	imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$0?9@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$generate_sliding_ray@$0?9@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 060f01H
	DD	0f00b920fH
	DD	0c007d009H
	DD	060047005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$generate_sliding_ray@$09@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 021H
	DD	imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$09@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$generate_sliding_ray@$09@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 060e21H
	DD	012e40eH
	DD	0117408H
	DD	0103404H
	DD	imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$09@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$generate_sliding_ray@$09@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 060f01H
	DD	0f00b920fH
	DD	0c007d009H
	DD	050046005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 021H
	DD	imagerel $LN279
	DD	imagerel $LN279+56
	DD	imagerel $unwind$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 021H
	DD	imagerel $LN279+56
	DD	imagerel $LN279+99
	DD	imagerel $chain$0$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 081321H
	DD	013e413H
	DD	014740fH
	DD	015640bH
	DD	01b5404H
	DD	imagerel $LN279+56
	DD	imagerel $LN279+99
	DD	imagerel $chain$0$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 020421H
	DD	012f404H
	DD	imagerel $LN279
	DD	imagerel $LN279+56
	DD	imagerel $unwind$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 050f01H
	DD	016010fH
	DD	0c006d008H
	DD	03004H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$generate_sliding_ray@$0?L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 021H
	DD	imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$0?L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$generate_sliding_ray@$0?L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 060e21H
	DD	012e40eH
	DD	0115408H
	DD	0103404H
	DD	imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$0?L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$generate_sliding_ray@$0?L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 060f01H
	DD	0f00b920fH
	DD	0c007d009H
	DD	060047005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$generate_sliding_ray@$0?8@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 021H
	DD	imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$0?8@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$generate_sliding_ray@$0?8@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 060e21H
	DD	012e40eH
	DD	0115408H
	DD	0103404H
	DD	imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$0?8@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$generate_sliding_ray@$0?8@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 060f01H
	DD	0f00b920fH
	DD	0c007d009H
	DD	060047005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$generate_sliding_ray@$08@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 021H
	DD	imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$08@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$generate_sliding_ray@$08@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 060e21H
	DD	012e40eH
	DD	0117408H
	DD	0103404H
	DD	imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$08@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$generate_sliding_ray@$08@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 060f01H
	DD	0f00b920fH
	DD	0c007d009H
	DD	050046005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$generate_sliding_ray@$0L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 021H
	DD	imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$0L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$generate_sliding_ray@$0L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 060e21H
	DD	012e40eH
	DD	0117408H
	DD	0103404H
	DD	imagerel $LN66
	DD	imagerel $LN66+41
	DD	imagerel $unwind$??$generate_sliding_ray@$0L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$generate_sliding_ray@$0L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 060f01H
	DD	0f00b920fH
	DD	0c007d009H
	DD	050046005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 021H
	DD	imagerel $LN279
	DD	imagerel $LN279+56
	DD	imagerel $unwind$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 021H
	DD	imagerel $LN279+56
	DD	imagerel $LN279+99
	DD	imagerel $chain$0$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 081321H
	DD	013e413H
	DD	014740fH
	DD	015640bH
	DD	01b5404H
	DD	imagerel $LN279+56
	DD	imagerel $LN279+99
	DD	imagerel $chain$0$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 020421H
	DD	012f404H
	DD	imagerel $LN279
	DD	imagerel $LN279+56
	DD	imagerel $unwind$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 050f01H
	DD	016010fH
	DD	0c006d008H
	DD	03004H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 021H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 020021H
	DD	0c7400H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 020521H
	DD	0c7405H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 040a01H
	DD	0d340aH
	DD	06006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 021H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 020021H
	DD	0c7400H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 020521H
	DD	0c7405H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 040a01H
	DD	0d340aH
	DD	06006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 021H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 020021H
	DD	0c7400H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 020521H
	DD	0c7405H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 040a01H
	DD	0d340aH
	DD	06006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 021H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 020021H
	DD	0c7400H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 020521H
	DD	0c7405H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 040a01H
	DD	0d340aH
	DD	06006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 021H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 020021H
	DD	0c7400H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 020521H
	DD	0c7405H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 040a01H
	DD	0d340aH
	DD	06006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 021H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 020021H
	DD	0c7400H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 020521H
	DD	0c7405H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 040a01H
	DD	0d340aH
	DD	06006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 021H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 020021H
	DD	0c7400H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 020521H
	DD	0c7405H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 040a01H
	DD	0d340aH
	DD	06006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 021H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 020021H
	DD	0c7400H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 020521H
	DD	0c7405H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z DD 040a01H
	DD	0d340aH
	DD	06006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 021H
	DD	imagerel $LN488
	DD	imagerel $LN488+51
	DD	imagerel $unwind$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 021H
	DD	imagerel $LN488+51
	DD	imagerel $LN488+80
	DD	imagerel $chain$1$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 041221H
	DD	016f412H
	DD	01f7404H
	DD	imagerel $LN488+51
	DD	imagerel $LN488+80
	DD	imagerel $chain$1$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 040f21H
	DD	017d40fH
	DD	018c404H
	DD	imagerel $LN488
	DD	imagerel $LN488+51
	DD	imagerel $unwind$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 061301H
	DD	0190113H
	DD	06006e008H
	DD	050043005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 021H
	DD	imagerel $LN320
	DD	imagerel $LN320+40
	DD	imagerel $unwind$?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 040021H
	DD	08f400H
	DD	0ac400H
	DD	imagerel $LN320
	DD	imagerel $LN320+40
	DD	imagerel $unwind$?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 082121H
	DD	08f421H
	DD	09d41aH
	DD	0ac40fH
	DD	0116404H
	DD	imagerel $LN320
	DD	imagerel $LN320+40
	DD	imagerel $unwind$?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 050c01H
	DD	0e008a20cH
	DD	050057006H
	DD	03004H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 021H
	DD	imagerel $LN227
	DD	imagerel $LN227+47
	DD	imagerel $unwind$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 021H
	DD	imagerel $LN227+47
	DD	imagerel $LN227+153
	DD	imagerel $chain$2$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 041d21H
	DD	013741dH
	DD	010e404H
	DD	imagerel $LN227+47
	DD	imagerel $LN227+153
	DD	imagerel $chain$2$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 061421H
	DD	011d414H
	DD	012c40bH
	DD	0196404H
	DD	imagerel $LN227
	DD	imagerel $LN227+47
	DD	imagerel $unwind$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 050e01H
	DD	014010eH
	DD	05005f007H
	DD	03004H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_promotion_batch@PawnOptimizations@@YAXAEAUS_MOVELIST@@HHW4PieceType@@@Z DD 0c1e01H
	DD	011741eH
	DD	010641eH
	DD	0f541eH
	DD	0e341eH
	DD	0f01a921eH
	DD	0c016e018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z DD 020021H
	DD	010ee400H
	DD	imagerel $LN57
	DD	imagerel $LN57+198
	DD	imagerel $unwind$?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z DD 021H
	DD	imagerel $LN57
	DD	imagerel $LN57+198
	DD	imagerel $unwind$?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z DD 020821H
	DD	010ee408H
	DD	imagerel $LN57
	DD	imagerel $LN57+198
	DD	imagerel $unwind$?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z DD 072119H
	DD	010f340fH
	DD	0108010fH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0830H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z DD 0c0021H
	DD	0cf400H
	DD	0de400H
	DD	0ed400H
	DD	0fc400H
	DD	0107400H
	DD	0155400H
	DD	imagerel $LN158
	DD	imagerel $LN158+70
	DD	imagerel $unwind$?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z DD 021H
	DD	imagerel $LN158
	DD	imagerel $LN158+70
	DD	imagerel $unwind$?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z DD 0c3621H
	DD	0cf436H
	DD	0de42dH
	DD	0ed428H
	DD	0fc420H
	DD	0107418H
	DD	0155408H
	DD	imagerel $LN158
	DD	imagerel $LN158+70
	DD	imagerel $unwind$?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z DD 041301H
	DD	0110113H
	DD	0300b600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 021H
	DD	imagerel $LN309
	DD	imagerel $LN309+39
	DD	imagerel $unwind$?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 020021H
	DD	08f400H
	DD	imagerel $LN309
	DD	imagerel $LN309+39
	DD	imagerel $unwind$?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 082521H
	DD	08f425H
	DD	09d41aH
	DD	0ac40fH
	DD	0116404H
	DD	imagerel $LN309
	DD	imagerel $LN309+39
	DD	imagerel $unwind$?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 050c01H
	DD	0e008a20cH
	DD	050057006H
	DD	03004H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_queen_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_rook_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_bishop_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?generate_knight_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 021H
	DD	imagerel $LN94
	DD	imagerel $LN94+51
	DD	imagerel $unwind$?generate_knight_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?generate_knight_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 081021H
	DD	0af410H
	DD	0bd40cH
	DD	0c6408H
	DD	0133404H
	DD	imagerel $LN94
	DD	imagerel $LN94+51
	DD	imagerel $unwind$?generate_knight_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_knight_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 050d01H
	DD	0e009c20dH
	DD	07005c007H
	DD	05004H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?generate_pawn_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 021H
	DD	imagerel $LN562
	DD	imagerel $LN562+72
	DD	imagerel $unwind$?generate_pawn_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?generate_pawn_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 0a2021H
	DD	016f420H
	DD	017e41cH
	DD	0186418H
	DD	019540eH
	DD	01f3404H
	DD	imagerel $LN562
	DD	imagerel $LN562+72
	DD	imagerel $unwind$?generate_pawn_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_pawn_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z DD 050f01H
	DD	01a010fH
	DD	0c006d008H
	DD	07004H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_all_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?add_promotion_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z DD 020501H
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DB 04H
	DB	'l'
	DB	02H
	DB	'.'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DB 02H
	DB	0aH
	DD	imagerel ??1locale@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
	DD	imagerel $ip2state$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 060f11H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 0cH
	DB	0dcH
	DB	00H
	DB	'Z'
	DB	02H
	DB	'M', 02H
	DB	06H
	DB	'9', 03H
	DB	04H
	DB	0d0H
	DB	0aH
	DB	0bcH
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	011H
	DB	080H
	DD	imagerel ?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DB	0f9H, 07H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	04H
	DB	04H
	DB	06H
	DD	imagerel $handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 0aH
	DB	0aH
	DD	imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	040H
	DB	030H
	DB	038H
	DB	07eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 0a1c19H
	DD	017641cH
	DD	015341cH
	DD	0f018d21cH
	DD	0d014e016H
	DD	07010c012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$10@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DB 08H
	DB	'h'
	DB	00H
	DB	'8'
	DB	04H
	DB	011H, 02H
	DB	08H
	DB	0acH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DB 02H
	DB	011H
	DB	080H
	DD	imagerel ?catch$10@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA
	DB	0d8H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DB 08H
	DB	0aH
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	040H
	DB	030H
	DB	038H
	DB	04eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DB 038H
	DD	imagerel $stateUnwindMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	DD	imagerel $tryMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	DD	imagerel $ip2state$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD 061419H
	DD	0136414H
	DD	0123414H
	DD	07010d214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DB 0aH
	DB	'x'
	DB	00H
	DB	'Z'
	DB	02H
	DB	0d2H
	DB	06H
	DB	05H, 02H
	DB	0aH
	DB	0acH
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DB 02H
	DB	011H
	DB	080H
	DD	imagerel ?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
	DB	0c9H, 03H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DB 02H
	DB	04H
	DB	04H
	DB	06H
	DD	imagerel $handlerMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DB 0aH
	DB	0aH
	DD	imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	040H
	DB	030H
	DB	038H
	DB	07eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DB 038H
	DD	imagerel $stateUnwindMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
	DD	imagerel $tryMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
	DD	imagerel $ip2state$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD 061419H
	DD	0136414H
	DD	0113414H
	DD	07010d214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$8@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA DD 020a01H
	DD	05006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z DB 012H
	DB	084H
	DB	00H
	DB	'Z'
	DB	02H
	DB	'=', 03H
	DB	08H
	DB	090H
	DB	0aH
	DB	'0'
	DB	06H
	DB	0eaH
	DB	0cH
	DB	0f4H
	DB	010H
	DB	'4'
	DB	08H
	DB	086H
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z DB 02H
	DB	011H
	DB	080H
	DD	imagerel ?catch$8@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA
	DB	0b9H, 08H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z DB 02H
	DB	0aH
	DB	0aH
	DB	0cH
	DD	imagerel $handlerMap$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z DB 010H
	DB	0aH
	DD	imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	0a0H
	DB	03aH
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	0a0H
	DB	032H
	DD	imagerel ??1locale@std@@QEAA@XZ
	DB	0c0H
	DB	032H
	DD	imagerel ??1_Lockit@std@@QEAA@XZ
	DB	060H
	DB	032H
	DD	imagerel ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
	DB	0e1H
	DB	03H
	DB	0c8H
	DB	0d0H
	DB	02dH
	DB	02H
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z DB 038H
	DD	imagerel $stateUnwindMap$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	DD	imagerel $tryMap$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	DD	imagerel $ip2state$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z DD 091b19H
	DD	014011bH
	DD	0e012f014H
	DD	0c00ed010H
	DD	0600b700cH
	DD	0300aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA DB 00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA DB 02H
	DB	08H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA DB 069H
	DD	imagerel $stateUnwindMap$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DD	imagerel $ip2state$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DB	'p'
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DB 04H
	DB	'L'
	DB	02H
	DB	')', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DB 02H
	DB	011H
	DB	080H
	DD	imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DB	0b0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DB 078H
	DD	imagerel $stateUnwindMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	imagerel $tryMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	imagerel $ip2state$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 020619H
	DD	03002b206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DB 04H
	DB	'R'
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DB 02H
	DB	0aH
	DD	imagerel ??1locale@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DB 028H
	DD	imagerel $stateUnwindMap$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
	DD	imagerel $ip2state$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DD 040a11H
	DD	08340aH
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?undo_move@Position@@QEAA_NXZ DD 020021H
	DD	0c6400H
	DD	imagerel $LN301
	DD	imagerel $LN301+35
	DD	imagerel $unwind$?undo_move@Position@@QEAA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?undo_move@Position@@QEAA_NXZ DD 020021H
	DD	0a3400H
	DD	imagerel $LN301+35
	DD	imagerel $LN301+80
	DD	imagerel $chain$2$?undo_move@Position@@QEAA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?undo_move@Position@@QEAA_NXZ DD 044921H
	DD	0a3449H
	DD	06f405H
	DD	imagerel $LN301+35
	DD	imagerel $LN301+80
	DD	imagerel $chain$2$?undo_move@Position@@QEAA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?undo_move@Position@@QEAA_NXZ DD 062a21H
	DD	07e42aH
	DD	0c6411H
	DD	0b5405H
	DD	imagerel $LN301
	DD	imagerel $LN301+35
	DD	imagerel $unwind$?undo_move@Position@@QEAA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?undo_move@Position@@QEAA_NXZ DD 020601H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$9$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z DD 021H
	DD	imagerel $LN651
	DD	imagerel $LN651+127
	DD	imagerel $unwind$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z DD 0a0021H
	DD	06f400H
	DD	07e400H
	DD	0fc400H
	DD	0e6400H
	DD	0c5400H
	DD	imagerel $LN651
	DD	imagerel $LN651+127
	DD	imagerel $unwind$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z DD 021H
	DD	imagerel $LN651
	DD	imagerel $LN651+127
	DD	imagerel $unwind$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z DD 045621H
	DD	06f456H
	DD	0c5400H
	DD	imagerel $LN651+127
	DD	imagerel $LN651+665
	DD	imagerel $chain$2$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z DD 021H
	DD	imagerel $LN651+127
	DD	imagerel $LN651+665
	DD	imagerel $chain$2$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z DD 020521H
	DD	0c5405H
	DD	imagerel $LN651+127
	DD	imagerel $LN651+665
	DD	imagerel $chain$2$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z DD 061d21H
	DD	07e41dH
	DD	0fc411H
	DD	0e6405H
	DD	imagerel $LN651
	DD	imagerel $LN651+127
	DD	imagerel $unwind$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z DD 040901H
	DD	0d0057209H
	DD	030027003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move_piece_in_list@Position@@QEAAXW4Color@@W4PieceType@@HH@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z DD 021H
	DD	imagerel $LN115
	DD	imagerel $LN115+72
	DD	imagerel $unwind$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z DD 040021H
	DD	047400H
	DD	063400H
	DD	imagerel $LN115
	DD	imagerel $LN115+72
	DD	imagerel $unwind$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z DD 021H
	DD	imagerel $LN115
	DD	imagerel $LN115+72
	DD	imagerel $unwind$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z DD 041121H
	DD	047411H
	DD	063405H
	DD	imagerel $LN115
	DD	imagerel $LN115+72
	DD	imagerel $unwind$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?add_piece_to_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?update_derived_state_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1@Z DD 021H
	DD	imagerel $LN214
	DD	imagerel $LN214+102
	DD	imagerel $unwind$?update_derived_state_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?update_derived_state_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1@Z DD 061621H
	DD	057416H
	DD	046411H
	DD	035405H
	DD	imagerel $LN214
	DD	imagerel $LN214+102
	DD	imagerel $unwind$?update_derived_state_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?update_derived_state_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1@Z DD 040901H
	DD	063409H
	DD	0e007f009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXQEAUS_UNDO@@_K1@Z DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@US_UNDO@@@std@@QEAAPEAUS_UNDO@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@US_UNDO@@@std@@QEAAXQEAUS_UNDO@@_K@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?make_castle@@YA?AUS_MOVE@@HH@Z DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?make_promotion@@YA?AUS_MOVE@@HHW4PieceType@@0@Z DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?make_pawn_start@@YA?AUS_MOVE@@HH@Z DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?make_en_passant@@YA?AUS_MOVE@@HH@Z DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?make_capture@@YA?AUS_MOVE@@HHW4PieceType@@@Z DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?make_move@@YA?AUS_MOVE@@HH@Z DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0S_MOVE@@QEAA@HHW4PieceType@@_N101@Z DD 040a01H
	DD	0a340aH
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@ios_base@std@@QEAAXH_N@Z DD 032a01H
	DD	0c342aH
	DD	0c204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gfailure@ios_base@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0failure@ios_base@std@@QEAA@AEBV012@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DB 06H
	DB	0a8H
	DB	00H
	DB	'2'
	DB	02H
	DB	0a8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
	DD	imagerel $ip2state$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DD 062119H
	DD	076812H
	DD	015340dH
	DD	07006f20dH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
	DD	062H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DB 08H
	DB	'e', 02H
	DB	02H
	DB	'~'
	DB	04H
	DB	'6'
	DB	00H
	DB	'0'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DB 04H
	DB	0aH
	DD	imagerel ??1_Lockit@std@@QEAA@XZ
	DB	0b0H
	DB	032H
	DD	imagerel ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
	DB	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
	DD	imagerel $ip2state$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DD 060b11H
	DD	0e007320bH
	DD	060047005H
	DD	030025003H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$ctype@D@std@@MEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 021H
	DD	imagerel $LN15
	DD	imagerel $LN15+21
	DD	imagerel $unwind$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 020521H
	DD	066405H
	DD	imagerel $LN15
	DD	imagerel $LN15+21
	DD	imagerel $unwind$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 021H
	DD	imagerel $LN15
	DD	imagerel $LN15+21
	DD	imagerel $unwind$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 020521H
	DD	066405H
	DD	imagerel $LN15
	DD	imagerel $LN15+21
	DD	imagerel $unwind$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$ctype@D@std@@IEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ctype@D@std@@MEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DB 08H
	DB	08eH
	DB	00H
	DB	09H, 02H
	DB	010H
	DB	086H
	DB	012H
	DB	091H, 02H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DB 012H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02aH
	DD	imagerel ??1_Lockit@std@@QEAA@XZ
	DB	040H
	DB	036H
	DD	imagerel ?dtor$3@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	0adH
	DB	02H
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	imagerel $ip2state$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 0b2011H
	DD	01d7420H
	DD	01c6420H
	DD	01b3420H
	DD	0160120H
	DD	0e012f014H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gctype_base@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1locale@std@@QEAA@XZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0locale@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gfacet@locale@std@@MEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Yarn@_W@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Yarn@_W@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Yarn@D@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Yarn@D@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ DD 020601H
	DD	030029206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Locinfo@std@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Locinfo@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Locinfo@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Locinfo@std@@QEAA@XZ DD 040a19H
	DD	06340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Locinfo@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Locinfo@std@@QEAA@PEBD@Z DB 02H
	DB	0acH
	DB	0eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0_Locinfo@std@@QEAA@PEBD@Z DB 0eH
	DB	0cH
	DD	imagerel ??1_Lockit@std@@QEAA@XZ
	DB	060H
	DB	036H
	DD	imagerel ?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_Locinfo@std@@QEAA@PEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$??0_Locinfo@std@@QEAA@PEBD@Z
	DD	imagerel $ip2state$??0_Locinfo@std@@QEAA@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Locinfo@std@@QEAA@PEBD@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_Locinfo@std@@QEAA@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_Facet_base@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_cast@std@@YAXXZ DD 010401H
	DD	08204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_cast@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_cast@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_Iostream_error_category2@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 067701H
	DD	083477H
	DD	09640aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gsystem_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0system_error@std@@QEAA@AEBV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DB 06H
	DB	092H
	DB	00H
	DB	'6'
	DB	02H
	DB	0a8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	imagerel $ip2state$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD 041719H
	DD	07004d208H
	DD	030026003H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	062H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_System_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_System_error@std@@QEAA@AEBV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 0cH
	DB	'}', 02H
	DB	00H
	DB	094H
	DB	02H
	DB	'N'
	DB	04H
	DB	'8'
	DB	02H
	DB	0e5H, 03H
	DB	00H
	DB	'd'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 04H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a0H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0c0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	imagerel $ip2state$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 092519H
	DD	0160117H
	DD	0e009f00bH
	DD	07005c007H
	DD	030036004H
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	0a2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DB 08H
	DB	08cH
	DB	02H
	DB	'0'
	DB	04H
	DB	'>'
	DB	02H
	DB	0deH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DB 04H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	070H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	imagerel $ip2state$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 061b19H
	DD	015340cH
	DD	07008d20cH
	DD	050066007H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	062H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gruntime_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z DD 021H
	DD	imagerel $LN28
	DD	imagerel $LN28+53
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z DD 020521H
	DD	083405H
	DD	imagerel $LN28
	DD	imagerel $LN28+53
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z DD 060f01H
	DD	0a640fH
	DD	09540fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 021H
	DD	imagerel $LN86
	DD	imagerel $LN86+118
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 040021H
	DD	0dc400H
	DD	0c5400H
	DD	imagerel $LN86
	DD	imagerel $LN86+118
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 021H
	DD	imagerel $LN86
	DD	imagerel $LN86+118
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 040a21H
	DD	0dc40aH
	DD	0c5405H
	DD	imagerel $LN86
	DD	imagerel $LN86+118
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 081101H
	DD	0e3411H
	DD	0f00d5211H
	DD	0d009e00bH
	DD	060067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 021H
	DD	imagerel $LN86
	DD	imagerel $LN86+111
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 040021H
	DD	0dc400H
	DD	0c5400H
	DD	imagerel $LN86
	DD	imagerel $LN86+111
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 021H
	DD	imagerel $LN86
	DD	imagerel $LN86+111
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 040a21H
	DD	0dc40aH
	DD	0c5405H
	DD	imagerel $LN86
	DD	imagerel $LN86+111
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 081101H
	DD	0e3411H
	DD	0f00d5211H
	DD	0d009e00bH
	DD	060067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Deallocate_for_capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXAEAV?$allocator@D@2@QEAD_K@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DD 021H
	DD	imagerel $LN48
	DD	imagerel $LN48+104
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DD 020521H
	DD	063405H
	DD	imagerel $LN48
	DD	imagerel $LN48+104
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DD 081501H
	DD	097415H
	DD	086415H
	DD	075415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD 081501H
	DD	087415H
	DD	076415H
	DD	063415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen_string@std@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 010401H
	DD	08204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBD@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sprintf_s DD 051201H
	DD	0700e6212H
	DD	0500c600dH
	DD	0300bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsprintf_s_l DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?fpclassify@@YAHO@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?fpclassify@@YAHN@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 081901H
	DD	086419H
	DD	075419H
	DD	063419H
	DD	070153219H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Byte$ = 8
__formal$ = 16
__formal$ = 24
??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z PROC	; std::_Maklocchr<char>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 502
	movzx	eax, cl
; Line 503
	ret	0
??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z ENDP	; std::_Maklocchr<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Ptr$ = 48
__formal$ = 56
__formal$ = 64
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 526
$LN17:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx
; Line 528
	call	strlen
; Line 530
	mov	edx, 1
	lea	rdi, QWORD PTR [rax+1]
	mov	rcx, rdi
	call	calloc
	mov	rbx, rax
; Line 532
	test	rax, rax
	je	SHORT $LN16@Maklocstr
; Line 536
	test	rdi, rdi
	je	SHORT $LN4@Maklocstr
	mov	r8, rdi
	mov	rdx, rsi
	mov	rcx, rax
	call	memcpy
$LN4@Maklocstr:
; Line 541
	mov	rsi, QWORD PTR [rsp+56]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN16@Maklocstr:
; Line 533
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
	int	3
$LN14@Maklocstr:
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ PROC	; std::_Tidy_guard<std::numpunct<char> >::~_Tidy_guard<std::numpunct<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 86
$LN11:
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 87
	mov	rbx, QWORD PTR [rcx]
	test	rbx, rbx
	je	SHORT $LN6@Tidy_guard
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 202
	mov	rcx, QWORD PTR [rbx+16]
	call	free
; Line 203
	mov	rcx, QWORD PTR [rbx+32]
	call	free
; Line 204
	mov	rcx, QWORD PTR [rbx+40]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 90
	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 204
	jmp	free
$LN6@Tidy_guard:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 90
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ ENDP	; std::_Tidy_guard<std::numpunct<char> >::~_Tidy_guard<std::numpunct<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Count$ = 8
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 122
	mov	rax, rcx
; Line 123
	ret	0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 64
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 182
$LN11:
	sub	rsp, 56					; 00000038H
; Line 184
	lea	rax, QWORD PTR [rcx+39]
; Line 185
	cmp	rax, rcx
	jbe	SHORT $LN9@Allocate_m
; Line 136
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax
; Line 190
	test	rax, rax
	je	SHORT $LN10@Allocate_m
; Line 191
	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H
; Line 192
	mov	QWORD PTR [rax-8], rcx
; Line 198
	add	rsp, 56					; 00000038H
	ret	0
$LN9@Allocate_m:
; Line 186
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN10@Allocate_m:
; Line 190
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN7@Allocate_m:
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1086
	ret	0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1525
	mov	rax, rcx
; Line 1526
	ret	0
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z
_TEXT	SEGMENT
this$ = 96
_Size_increase$ = 104
_Fn$ = 112
<_Args_0>$ = 120
<_Args_1>$ = 128
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3024
$LN71:
	push	rbx
	push	rbp
	push	rdi
	push	r15
	sub	rsp, 56					; 00000038H
; Line 3028
	mov	r15, QWORD PTR [rcx+16]
; Line 3029
	mov	rbx, 9223372036854775807		; 7fffffffffffffffH
	mov	rax, rbx
	mov	rbp, r9
	sub	rax, r15
	mov	rdi, rcx
	cmp	rax, rdx
	jb	$LN69@Reallocate
; Line 3033
	mov	QWORD PTR [rsp+96], rsi
	mov	QWORD PTR [rsp+104], r12
	lea	r12, QWORD PTR [r15+rdx]
; Line 2978
	mov	rdx, r12
	mov	QWORD PTR [rsp+112], r13
	or	rdx, 15
	mov	QWORD PTR [rsp+48], r14
; Line 3034
	mov	r14, QWORD PTR [rcx+24]
; Line 2978
	cmp	rdx, rbx
; Line 2979
	ja	SHORT $LN9@Reallocate
; Line 2983
	mov	rcx, r14
	mov	rax, rbx
	shr	rcx, 1
	sub	rax, rcx
	cmp	r14, rax
	ja	SHORT $LN9@Reallocate
; Line 2987
	lea	rax, QWORD PTR [r14+rcx]
	mov	rbx, rdx
	cmp	rdx, rax
	cmovb	rbx, rax
$LN9@Reallocate:
; Line 825
	lea	rcx, QWORD PTR [rbx+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3043
	movsx	r13d, BYTE PTR <_Args_1>$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	mov	rsi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3041
	mov	QWORD PTR [rdi+16], r12
; Line 3044
	mov	r8, r15
	mov	QWORD PTR [rdi+24], rbx
	mov	rcx, rax
	lea	r12, QWORD PTR [rax+r15]
	cmp	r14, 15
	jbe	SHORT $LN3@Reallocate
; Line 3045
	mov	rbx, QWORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rdx, rbx
	call	memcpy
; Line 493
	mov	r8, rbp
	mov	edx, r13d
	mov	rcx, r12
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 852
	lea	rdx, QWORD PTR [r14+1]
; Line 1555
	mov	BYTE PTR [r12+rbp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN44@Reallocate
; Line 205
	mov	rax, QWORD PTR [rbx-8]
	add	rdx, 39					; 00000027H
; Line 219
	sub	rbx, rax
	sub	rbx, 8
	cmp	rbx, 31
	ja	SHORT $LN43@Reallocate
; Line 220
	mov	rbx, rax
$LN44@Reallocate:
; Line 289
	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3049
	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rdx, rdi
	call	memcpy
; Line 493
	mov	r8, rbp
	mov	edx, r13d
	mov	rcx, r12
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1555
	mov	BYTE PTR [r12+rbp], 0
$LN4@Reallocate:
; Line 3055
	mov	QWORD PTR [rdi], rsi
	mov	rax, rdi
	mov	r13, QWORD PTR [rsp+112]
	mov	r12, QWORD PTR [rsp+104]
	mov	rsi, QWORD PTR [rsp+96]
	mov	r14, QWORD PTR [rsp+48]
; Line 3056
	add	rsp, 56					; 00000038H
	pop	r15
	pop	rdi
	pop	rbp
	pop	rbx
	ret	0
$LN43@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN69@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3030
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN67@Reallocate:
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBA@QEADQEBD_K2D@Z
_TEXT	SEGMENT
this$ = 48
_New_ptr$ = 56
_Old_ptr$ = 64
_Old_size$ = 72
_Count$ = 80
_Ch$ = 88
??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBA@QEADQEBD_K2D@Z PROC ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator(), COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1556
$LN11:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, r8
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rdx, rax
	mov	rcx, rbx
	mov	r8, r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1556
	mov	rdi, r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	call	memcpy
; Line 493
	movsx	edx, BYTE PTR _Ch$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1554
	add	rdi, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 493
	mov	rbx, QWORD PTR _Count$[rsp]
	mov	rcx, rdi
	mov	r8, rbx
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1555
	mov	BYTE PTR [rdi+rbx], 0
; Line 1556
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBA@QEADQEBD_K2D@Z ENDP ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z
_TEXT	SEGMENT
this$ = 96
_Size_increase$ = 104
_Fn$ = 112
<_Args_0>$ = 120
<_Args_1>$ = 128
<_Args_2>$ = 136
??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_b986da8d428e4af07c64af60eec09b61>,unsigned __int64,unsigned __int64,char>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3024
$LN77:
	push	rbx
	push	rsi
	push	rdi
	push	r12
	sub	rsp, 56					; 00000038H
; Line 3028
	mov	rsi, QWORD PTR [rcx+16]
; Line 3029
	mov	rbx, 9223372036854775807		; 7fffffffffffffffH
	mov	rax, rbx
	mov	r12, r9
	sub	rax, rsi
	mov	rdi, rcx
	cmp	rax, rdx
	jb	$LN75@Reallocate
; Line 3033
	mov	QWORD PTR [rsp+96], rbp
	lea	rbp, QWORD PTR [rsi+rdx]
	mov	QWORD PTR [rsp+104], r13
	mov	QWORD PTR [rsp+112], r14
; Line 3034
	mov	r14, QWORD PTR [rcx+24]
; Line 2978
	mov	rcx, rbp
	or	rcx, 15
	mov	QWORD PTR [rsp+48], r15
	cmp	rcx, rbx
; Line 2979
	ja	SHORT $LN9@Reallocate
; Line 2983
	mov	rdx, r14
	mov	rax, rbx
	shr	rdx, 1
	sub	rax, rdx
	cmp	r14, rax
	ja	SHORT $LN9@Reallocate
; Line 2987
	lea	rax, QWORD PTR [r14+rdx]
	mov	rbx, rcx
	cmp	rcx, rax
	cmovb	rbx, rax
$LN9@Reallocate:
; Line 825
	lea	rcx, QWORD PTR [rbx+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3043
	mov	r13, QWORD PTR <_Args_1>$[rsp]
	sub	rsi, r12
	mov	QWORD PTR [rdi+16], rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	mov	r15, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3042
	mov	QWORD PTR [rdi+24], rbx
; Line 3044
	mov	r8, r12
	movsx	ebx, BYTE PTR <_Args_2>$[rsp]
	lea	rbp, QWORD PTR [rax+r12]
	mov	rcx, rax
	cmp	r14, 15
	jbe	SHORT $LN3@Reallocate
; Line 3045
	mov	rbx, QWORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rdx, rbx
	call	memcpy
; Line 493
	movsx	edx, BYTE PTR <_Args_2>$[rsp]
	mov	r8, r13
	mov	rcx, rbp
	call	memset
; Line 121
	mov	rcx, r13
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1804
	lea	rdx, QWORD PTR [rbx+r12]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	add	rcx, rbp
	lea	r8, QWORD PTR [rsi+1]
	call	memcpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 852
	lea	rdx, QWORD PTR [r14+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN47@Reallocate
; Line 205
	mov	rax, QWORD PTR [rbx-8]
	add	rdx, 39					; 00000027H
; Line 219
	sub	rbx, rax
	sub	rbx, 8
	cmp	rbx, 31
	ja	SHORT $LN46@Reallocate
; Line 220
	mov	rbx, rax
$LN47@Reallocate:
; Line 289
	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3049
	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rdx, rdi
	call	memcpy
; Line 493
	mov	r8, r13
	mov	edx, ebx
	mov	rcx, rbp
	call	memset
; Line 121
	mov	rcx, r13
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1804
	lea	rdx, QWORD PTR [r12+rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	add	rcx, rbp
	lea	r8, QWORD PTR [rsi+1]
	call	memcpy
$LN4@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3055
	mov	QWORD PTR [rdi], r15
	mov	rax, rdi
	mov	r14, QWORD PTR [rsp+112]
	mov	r13, QWORD PTR [rsp+104]
	mov	rbp, QWORD PTR [rsp+96]
	mov	r15, QWORD PTR [rsp+48]
; Line 3056
	add	rsp, 56					; 00000038H
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
$LN46@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN75@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3030
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN73@Reallocate:
??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_b986da8d428e4af07c64af60eec09b61>,unsigned __int64,unsigned __int64,char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??R<lambda_b986da8d428e4af07c64af60eec09b61>@@QEBA@QEADQEBD_K22D@Z
_TEXT	SEGMENT
this$ = 48
_New_ptr$ = 56
_Old_ptr$ = 64
_Old_size$ = 72
_Off$ = 80
_Count$ = 88
_Ch$ = 96
??R<lambda_b986da8d428e4af07c64af60eec09b61>@@QEBA@QEADQEBD_K22D@Z PROC ; <lambda_b986da8d428e4af07c64af60eec09b61>::operator(), COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1805
$LN14:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rsi, QWORD PTR _Off$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1805
	mov	r14, r8
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	r8, rsi
	mov	rdx, r14
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1805
	mov	rbp, r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	call	memcpy
; Line 493
	movsx	edx, BYTE PTR _Ch$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1803
	lea	rdi, QWORD PTR [rbx+rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 493
	mov	rbx, QWORD PTR _Count$[rsp]
	mov	rcx, rdi
	mov	r8, rbx
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1804
	sub	rbp, rsi
	lea	rdx, QWORD PTR [r14+rsi]
	lea	rcx, QWORD PTR [rdi+rbx]
	lea	r8, QWORD PTR [rbp+1]
; Line 1805
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	jmp	memcpy
??R<lambda_b986da8d428e4af07c64af60eec09b61>@@QEBA@QEADQEBD_K22D@Z ENDP ; <lambda_b986da8d428e4af07c64af60eec09b61>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 64
??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 225
$LN18:
	sub	rsp, 56					; 00000038H
; Line 227
	test	rcx, rcx
	jne	SHORT $LN2@Allocate
; Line 228
	xor	eax, eax
; Line 258
	add	rsp, 56					; 00000038H
	ret	0
$LN2@Allocate:
; Line 251
	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN3@Allocate
; Line 184
	lea	rax, QWORD PTR [rcx+39]
; Line 185
	cmp	rax, rcx
	jbe	SHORT $LN16@Allocate
; Line 136
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax
; Line 190
	test	rax, rax
	je	SHORT $LN17@Allocate
; Line 191
	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H
; Line 192
	mov	QWORD PTR [rax-8], rcx
; Line 258
	add	rsp, 56					; 00000038H
	ret	0
$LN3@Allocate:
	add	rsp, 56					; 00000038H
; Line 136
	jmp	??2@YAPEAX_K@Z				; operator new
$LN16@Allocate:
; Line 186
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN17@Allocate:
; Line 190
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN14@Allocate:
??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Get_size_of_n@$0CNI@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Count$ = 48
??$_Get_size_of_n@$0CNI@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<728>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 112
$LN7:
	sub	rsp, 40					; 00000028H
; Line 117
	mov	rax, 25338934167183450			; 005a05a05a05a05aH
	cmp	rcx, rax
	ja	SHORT $LN6@Get_size_o
; Line 122
	imul	rax, rcx, 728				; 000002d8H
; Line 123
	add	rsp, 40					; 00000028H
	ret	0
$LN6@Get_size_o:
; Line 118
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN4@Get_size_o:
??$_Get_size_of_n@$0CNI@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<728>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$construct@US_UNDO@@$$V@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SAXAEAV?$allocator@US_UNDO@@@1@QEAUS_UNDO@@@Z
_TEXT	SEGMENT
__formal$ = 8
_Ptr$ = 16
??$construct@US_UNDO@@$$V@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SAXAEAV?$allocator@US_UNDO@@@1@QEAUS_UNDO@@@Z PROC ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::construct<S_UNDO>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	xor	eax, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 47
	mov	DWORD PTR [rdx+12], -1
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	mov	QWORD PTR [rdx], rax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 47
	mov	BYTE PTR [rdx+8], al
	mov	WORD PTR [rdx+16], ax
	mov	QWORD PTR [rdx+24], rax
	mov	BYTE PTR [rdx+32], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 734
	ret	0
??$construct@US_UNDO@@$$V@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SAXAEAV?$allocator@US_UNDO@@@1@QEAUS_UNDO@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::construct<S_UNDO>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$construct@US_UNDO@@U1@@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SAXAEAV?$allocator@US_UNDO@@@1@QEAUS_UNDO@@$$QEAU3@@Z
_TEXT	SEGMENT
__formal$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@US_UNDO@@U1@@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SAXAEAV?$allocator@US_UNDO@@@1@QEAUS_UNDO@@$$QEAU3@@Z PROC ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::construct<S_UNDO,S_UNDO>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 732
	mov	eax, 5
$LL3@construct:
	lea	rdx, QWORD PTR [rdx+128]
	movups	xmm0, XMMWORD PTR [r8]
	lea	r8, QWORD PTR [r8+128]
	movups	XMMWORD PTR [rdx-128], xmm0
	movups	xmm1, XMMWORD PTR [r8-112]
	movups	XMMWORD PTR [rdx-112], xmm1
	movups	xmm0, XMMWORD PTR [r8-96]
	movups	XMMWORD PTR [rdx-96], xmm0
	movups	xmm1, XMMWORD PTR [r8-80]
	movups	XMMWORD PTR [rdx-80], xmm1
	movups	xmm0, XMMWORD PTR [r8-64]
	movups	XMMWORD PTR [rdx-64], xmm0
	movups	xmm1, XMMWORD PTR [r8-48]
	movups	XMMWORD PTR [rdx-48], xmm1
	movups	xmm0, XMMWORD PTR [r8-32]
	movups	XMMWORD PTR [rdx-32], xmm0
	movups	xmm1, XMMWORD PTR [r8-16]
	movups	XMMWORD PTR [rdx-16], xmm1
	sub	rax, 1
	jne	SHORT $LL3@construct
	movups	xmm0, XMMWORD PTR [r8]
	movups	XMMWORD PTR [rdx], xmm0
	movups	xmm1, XMMWORD PTR [r8+16]
	movups	XMMWORD PTR [rdx+16], xmm1
	movups	xmm0, XMMWORD PTR [r8+32]
	movups	XMMWORD PTR [rdx+32], xmm0
	movups	xmm1, XMMWORD PTR [r8+48]
	movups	XMMWORD PTR [rdx+48], xmm1
	movups	xmm0, XMMWORD PTR [r8+64]
	movups	XMMWORD PTR [rdx+64], xmm0
	mov	rax, QWORD PTR [r8+80]
	mov	QWORD PTR [rdx+80], rax
; Line 734
	ret	0
??$construct@US_UNDO@@U1@@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SAXAEAV?$allocator@US_UNDO@@@1@QEAUS_UNDO@@$$QEAU3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::construct<S_UNDO,S_UNDO>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$forward@US_UNDO@@@std@@YA$$QEAUS_UNDO@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@US_UNDO@@@std@@YA$$QEAUS_UNDO@@AEAU1@@Z PROC	; std::forward<S_UNDO>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1502
	mov	rax, rcx
; Line 1503
	ret	0
??$forward@US_UNDO@@@std@@YA$$QEAUS_UNDO@@AEAU1@@Z ENDP	; std::forward<S_UNDO>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_memmove_tail@PEAUS_UNDO@@@std@@YAPEAUS_UNDO@@QEBDQEAU1@_K2@Z
_TEXT	SEGMENT
_First_ch$ = 48
_Dest$ = 56
_Byte_count$ = 64
_Object_count$ = 72
??$_Copy_memmove_tail@PEAUS_UNDO@@@std@@YAPEAUS_UNDO@@QEBDQEAU1@_K2@Z PROC ; std::_Copy_memmove_tail<S_UNDO *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 4747
$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; Line 4751
	mov	rdx, rcx
	mov	rcx, rbx
	call	memmove
; Line 4755
	lea	rax, QWORD PTR [rbx+rdi]
; Line 4759
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove_tail@PEAUS_UNDO@@@std@@YAPEAUS_UNDO@@QEBDQEAU1@_K2@Z ENDP ; std::_Copy_memmove_tail<S_UNDO *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$move@AEAPEAUS_UNDO@@@std@@YA$$QEAPEAUS_UNDO@@AEAPEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAPEAUS_UNDO@@@std@@YA$$QEAPEAUS_UNDO@@AEAPEAU1@@Z PROC ; std::move<S_UNDO * &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1513
	mov	rax, rcx
; Line 1514
	ret	0
??$move@AEAPEAUS_UNDO@@@std@@YA$$QEAPEAUS_UNDO@@AEAPEAU1@@Z ENDP ; std::move<S_UNDO * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_To_address@PEAUS_UNDO@@@std@@YA?A_PAEBQEAUS_UNDO@@@Z
_TEXT	SEGMENT
_Val$ = 8
??$_To_address@PEAUS_UNDO@@@std@@YA?A_PAEBQEAUS_UNDO@@@Z PROC ; std::_To_address<S_UNDO *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 4627
	mov	rax, QWORD PTR [rcx]
; Line 4628
	ret	0
??$_To_address@PEAUS_UNDO@@@std@@YA?A_PAEBQEAUS_UNDO@@@Z ENDP ; std::_To_address<S_UNDO *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 326
	ret	0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 64
_Bytes$ = 72
??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 261
$LN13:
	sub	rsp, 56					; 00000038H
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN8@Deallocate
; Line 205
	mov	rax, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
; Line 219
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $LN7@Deallocate
; Line 220
	mov	rcx, rax
$LN8@Deallocate:
; Line 291
	add	rsp, 56					; 00000038H
; Line 289
	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN7@Deallocate:
; Line 219
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN10@Deallocate:
??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$max@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$max@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::max<unsigned __int64>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; Line 77
	mov	rax, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rax
	cmovb	rcx, rdx
	mov	rax, rcx
; Line 78
	ret	0
??$max@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::max<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$?0$0A@@id@locale@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??$?0$0A@@id@locale@std@@QEAA@XZ PROC			; std::locale::id::id<0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 108
	mov	QWORD PTR [rcx], 0
	mov	rax, rcx
	ret	0
??$?0$0A@@id@locale@std@@QEAA@XZ ENDP			; std::locale::id::id<0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z PROC		; std::forward<char * &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1502
	mov	rax, rcx
; Line 1503
	ret	0
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1502
	mov	rax, rcx
; Line 1503
	ret	0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1525
	mov	rax, rcx
; Line 1526
	ret	0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z
_TEXT	SEGMENT
_Al$ = 8
_Count$ = 16
??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z PROC ; std::_Allocate_at_least_helper<std::allocator<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	mov	rcx, QWORD PTR [rdx]
	jmp	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z ENDP ; std::_Allocate_at_least_helper<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Emplace_back<>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1844
	mov	rax, QWORD PTR [rcx+8]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	xor	edx, edx
	mov	QWORD PTR [rax], rdx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 47
	mov	BYTE PTR [rax+8], dl
	mov	DWORD PTR [rax+12], -1
	mov	WORD PTR [rax+16], dx
	mov	QWORD PTR [rax+24], rdx
	mov	BYTE PTR [rax+32], dl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1845
	add	QWORD PTR [rcx+8], 728			; 000002d8H
; Line 1846
	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1_Reallocation_guard@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 64
??1_Reallocation_guard@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Reallocation_guard::~_Reallocation_guard, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 620
$LN22:
	sub	rsp, 56					; 00000038H
	mov	rax, rcx
; Line 621
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN10@Reallocati
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	imul	rdx, QWORD PTR [rax+16], 728		; 000002d8H
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN15@Reallocati
; Line 205
	mov	rax, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
; Line 219
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $LN14@Reallocati
; Line 220
	mov	rcx, rax
$LN15@Reallocati:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 625
	add	rsp, 56					; 00000038H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 289
	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN10@Reallocati:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 625
	add	rsp, 56					; 00000038H
	ret	0
$LN14@Reallocati:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN19@Reallocati:
??1_Reallocation_guard@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Reallocation_guard::~_Reallocation_guard
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Emplace_back@US_UNDO@@@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAX$$QEAUS_UNDO@@@Z
_TEXT	SEGMENT
this$ = 8
<_Vals_0>$ = 16
??$_Emplace_back@US_UNDO@@@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAX$$QEAUS_UNDO@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Emplace_back<S_UNDO>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1844
	mov	rax, QWORD PTR [rcx+8]
	mov	r9, rcx
; Line 732
	mov	r8d, 5
	npad	3
$LL5@Emplace_ba:
	lea	rax, QWORD PTR [rax+128]
	movups	xmm0, XMMWORD PTR [rdx]
	lea	rdx, QWORD PTR [rdx+128]
	movups	XMMWORD PTR [rax-128], xmm0
	movups	xmm1, XMMWORD PTR [rdx-112]
	movups	XMMWORD PTR [rax-112], xmm1
	movups	xmm0, XMMWORD PTR [rdx-96]
	movups	XMMWORD PTR [rax-96], xmm0
	movups	xmm1, XMMWORD PTR [rdx-80]
	movups	XMMWORD PTR [rax-80], xmm1
	movups	xmm0, XMMWORD PTR [rdx-64]
	movups	XMMWORD PTR [rax-64], xmm0
	movups	xmm1, XMMWORD PTR [rdx-48]
	movups	XMMWORD PTR [rax-48], xmm1
	movups	xmm0, XMMWORD PTR [rdx-32]
	movups	XMMWORD PTR [rax-32], xmm0
	movups	xmm1, XMMWORD PTR [rdx-16]
	movups	XMMWORD PTR [rax-16], xmm1
	sub	r8, 1
	jne	SHORT $LL5@Emplace_ba
	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rax], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rax+16], xmm1
	movups	xmm0, XMMWORD PTR [rdx+32]
	movups	XMMWORD PTR [rax+32], xmm0
	movups	xmm1, XMMWORD PTR [rdx+48]
	movups	XMMWORD PTR [rax+48], xmm1
	movups	xmm0, XMMWORD PTR [rdx+64]
	movups	XMMWORD PTR [rax+64], xmm0
	mov	rcx, QWORD PTR [rdx+80]
	mov	QWORD PTR [rax+80], rcx
; Line 1845
	add	QWORD PTR [r9+8], 728			; 000002d8H
; Line 1846
	ret	0
??$_Emplace_back@US_UNDO@@@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAX$$QEAUS_UNDO@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Emplace_back<S_UNDO>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAPEAUS_UNDO@@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAPEAUS_UNDO@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Release, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1849
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rcx], rax
; Line 1851
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAPEAUS_UNDO@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::~_Uninitialized_backout_al<std::allocator<S_UNDO> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1840
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::~_Uninitialized_backout_al<std::allocator<S_UNDO> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAA@PEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Dest$ = 16
_Al_$ = 24
??0?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAA@PEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Uninitialized_backout_al<std::allocator<S_UNDO> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1833
	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], r8
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAA@PEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Uninitialized_backout_al<std::allocator<S_UNDO> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_memmove@PEAUS_UNDO@@PEAU1@@std@@YAPEAUS_UNDO@@PEAU1@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAUS_UNDO@@PEAU1@@std@@YAPEAUS_UNDO@@PEAU1@00@Z PROC ; std::_Copy_memmove<S_UNDO *,S_UNDO *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 4762
$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; Line 4769
	sub	rbx, rcx
; Line 4751
	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove
; Line 4755
	lea	rax, QWORD PTR [rbx+rdi]
; Line 4771
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAUS_UNDO@@PEAU1@@std@@YAPEAUS_UNDO@@PEAU1@00@Z ENDP ; std::_Copy_memmove<S_UNDO *,S_UNDO *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unfancy@US_UNDO@@@std@@YAPEAUS_UNDO@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@US_UNDO@@@std@@YAPEAUS_UNDO@@PEAU1@@Z PROC	; std::_Unfancy<S_UNDO>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 69
	mov	rax, rcx
; Line 70
	ret	0
??$_Unfancy@US_UNDO@@@std@@YAPEAUS_UNDO@@PEAU1@@Z ENDP	; std::_Unfancy<S_UNDO>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$move@AEAUS_UNDO@@@std@@YA$$QEAUS_UNDO@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAUS_UNDO@@@std@@YA$$QEAUS_UNDO@@AEAU1@@Z PROC	; std::move<S_UNDO &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1513
	mov	rax, rcx
; Line 1514
	ret	0
??$move@AEAUS_UNDO@@@std@@YA$$QEAUS_UNDO@@AEAU1@@Z ENDP	; std::move<S_UNDO &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Get_unwrapped@AEBQEAUS_UNDO@@@std@@YA?A_TAEBQEAUS_UNDO@@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@AEBQEAUS_UNDO@@@std@@YA?A_TAEBQEAUS_UNDO@@@Z PROC ; std::_Get_unwrapped<S_UNDO * const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 1382
	mov	rax, QWORD PTR [rcx]
; Line 1388
	ret	0
??$_Get_unwrapped@AEBQEAUS_UNDO@@@std@@YA?A_TAEBQEAUS_UNDO@@@Z ENDP ; std::_Get_unwrapped<S_UNDO * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z PROC ; std::forward<std::_Facet_base * &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1502
	mov	rax, rcx
; Line 1503
	ret	0
??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z ENDP ; std::forward<std::_Facet_base * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z
_TEXT	SEGMENT
_Obj$ = 8
<_Args_0>$ = 16
??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z PROC ; std::_Construct_in_place<char *,char * &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 476
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
; Line 478
	ret	0
??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z ENDP ; std::_Construct_in_place<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1525
	mov	rax, rcx
; Line 1526
	ret	0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
_TEXT	SEGMENT
this$ = 96
_Size_increase$ = 104
_Fn$ = 112
<_Args_0>$ = 120
<_Args_1>$ = 128
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3024
$LN71:
	push	rbx
	push	rdi
	push	r13
	push	r15
	sub	rsp, 56					; 00000038H
; Line 3028
	mov	r15, QWORD PTR [rcx+16]
; Line 3029
	mov	rbx, 9223372036854775807		; 7fffffffffffffffH
	mov	rax, rbx
	mov	r13, r9
	sub	rax, r15
	mov	rdi, rcx
	cmp	rax, rdx
	jb	$LN69@Reallocate
; Line 3033
	mov	QWORD PTR [rsp+96], rbp
	lea	rbp, QWORD PTR [r15+rdx]
	mov	QWORD PTR [rsp+104], rsi
; Line 2978
	mov	rdx, rbp
	or	rdx, 15
	mov	QWORD PTR [rsp+112], r12
	mov	QWORD PTR [rsp+48], r14
; Line 3034
	mov	r14, QWORD PTR [rcx+24]
; Line 2978
	cmp	rdx, rbx
; Line 2979
	ja	SHORT $LN9@Reallocate
; Line 2983
	mov	rcx, r14
	mov	rax, rbx
	shr	rcx, 1
	sub	rax, rcx
	cmp	r14, rax
	ja	SHORT $LN9@Reallocate
; Line 2987
	lea	rax, QWORD PTR [r14+rcx]
	mov	rbx, rdx
	cmp	rdx, rax
	cmovb	rbx, rax
$LN9@Reallocate:
; Line 825
	lea	rcx, QWORD PTR [rbx+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3041
	mov	QWORD PTR [rdi+16], rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	mov	rsi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3043
	mov	rbp, QWORD PTR <_Args_1>$[rsp]
; Line 3044
	mov	r8, r15
	mov	QWORD PTR [rdi+24], rbx
	mov	rcx, rax
	lea	r12, QWORD PTR [rax+r15]
	cmp	r14, 15
	jbe	SHORT $LN3@Reallocate
; Line 3045
	mov	rbx, QWORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rdx, rbx
	call	memcpy
	mov	r8, rbp
	mov	rdx, r13
	mov	rcx, r12
	call	memcpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 852
	lea	rdx, QWORD PTR [r14+1]
; Line 1528
	mov	BYTE PTR [r12+rbp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN44@Reallocate
; Line 205
	mov	rax, QWORD PTR [rbx-8]
	add	rdx, 39					; 00000027H
; Line 219
	sub	rbx, rax
	sub	rbx, 8
	cmp	rbx, 31
	ja	SHORT $LN43@Reallocate
; Line 220
	mov	rbx, rax
$LN44@Reallocate:
; Line 289
	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3049
	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rdx, rdi
	call	memcpy
	mov	r8, rbp
	mov	rdx, r13
	mov	rcx, r12
	call	memcpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1528
	mov	BYTE PTR [r12+rbp], 0
$LN4@Reallocate:
; Line 3055
	mov	QWORD PTR [rdi], rsi
	mov	rax, rdi
	mov	r12, QWORD PTR [rsp+112]
	mov	rsi, QWORD PTR [rsp+104]
	mov	rbp, QWORD PTR [rsp+96]
	mov	r14, QWORD PTR [rsp+48]
; Line 3056
	add	rsp, 56					; 00000038H
	pop	r15
	pop	r13
	pop	rdi
	pop	rbx
	ret	0
$LN43@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN69@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3030
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN67@Reallocate:
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBA@QEADQEBD_K12@Z
_TEXT	SEGMENT
this$ = 48
_New_ptr$ = 56
_Old_ptr$ = 64
_Old_size$ = 72
_Ptr$ = 80
_Count$ = 88
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBA@QEADQEBD_K12@Z PROC ; <lambda_65e615be2a453ca0576c979606f46740>::operator(), COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1529
$LN11:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, r8
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rdx, rax
	mov	rcx, rbx
	mov	r8, r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1529
	mov	rdi, r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	call	memcpy
	mov	rdx, QWORD PTR _Ptr$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1527
	add	rdi, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rbx, QWORD PTR _Count$[rsp]
	mov	rcx, rdi
	mov	r8, rbx
	call	memcpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1528
	mov	BYTE PTR [rdi+rbx], 0
; Line 1529
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBA@QEADQEBD_K12@Z ENDP ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Max_limit@_J@std@@YA_JXZ
_TEXT	SEGMENT
??$_Max_limit@_J@std@@YA_JXZ PROC			; std::_Max_limit<__int64>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; Line 867
	mov	rax, 9223372036854775807		; 7fffffffffffffffH
; Line 871
	ret	0
??$_Max_limit@_J@std@@YA_JXZ ENDP			; std::_Max_limit<__int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1513
	mov	rax, rcx
; Line 1514
	ret	0
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$numpunct@D@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$numpunct@D@std@@MEAAPEAXI@Z PROC			; std::numpunct<char>::`scalar deleting destructor', COMDAT
$LN17:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 142
	lea	rax, OFFSET FLAT:??_7?$numpunct@D@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx
; Line 202
	mov	rcx, QWORD PTR [rcx+16]
	call	free
; Line 203
	mov	rcx, QWORD PTR [rdi+32]
	call	free
; Line 204
	mov	rcx, QWORD PTR [rdi+40]
	call	free
; Line 144
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	QWORD PTR [rdi], rax
	test	bl, 1
	je	SHORT $LN13@scalar
	mov	edx, 48					; 00000030H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN13@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$numpunct@D@std@@MEAAPEAXI@Z ENDP			; std::numpunct<char>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$numpunct@D@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$numpunct@D@std@@AEAAXXZ PROC			; std::numpunct<char>::_Tidy, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 201
$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 202
	mov	rcx, QWORD PTR [rcx+16]
	call	free
; Line 203
	mov	rcx, QWORD PTR [rbx+32]
	call	free
; Line 204
	mov	rcx, QWORD PTR [rbx+40]
; Line 205
	add	rsp, 32					; 00000020H
	pop	rbx
; Line 204
	jmp	free
?_Tidy@?$numpunct@D@std@@AEAAXXZ ENDP			; std::numpunct<char>::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::do_truename, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 196
$LN25:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 197
	mov	rbx, QWORD PTR [rcx+40]
	xor	eax, eax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 456
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 493
	movups	XMMWORD PTR [rdx], xmm0
; Line 517
	mov	QWORD PTR [rdx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 196
	mov	rdi, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 518
	mov	QWORD PTR [rdx+24], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 456
	call	strlen
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 769
	mov	r8, rax
	mov	rdx, rbx
	mov	rcx, rdi
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 198
	mov	rbx, QWORD PTR [rsp+64]
	mov	rax, rdi
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::do_truename
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::do_falsename, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 192
$LN25:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 193
	mov	rbx, QWORD PTR [rcx+32]
	xor	eax, eax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 456
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 493
	movups	XMMWORD PTR [rdx], xmm0
; Line 517
	mov	QWORD PTR [rdx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 192
	mov	rdi, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 518
	mov	QWORD PTR [rdx+24], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 456
	call	strlen
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 769
	mov	r8, rax
	mov	rdx, rbx
	mov	rcx, rdi
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 194
	mov	rbx, QWORD PTR [rsp+64]
	mov	rax, rdi
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::do_falsename
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::do_grouping, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 188
$LN25:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 189
	mov	rbx, QWORD PTR [rcx+16]
	xor	eax, eax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 456
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 493
	movups	XMMWORD PTR [rdx], xmm0
; Line 517
	mov	QWORD PTR [rdx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 188
	mov	rdi, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 518
	mov	QWORD PTR [rdx+24], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 456
	call	strlen
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 769
	mov	r8, rax
	mov	rdx, rbx
	mov	rcx, rdi
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 190
	mov	rbx, QWORD PTR [rsp+64]
	mov	rax, rdi
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::do_grouping
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_thousands_sep@?$numpunct@D@std@@MEBADXZ
_TEXT	SEGMENT
this$ = 8
?do_thousands_sep@?$numpunct@D@std@@MEBADXZ PROC	; std::numpunct<char>::do_thousands_sep, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 185
	movzx	eax, BYTE PTR [rcx+25]
; Line 186
	ret	0
?do_thousands_sep@?$numpunct@D@std@@MEBADXZ ENDP	; std::numpunct<char>::do_thousands_sep
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_decimal_point@?$numpunct@D@std@@MEBADXZ
_TEXT	SEGMENT
this$ = 8
?do_decimal_point@?$numpunct@D@std@@MEBADXZ PROC	; std::numpunct<char>::do_decimal_point, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 181
	movzx	eax, BYTE PTR [rcx+24]
; Line 182
	ret	0
?do_decimal_point@?$numpunct@D@std@@MEBADXZ ENDP	; std::numpunct<char>::do_decimal_point
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 112
_Guard$ = 112
_Lobj$ = 120
_Isdef$ = 128
?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z PROC	; std::numpunct<char>::_Init, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 152
$LN59:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	movzx	r15d, r8b
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 285
	call	localeconv
	mov	rsi, rax
; Line 281
	lea	rcx, QWORD PTR $T1[rsp]
	call	_Getcvt
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 156
	xor	eax, eax
	mov	QWORD PTR [rbx+16], rax
; Line 157
	mov	QWORD PTR [rbx+32], rax
; Line 158
	mov	QWORD PTR [rbx+40], rax
; Line 160
	mov	QWORD PTR _Guard$[rsp], rbx
; Line 161
	test	r15b, r15b
	lea	rdi, OFFSET FLAT:??_C@_00CNPNBAHC@@
	jne	SHORT $LN6@Init
	mov	rdi, QWORD PTR [rsi+16]
$LN6@Init:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 528
	mov	rcx, rdi
	call	strlen
	lea	rbp, QWORD PTR [rax+1]
; Line 530
	mov	edx, 1
	mov	rcx, rbp
	call	calloc
	mov	r14, rax
; Line 532
	test	rax, rax
	je	$LN55@Init
; Line 536
	test	rbp, rbp
	je	SHORT $LN15@Init
	mov	r8, rbp
	mov	rdx, rdi
	mov	rcx, rax
	call	memcpy
$LN15@Init:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 161
	mov	QWORD PTR [rbx+16], r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 530
	mov	edx, 1
	mov	ecx, 6
	call	calloc
	mov	rcx, rax
; Line 532
	test	rax, rax
	je	$LN56@Init
; Line 536
	mov	eax, DWORD PTR ??_C@_05LAPONLG@false@
	mov	DWORD PTR [rcx], eax
	movzx	eax, WORD PTR ??_C@_05LAPONLG@false@+4
	mov	WORD PTR [rcx+4], ax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 162
	mov	QWORD PTR [rbx+32], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 530
	mov	edx, 1
	mov	ecx, 5
	call	calloc
	mov	rcx, rax
; Line 532
	test	rax, rax
	je	SHORT $LN57@Init
; Line 536
	mov	eax, DWORD PTR ??_C@_04LOAJBDKD@true@
	mov	DWORD PTR [rcx], eax
	movzx	eax, BYTE PTR ??_C@_04LOAJBDKD@true@+4
	mov	BYTE PTR [rcx+4], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 163
	mov	QWORD PTR [rbx+40], rcx
; Line 166
	test	r15b, r15b
	je	SHORT $LN2@Init
; Line 167
	mov	BYTE PTR [rbx+24], 46			; 0000002eH
; Line 168
	mov	al, 44					; 0000002cH
; Line 169
	jmp	SHORT $LN3@Init
$LN2@Init:
; Line 174
	mov	rax, QWORD PTR [rsi]
	movzx	ecx, BYTE PTR [rax]
	mov	BYTE PTR [rbx+24], cl
; Line 175
	mov	rax, QWORD PTR [rsi+8]
	movzx	eax, BYTE PTR [rax]
$LN3@Init:
; Line 178
	mov	BYTE PTR [rbx+25], al
	lea	r11, QWORD PTR [rsp+80]
	mov	rbx, QWORD PTR [r11+40]
	mov	rbp, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rdi
	ret	0
$LN57@Init:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 533
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
	npad	1
$LN55@Init:
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
	int	3
$LN56@Init:
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
	int	3
$LN53@Init:
?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z ENDP	; std::numpunct<char>::_Init
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 112
_Guard$ = 112
_Lobj$ = 120
_Isdef$ = 128
?dtor$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA PROC ; `std::numpunct<char>::_Init'::`1'::dtor$0
	lea	rcx, QWORD PTR _Guard$[rdx]
	jmp	??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::numpunct<char> >::~_Tidy_guard<std::numpunct<char> >
?dtor$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA ENDP ; `std::numpunct<char>::_Init'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$numpunct@D@std@@MEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$numpunct@D@std@@MEAA@XZ PROC			; std::numpunct<char>::~numpunct<char>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 142
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7?$numpunct@D@std@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
; Line 202
	mov	rcx, QWORD PTR [rcx+16]
	call	free
; Line 203
	mov	rcx, QWORD PTR [rbx+32]
	call	free
; Line 204
	mov	rcx, QWORD PTR [rbx+40]
	call	free
; Line 144
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	QWORD PTR [rbx], rax
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$numpunct@D@std@@MEAA@XZ ENDP			; std::numpunct<char>::~numpunct<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 240
$T3 = 240
_Ploc$ = 248
$T4 = 256
_Guard$5 = 264
?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z PROC ; std::numpunct<char>::_Getcat, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 133
$LN166:
	mov	QWORD PTR [rsp+16], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-55]
	sub	rsp, 192				; 000000c0H
	mov	r14, rdx
	mov	rsi, rcx
	xor	r15d, r15d
	mov	edi, r15d
	mov	DWORD PTR $T3[rbp-137], r15d
; Line 135
	test	rcx, rcx
	je	$LN99@Getcat
	cmp	QWORD PTR [rcx], rdi
	jne	$LN99@Getcat
; Line 136
	mov	ecx, 48					; 00000030H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax
	mov	QWORD PTR $T4[rbp-137], rax
	test	rax, rax
	je	$LN4@Getcat
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 373
	mov	rax, QWORD PTR [r14+8]
	test	rax, rax
	je	SHORT $LN12@Getcat
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 190
	mov	rdi, QWORD PTR [rax+40]
	test	rdi, rdi
	jne	SHORT $LN13@Getcat
	lea	rdi, QWORD PTR [rax+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 373
	jmp	SHORT $LN13@Getcat
$LN12@Getcat:
	lea	rdi, OFFSET FLAT:??_C@_00CNPNBAHC@@
$LN13@Getcat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 232
	xor	edx, edx
	lea	rcx, QWORD PTR $T1[rbp-137]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
	npad	1
; Line 140
	mov	QWORD PTR $T1[rbp-129], r15
	mov	BYTE PTR $T1[rbp-121], 0
	mov	QWORD PTR $T1[rbp-113], r15
	mov	BYTE PTR $T1[rbp-105], 0
	mov	QWORD PTR $T1[rbp-97], r15
	mov	WORD PTR $T1[rbp-89], r15w
	mov	QWORD PTR $T1[rbp-81], r15
	mov	WORD PTR $T1[rbp-73], r15w
	mov	QWORD PTR $T1[rbp-65], r15
	mov	BYTE PTR $T1[rbp-57], 0
	mov	QWORD PTR $T1[rbp-49], r15
	mov	BYTE PTR $T1[rbp-41], 0
; Line 235
	test	rdi, rdi
	je	$LN21@Getcat
; Line 236
	mov	rdx, rdi
	lea	rcx, QWORD PTR $T1[rbp-137]
	call	?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z ; std::_Locinfo::_Locinfo_ctor
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 136
	mov	edi, 1
	mov	DWORD PTR $T3[rbp-137], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 143
	mov	DWORD PTR [rbx+8], r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 129
	lea	rax, OFFSET FLAT:??_7?$numpunct@D@std@@6B@
	mov	QWORD PTR [rbx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 285
	call	localeconv
; Line 281
	lea	rcx, QWORD PTR $T2[rbp-137]
	call	_Getcvt
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 156
	mov	QWORD PTR [rbx+16], r15
; Line 157
	mov	QWORD PTR [rbx+32], r15
; Line 158
	mov	QWORD PTR [rbx+40], r15
; Line 160
	mov	QWORD PTR _Guard$5[rbp-137], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 530
	mov	edx, edi
	mov	ecx, edi
	call	calloc
; Line 532
	test	rax, rax
	je	$LN162@Getcat
; Line 537
	mov	BYTE PTR [rax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 161
	mov	QWORD PTR [rbx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 530
	mov	edx, edi
	mov	ecx, 6
	call	calloc
	mov	rcx, rax
; Line 532
	test	rax, rax
	je	$LN163@Getcat
; Line 536
	mov	eax, DWORD PTR ??_C@_05LAPONLG@false@
	mov	DWORD PTR [rcx], eax
	movzx	eax, WORD PTR ??_C@_05LAPONLG@false@+4
	mov	WORD PTR [rcx+4], ax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 162
	mov	QWORD PTR [rbx+32], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 530
	mov	edx, edi
	mov	ecx, 5
	call	calloc
	mov	rcx, rax
; Line 532
	test	rax, rax
	je	$LN164@Getcat
; Line 536
	mov	eax, DWORD PTR ??_C@_04LOAJBDKD@true@
	mov	DWORD PTR [rcx], eax
	movzx	eax, BYTE PTR ??_C@_04LOAJBDKD@true@+4
	mov	BYTE PTR [rcx+4], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 163
	mov	QWORD PTR [rbx+40], rcx
; Line 167
	mov	WORD PTR [rbx+24], 11310		; 00002c2eH
; Line 136
	jmp	SHORT $LN5@Getcat
$LN4@Getcat:
	mov	rbx, r15
$LN5@Getcat:
	mov	QWORD PTR [rsi], rbx
	test	dil, 1
	je	SHORT $LN99@Getcat
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 257
	lea	rcx, QWORD PTR $T1[rbp-137]
	call	?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z ; std::_Locinfo::_Locinfo_dtor
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-49]
	test	rcx, rcx
	je	SHORT $LN107@Getcat
; Line 207
	call	free
$LN107@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-49], r15
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-65]
	test	rcx, rcx
	je	SHORT $LN114@Getcat
; Line 207
	call	free
$LN114@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-65], r15
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-81]
	test	rcx, rcx
	je	SHORT $LN121@Getcat
; Line 207
	call	free
$LN121@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-81], r15
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-97]
	test	rcx, rcx
	je	SHORT $LN128@Getcat
; Line 207
	call	free
$LN128@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-97], r15
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-113]
	test	rcx, rcx
	je	SHORT $LN135@Getcat
; Line 207
	call	free
$LN135@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-113], r15
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-129]
	test	rcx, rcx
	je	SHORT $LN142@Getcat
; Line 207
	call	free
$LN142@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-129], r15
; Line 258
	lea	rcx, QWORD PTR $T1[rbp-137]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
	npad	1
$LN99@Getcat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 138
	mov	eax, 4
; Line 139
	mov	rbx, QWORD PTR [rsp+248]
	add	rsp, 192				; 000000c0H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN21@Getcat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 240
	lea	rcx, OFFSET FLAT:??_C@_0BA@ELKIONDK@bad?5locale?5name@
	call	?_Xruntime_error@std@@YAXPEBD@Z		; std::_Xruntime_error
	npad	1
$LN162@Getcat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 533
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
	int	3
$LN163@Getcat:
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
	int	3
$LN164@Getcat:
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
	int	3
$LN160@Getcat:
?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ENDP ; std::numpunct<char>::_Getcat
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 240
$T3 = 240
_Ploc$ = 248
$T4 = 256
_Guard$5 = 264
?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	edx, 48					; 00000030H
	mov	rcx, QWORD PTR $T4[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 240
$T3 = 240
_Ploc$ = 248
$T4 = 256
_Guard$5 = 264
?dtor$2@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$2
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
?dtor$2@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 240
$T3 = 240
_Ploc$ = 248
$T4 = 256
_Guard$5 = 264
?dtor$3@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$3
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 8
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$3@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 240
$T3 = 240
_Ploc$ = 248
$T4 = 256
_Guard$5 = 264
?dtor$4@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$4
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 24
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$4@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 240
$T3 = 240
_Ploc$ = 248
$T4 = 256
_Guard$5 = 264
?dtor$5@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$5
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 40					; 00000028H
	jmp	??1?$_Yarn@_W@std@@QEAA@XZ		; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$5@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 240
$T3 = 240
_Ploc$ = 248
$T4 = 256
_Guard$5 = 264
?dtor$6@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$6
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 56					; 00000038H
	jmp	??1?$_Yarn@_W@std@@QEAA@XZ		; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$6@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 240
$T3 = 240
_Ploc$ = 248
$T4 = 256
_Guard$5 = 264
?dtor$7@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$7
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 72					; 00000048H
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$7@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 240
$T3 = 240
_Ploc$ = 248
$T4 = 256
_Guard$5 = 264
?dtor$8@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$8
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 88					; 00000058H
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$8@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 240
$T3 = 240
_Ploc$ = 248
$T4 = 256
_Guard$5 = 264
?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T3[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN8@dtor$1
	and	DWORD PTR $T3[rbp], -2
	lea	rcx, QWORD PTR $T1[rbp]
	call	??1_Locinfo@std@@QEAA@XZ		; std::_Locinfo::~_Locinfo
$LN8@dtor$1:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 240
$T3 = 240
_Ploc$ = 248
$T4 = 256
_Guard$5 = 264
?dtor$9@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$9
	mov	rcx, QWORD PTR $T4[rdx]
	jmp	??1facet@locale@std@@MEAA@XZ		; std::locale::facet::~facet
?dtor$9@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 240
$T3 = 240
_Ploc$ = 248
$T4 = 256
_Guard$5 = 264
?dtor$11@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$11
	lea	rcx, QWORD PTR _Guard$5[rdx]
	jmp	??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::numpunct<char> >::~_Tidy_guard<std::numpunct<char> >
?dtor$11@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 128
_Lobj$ = 136
_Refs$ = 144
_Guard$2 = 144
_Isdef$ = 152
??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z PROC	; std::numpunct<char>::numpunct<char>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 129
$LN71:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	movzx	r15d, r9b
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 143
	mov	DWORD PTR [rcx+8], r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 129
	lea	rax, OFFSET FLAT:??_7?$numpunct@D@std@@6B@
	mov	QWORD PTR [rcx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 285
	call	localeconv
	mov	rsi, rax
; Line 281
	lea	rcx, QWORD PTR $T1[rsp]
	call	_Getcvt
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 156
	xor	eax, eax
	mov	QWORD PTR [rbx+16], rax
; Line 157
	mov	QWORD PTR [rbx+32], rax
; Line 158
	mov	QWORD PTR [rbx+40], rax
; Line 160
	mov	QWORD PTR _Guard$2[rsp], rbx
; Line 161
	test	r15b, r15b
	lea	rdi, OFFSET FLAT:??_C@_00CNPNBAHC@@
	jne	SHORT $LN17@numpunct
	mov	rdi, QWORD PTR [rsi+16]
$LN17@numpunct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 528
	mov	rcx, rdi
	call	strlen
	lea	rbp, QWORD PTR [rax+1]
; Line 530
	mov	edx, 1
	mov	rcx, rbp
	call	calloc
	mov	r14, rax
; Line 532
	test	rax, rax
	je	$LN67@numpunct
; Line 536
	test	rbp, rbp
	je	SHORT $LN26@numpunct
	mov	r8, rbp
	mov	rdx, rdi
	mov	rcx, rax
	call	memcpy
$LN26@numpunct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 161
	mov	QWORD PTR [rbx+16], r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 530
	mov	edx, 1
	mov	ecx, 6
	call	calloc
	mov	rcx, rax
; Line 532
	test	rax, rax
	je	$LN68@numpunct
; Line 536
	mov	eax, DWORD PTR ??_C@_05LAPONLG@false@
	mov	DWORD PTR [rcx], eax
	movzx	eax, WORD PTR ??_C@_05LAPONLG@false@+4
	mov	WORD PTR [rcx+4], ax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 162
	mov	QWORD PTR [rbx+32], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 530
	mov	edx, 1
	mov	ecx, 5
	call	calloc
	mov	rcx, rax
; Line 532
	test	rax, rax
	je	SHORT $LN69@numpunct
; Line 536
	mov	eax, DWORD PTR ??_C@_04LOAJBDKD@true@
	mov	DWORD PTR [rcx], eax
	movzx	eax, BYTE PTR ??_C@_04LOAJBDKD@true@+4
	mov	BYTE PTR [rcx+4], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 163
	mov	QWORD PTR [rbx+40], rcx
; Line 166
	test	r15b, r15b
	je	SHORT $LN13@numpunct
; Line 167
	mov	BYTE PTR [rbx+24], 46			; 0000002eH
; Line 168
	mov	al, 44					; 0000002cH
; Line 169
	jmp	SHORT $LN14@numpunct
$LN13@numpunct:
; Line 174
	mov	rax, QWORD PTR [rsi]
	movzx	ecx, BYTE PTR [rax]
	mov	BYTE PTR [rbx+24], cl
; Line 175
	mov	rax, QWORD PTR [rsi+8]
	movzx	eax, BYTE PTR [rax]
$LN14@numpunct:
; Line 178
	mov	BYTE PTR [rbx+25], al
; Line 131
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+136]
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN69@numpunct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 533
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
	npad	1
$LN67@numpunct:
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
	int	3
$LN68@numpunct:
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
	int	3
$LN65@numpunct:
??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z ENDP	; std::numpunct<char>::numpunct<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 128
_Lobj$ = 136
_Refs$ = 144
_Guard$2 = 144
_Isdef$ = 152
?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA PROC ; `std::numpunct<char>::numpunct<char>'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1facet@locale@std@@MEAA@XZ		; std::locale::facet::~facet
?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA ENDP ; `std::numpunct<char>::numpunct<char>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 128
_Lobj$ = 136
_Refs$ = 144
_Guard$2 = 144
_Isdef$ = 152
?dtor$2@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA PROC ; `std::numpunct<char>::numpunct<char>'::`1'::dtor$2
	lea	rcx, QWORD PTR _Guard$2[rdx]
	jmp	??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::numpunct<char> >::~_Tidy_guard<std::numpunct<char> >
?dtor$2@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA ENDP ; `std::numpunct<char>::numpunct<char>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::truename, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 115
$LN7:
	push	rbx
	sub	rsp, 48					; 00000030H
; Line 116
	mov	rax, QWORD PTR [rcx]
	mov	rbx, rdx
	call	QWORD PTR [rax+56]
	mov	rax, rbx
; Line 117
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::truename
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::falsename, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 111
$LN7:
	push	rbx
	sub	rsp, 48					; 00000030H
; Line 112
	mov	rax, QWORD PTR [rcx]
	mov	rbx, rdx
	call	QWORD PTR [rax+48]
	mov	rax, rbx
; Line 113
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::falsename
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::grouping, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 107
$LN7:
	push	rbx
	sub	rsp, 48					; 00000030H
; Line 108
	mov	rax, QWORD PTR [rcx]
	mov	rbx, rdx
	call	QWORD PTR [rax+40]
	mov	rax, rbx
; Line 109
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::grouping
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?thousands_sep@?$numpunct@D@std@@QEBADXZ
_TEXT	SEGMENT
this$ = 8
?thousands_sep@?$numpunct@D@std@@QEBADXZ PROC		; std::numpunct<char>::thousands_sep, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 104
	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+32]
?thousands_sep@?$numpunct@D@std@@QEBADXZ ENDP		; std::numpunct<char>::thousands_sep
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?decimal_point@?$numpunct@D@std@@QEBADXZ
_TEXT	SEGMENT
this$ = 8
?decimal_point@?$numpunct@D@std@@QEBADXZ PROC		; std::numpunct<char>::decimal_point, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 100
	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+24]
?decimal_point@?$numpunct@D@std@@QEBADXZ ENDP		; std::numpunct<char>::decimal_point
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
_Loc$ = 80
_Psave_guard$1 = 80
_Lock$2 = 80
_Lock$3 = 88
_Psave$4 = 96
??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::numpunct<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 435
$LN49:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 32					; 00000020H
	mov	rbp, rcx
; Line 436
	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$3[rsp]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
	npad	1
; Line 437
	mov	rsi, QWORD PTR ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::numpunct<char> >::_Psave
	mov	QWORD PTR _Psave$4[rsp], rsi
; Line 91
	mov	rdi, QWORD PTR ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	test	rdi, rdi
	jne	SHORT $LN11@use_facet
; Line 92
	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$2[rsp]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
; Line 93
	cmp	QWORD PTR ?id@?$numpunct@D@std@@2V0locale@2@A, rdi ; std::numpunct<char>::id
	jne	SHORT $LN12@use_facet
; Line 94
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	cdqe
	mov	QWORD PTR ?id@?$numpunct@D@std@@2V0locale@2@A, rax ; std::numpunct<char>::id
$LN12@use_facet:
; Line 96
	lea	rcx, QWORD PTR _Lock$2[rsp]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
	mov	rdi, QWORD PTR ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
$LN11@use_facet:
; Line 377
	mov	rcx, QWORD PTR [rbp+8]
	lea	r14, QWORD PTR [rdi*8]
	cmp	rdi, QWORD PTR [rcx+24]
	jae	SHORT $LN19@use_facet
	mov	rax, QWORD PTR [rcx+16]
	mov	rbx, QWORD PTR [r14+rax]
; Line 378
	test	rbx, rbx
	jne	SHORT $LN39@use_facet
	jmp	SHORT $LN42@use_facet
$LN19@use_facet:
; Line 377
	xor	ebx, ebx
$LN42@use_facet:
; Line 378
	cmp	BYTE PTR [rcx+36], 0
	je	SHORT $LN14@use_facet
; Line 383
	call	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale
; Line 384
	cmp	rdi, QWORD PTR [rax+24]
	jae	SHORT $LN43@use_facet
; Line 385
	mov	rax, QWORD PTR [rax+16]
	mov	rbx, QWORD PTR [r14+rax]
$LN14@use_facet:
; Line 442
	test	rbx, rbx
	jne	SHORT $LN39@use_facet
$LN43@use_facet:
; Line 443
	test	rsi, rsi
	je	SHORT $LN3@use_facet
; Line 444
	mov	rbx, rsi
	jmp	SHORT $LN39@use_facet
$LN3@use_facet:
; Line 445
	mov	rdx, rbp
	lea	rcx, QWORD PTR _Psave$4[rsp]
	call	?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::numpunct<char>::_Getcat
	cmp	rax, -1
	je	SHORT $LN47@use_facet
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1531
	mov	rbx, QWORD PTR _Psave$4[rsp]
	mov	QWORD PTR _Psave_guard$1[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 458
	mov	rcx, rbx
	call	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register
; Line 461
	mov	rcx, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rcx+8]
	mov	rcx, rbx
	call	rdx
; Line 462
	mov	QWORD PTR ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB, rbx ; std::_Facetptr<std::numpunct<char> >::_Psave
$LN39@use_facet:
; Line 469
	lea	rcx, QWORD PTR _Lock$3[rsp]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
	mov	rax, rbx
; Line 471
	add	rsp, 32					; 00000020H
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN47@use_facet:
; Line 447
	call	?_Throw_bad_cast@std@@YAXXZ		; std::_Throw_bad_cast
	npad	1
$LN44@use_facet:
??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::numpunct<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Loc$ = 80
_Psave_guard$1 = 80
_Lock$2 = 80
_Lock$3 = 88
_Psave$4 = 96
?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::numpunct<char> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Lock$3[rdx]
	jmp	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::numpunct<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Loc$ = 80
_Psave_guard$1 = 80
_Lock$2 = 80
_Lock$3 = 88
_Psave$4 = 96
?dtor$1@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::numpunct<char> >'::`1'::dtor$1
	lea	rcx, QWORD PTR _Psave_guard$1[rdx]
	jmp	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
?dtor$1@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::numpunct<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$isfinite@N@@YA_NN@Z
_TEXT	SEGMENT
_X$ = 8
??$isfinite@N@@YA_NN@Z PROC				; isfinite<double>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\corecrt_math.h
; Line 326
	movq	rax, xmm0
	shr	rax, 52					; 00000034H
	and	eax, 2047				; 000007ffH
	cmp	eax, 2047				; 000007ffH
	setne	al
; Line 438
	ret	0
??$isfinite@N@@YA_NN@Z ENDP				; isfinite<double>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Float_put_desired_precision@N@std@@YAH_JH@Z
_TEXT	SEGMENT
_Precision$ = 8
_Float_flags$ = 16
??$_Float_put_desired_precision@N@std@@YAH_JH@Z PROC	; std::_Float_put_desired_precision<double>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1180
	cmp	edx, 12288				; 00003000H
; Line 1181
	jne	SHORT $LN2@Float_put_
; Line 1184
	mov	eax, 13
; Line 1205
	ret	0
$LN2@Float_put_:
; Line 1192
	test	rcx, rcx
	jle	SHORT $LN10@Float_put_
; Line 1193
	mov	eax, ecx
; Line 1205
	ret	0
$LN10@Float_put_:
; Line 1194
	jne	SHORT $LN5@Float_put_
; Line 1195
	xor	eax, eax
	test	edx, edx
	sete	al
; Line 1205
	ret	0
$LN5@Float_put_:
; Line 1203
	mov	eax, 6
; Line 1205
	ret	0
??$_Float_put_desired_precision@N@std@@YAH_JH@Z ENDP	; std::_Float_put_desired_precision<double>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
$T6 = 48
$T7 = 48
_Eoff$1$ = 48
_Dp$ = 64
_Dest$GSCopy$1$ = 72
_Iosbase$GSCopy$1$ = 80
__$ReturnUdt$GSCopy$1$ = 88
$T8 = 96
$T9 = 96
_Groupstring$ = 112
_Grouping$ = 144
__$ArrayPad$ = 176
this$ = 256
__$ReturnUdt$ = 264
_Dest$ = 272
_Iosbase$ = 280
_Fill$ = 288
_Buf$ = 296
_Count$ = 304
_Is_finite_val$ = 312
??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput_v3<0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1470
$LN480:
	mov	QWORD PTR [rsp+8], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-7]
	sub	rsp, 192				; 000000c0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-185], rax
	mov	r15, r9
	mov	QWORD PTR _Iosbase$GSCopy$1$[rbp-185], r9
	mov	QWORD PTR _Dest$GSCopy$1$[rbp-185], r8
	mov	QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-185], rdx
	movzx	r14d, BYTE PTR _Fill$[rbp-185]
	mov	rbx, QWORD PTR _Buf$[rbp-185]
	mov	rsi, QWORD PTR _Count$[rbp-185]
; Line 1471
	test	rsi, rsi
	je	SHORT $LN20@Fput_v3
	movzx	eax, BYTE PTR [rbx]
	cmp	al, 43					; 0000002bH
	je	SHORT $LN19@Fput_v3
	cmp	al, 45					; 0000002dH
	jne	SHORT $LN20@Fput_v3
$LN19@Fput_v3:
	mov	r13d, 1
	jmp	SHORT $LN21@Fput_v3
$LN20@Fput_v3:
	xor	r13d, r13d
$LN21@Fput_v3:
; Line 1473
	mov	eax, DWORD PTR [r9+24]
	and	eax, 12288				; 00003000H
	cmp	eax, 12288				; 00003000H
	je	SHORT $LN4@Fput_v3
; Line 1474
	lea	rdx, OFFSET FLAT:??_C@_02MDKMJEGG@eE@
; Line 1475
	jmp	SHORT $LN6@Fput_v3
$LN4@Fput_v3:
; Line 1476
	lea	rdx, OFFSET FLAT:??_C@_02OOPEBDOJ@pP@
; Line 1478
	lea	rcx, QWORD PTR [r13+2]
	cmp	rcx, rsi
	ja	SHORT $LN6@Fput_v3
	cmp	BYTE PTR [rbx+r13], 48			; 00000030H
	jne	SHORT $LN6@Fput_v3
	movzx	eax, BYTE PTR [rbx+r13+1]
	sub	al, 88					; 00000058H
	test	al, 223					; 000000dfH
	cmove	r13, rcx
$LN6@Fput_v3:
; Line 1482
	mov	rcx, rbx
	call	strcspn
	mov	QWORD PTR _Eoff$1$[rsp], rax
; Line 1483
	mov	eax, 46					; 0000002eH
	mov	WORD PTR _Dp$[rbp-185], ax
; Line 1484
	call	localeconv
	mov	rcx, QWORD PTR [rax]
	movzx	eax, BYTE PTR [rcx]
	mov	BYTE PTR _Dp$[rbp-185], al
; Line 1485
	lea	rdx, QWORD PTR _Dp$[rbp-185]
	mov	rcx, rbx
	call	strcspn
	mov	rdi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 268
	mov	rax, QWORD PTR [r15+64]
	mov	r15, QWORD PTR [rax+8]
	mov	QWORD PTR $T8[rbp-177], r15
; Line 269
	mov	rax, QWORD PTR [r15]
	mov	rcx, r15
	call	QWORD PTR [rax+8]
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1487
	lea	rcx, QWORD PTR $T8[rbp-185]
	call	??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	mov	r12, rax
	test	r15, r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 354
	je	SHORT $LN58@Fput_v3
; Line 355
	mov	rax, QWORD PTR [r15]
	mov	rcx, r15
	call	QWORD PTR [rax+16]
	mov	rcx, rax
	test	rax, rax
	je	SHORT $LN58@Fput_v3
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	call	QWORD PTR [rax]
$LN58@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1488
	xor	r8d, r8d
	mov	rdx, rsi
	lea	rcx, QWORD PTR _Groupstring$[rbp-185]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 435
	lea	r9, QWORD PTR _Groupstring$[rbp-185]
; Line 436
	cmp	QWORD PTR _Groupstring$[rbp-161], 15
	cmova	r9, QWORD PTR _Groupstring$[rbp-185]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1489
	lea	r8, QWORD PTR [rsi+rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2760
	mov	rax, QWORD PTR [r12]
	mov	rdx, rbx
	mov	rcx, r12
	call	QWORD PTR [rax+56]
; Line 268
	mov	rcx, QWORD PTR _Iosbase$GSCopy$1$[rbp-185]
	mov	rax, QWORD PTR [rcx+64]
	mov	r15, QWORD PTR [rax+8]
	mov	QWORD PTR $T9[rbp-177], r15
; Line 269
	mov	rax, QWORD PTR [r15]
	mov	rcx, r15
	call	QWORD PTR [rax+8]
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1491
	lea	rcx, QWORD PTR $T9[rbp-185]
	call	??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
	mov	rbx, rax
	test	r15, r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 354
	je	SHORT $LN84@Fput_v3
; Line 355
	mov	rax, QWORD PTR [r15]
	mov	rcx, r15
	call	QWORD PTR [rax+16]
	mov	rcx, rax
	test	rax, rax
	je	SHORT $LN84@Fput_v3
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	call	QWORD PTR [rax]
$LN84@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 108
	mov	rax, QWORD PTR [rbx]
	lea	rdx, QWORD PTR _Grouping$[rbp-185]
	mov	rcx, rbx
	call	QWORD PTR [rax+40]
	npad	1
; Line 104
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+32]
	movsx	r15d, al
; Line 1495
	cmp	rdi, rsi
	je	SHORT $LN8@Fput_v3
; Line 100
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
	movzx	ecx, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 435
	lea	rax, QWORD PTR _Groupstring$[rbp-185]
; Line 436
	cmp	QWORD PTR _Groupstring$[rbp-161], 15
	cmova	rax, QWORD PTR _Groupstring$[rbp-185]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1496
	mov	BYTE PTR [rax+rdi], cl
$LN8@Fput_v3:
; Line 1499
	cmp	BYTE PTR _Is_finite_val$[rbp-185], 0
	je	$LN473@Fput_v3
; Line 1500
	cmp	rdi, rsi
	cmove	rdi, QWORD PTR _Eoff$1$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 444
	lea	rsi, QWORD PTR _Grouping$[rbp-185]
; Line 445
	cmp	QWORD PTR _Grouping$[rbp-161], 15
	cmova	rsi, QWORD PTR _Grouping$[rbp-185]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1502
	movzx	eax, BYTE PTR [rsi]
	cmp	al, 127					; 0000007fH
	je	$LN473@Fput_v3
$LL2@Fput_v3:
	test	al, al
	jle	$LN473@Fput_v3
	movsx	rcx, al
	mov	rax, rdi
	sub	rax, r13
	cmp	rcx, rax
	jae	$LN473@Fput_v3
; Line 1504
	sub	rdi, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 469
	mov	r8, QWORD PTR _Groupstring$[rbp-169]
	cmp	r8, rdi
	jb	$LN438@Fput_v3
; Line 1788
	mov	rcx, QWORD PTR _Groupstring$[rbp-161]
	mov	rax, rcx
	sub	rax, r8
	cmp	rax, 1
	jb	SHORT $LN27@Fput_v3
; Line 1790
	lea	rax, QWORD PTR [r8+1]
	mov	QWORD PTR _Groupstring$[rbp-169], rax
; Line 435
	lea	rbx, QWORD PTR _Groupstring$[rbp-185]
; Line 436
	cmp	rcx, 15
	cmova	rbx, QWORD PTR _Groupstring$[rbp-185]
; Line 1792
	add	rbx, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 174
	sub	r8, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1793
	inc	r8
	lea	rcx, QWORD PTR [rbx+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 174
	mov	rdx, rbx
	call	memmove
; Line 493
	movzx	al, r15b
	mov	BYTE PTR [rbx], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1795
	jmp	SHORT $LN26@Fput_v3
$LN27@Fput_v3:
; Line 1798
	mov	BYTE PTR [rsp+40], r15b
	mov	QWORD PTR [rsp+32], 1
	mov	r9, rdi
	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR _Groupstring$[rbp-185]
	call	??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_b986da8d428e4af07c64af60eec09b61>,unsigned __int64,unsigned __int64,char>
$LN26@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1505
	lea	rax, QWORD PTR [rsi+1]
	cmp	BYTE PTR [rax], 0
	cmovg	rsi, rax
; Line 1502
	movzx	eax, BYTE PTR [rsi]
	cmp	al, 127					; 0000007fH
	jne	$LL2@Fput_v3
$LN473@Fput_v3:
; Line 1511
	mov	r12, QWORD PTR _Groupstring$[rbp-169]
; Line 1514
	mov	rax, QWORD PTR _Iosbase$GSCopy$1$[rbp-185]
	mov	rdi, QWORD PTR [rax+40]
	test	rdi, rdi
	jle	SHORT $LN13@Fput_v3
	cmp	rdi, r12
	jbe	SHORT $LN13@Fput_v3
; Line 1517
	sub	rdi, r12
	jmp	SHORT $LN12@Fput_v3
$LN13@Fput_v3:
; Line 1515
	xor	edi, edi
$LN12@Fput_v3:
; Line 1520
	mov	eax, DWORD PTR [rax+24]
	and	eax, 448				; 000001c0H
; Line 1521
	cmp	eax, 64					; 00000040H
	je	$LN16@Fput_v3
	cmp	eax, 256				; 00000100H
	mov	rax, QWORD PTR _Dest$GSCopy$1$[rbp-185]
	movups	xmm0, XMMWORD PTR [rax]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	je	$LN471@Fput_v3
; Line 1632
	test	rdi, rdi
	je	SHORT $LN362@Fput_v3
	mov	rbx, QWORD PTR $T1[rsp+8]
$LL363@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN367@Fput_v3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN371@Fput_v3
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN371@Fput_v3
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r14b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN372@Fput_v3
$LN371@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN372@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN361@Fput_v3
$LN367@Fput_v3:
; Line 527
	mov	BYTE PTR $T1[rsp], 1
$LN361@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1632
	sub	rdi, 1
	jne	SHORT $LL363@Fput_v3
	movaps	xmm0, XMMWORD PTR $T1[rsp]
$LN362@Fput_v3:
; Line 1523
	xor	edi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 435
	lea	rsi, QWORD PTR _Groupstring$[rbp-185]
; Line 436
	cmp	QWORD PTR _Groupstring$[rbp-161], 15
	cmova	rsi, QWORD PTR _Groupstring$[rbp-185]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1524
	movaps	XMMWORD PTR $T2[rsp], xmm0
	mov	r15, r13
; Line 1624
	test	r13, r13
	je	$LN402@Fput_v3
	mov	rbx, QWORD PTR $T2[rsp+8]
$LL403@Fput_v3:
; Line 1625
	movzx	r8d, BYTE PTR [rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN407@Fput_v3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], rdi
	je	SHORT $LN470@Fput_v3
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN470@Fput_v3
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r8b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN412@Fput_v3
$LN470@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN412@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN401@Fput_v3
$LN407@Fput_v3:
; Line 527
	mov	BYTE PTR $T2[rsp], 1
$LN401@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1624
	inc	rsi
	sub	r15, 1
	jne	SHORT $LL403@Fput_v3
; Line 1524
	jmp	$LN475@Fput_v3
$LN471@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 435
	lea	rsi, QWORD PTR _Groupstring$[rbp-185]
; Line 436
	cmp	QWORD PTR _Groupstring$[rbp-161], 15
	cmova	rsi, QWORD PTR _Groupstring$[rbp-185]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1526
	mov	r15, r13
; Line 1624
	test	r13, r13
	je	SHORT $LN252@Fput_v3
	mov	rbx, QWORD PTR $T3[rsp+8]
$LL253@Fput_v3:
; Line 1625
	movzx	r8d, BYTE PTR [rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN257@Fput_v3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN261@Fput_v3
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN261@Fput_v3
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r8b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN262@Fput_v3
$LN261@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN262@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN251@Fput_v3
$LN257@Fput_v3:
; Line 527
	mov	BYTE PTR $T3[rsp], 1
$LN251@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1624
	inc	rsi
	sub	r15, 1
	jne	SHORT $LL253@Fput_v3
	movaps	xmm0, XMMWORD PTR $T3[rsp]
$LN252@Fput_v3:
; Line 1527
	movaps	XMMWORD PTR $T4[rsp], xmm0
; Line 1632
	test	rdi, rdi
	je	SHORT $LN282@Fput_v3
	mov	rbx, QWORD PTR $T4[rsp+8]
	npad	1
$LL283@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN287@Fput_v3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN291@Fput_v3
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN291@Fput_v3
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r14b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN292@Fput_v3
$LN291@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN292@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN281@Fput_v3
$LN287@Fput_v3:
; Line 527
	mov	BYTE PTR $T4[rsp], 1
$LN281@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1632
	sub	rdi, 1
	jne	SHORT $LL283@Fput_v3
	movaps	xmm0, XMMWORD PTR $T4[rsp]
$LN282@Fput_v3:
; Line 1528
	xor	edi, edi
; Line 1529
	jmp	$LN402@Fput_v3
$LN16@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 435
	lea	rsi, QWORD PTR _Groupstring$[rbp-185]
; Line 436
	cmp	QWORD PTR _Groupstring$[rbp-161], 15
	cmova	rsi, QWORD PTR _Groupstring$[rbp-185]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1530
	mov	rax, QWORD PTR _Dest$GSCopy$1$[rbp-185]
	movups	xmm0, XMMWORD PTR [rax]
	movaps	XMMWORD PTR $T5[rsp], xmm0
	mov	r15, r13
; Line 1624
	test	r13, r13
	je	SHORT $LN322@Fput_v3
	mov	rbx, QWORD PTR $T5[rsp+8]
$LL323@Fput_v3:
; Line 1625
	movzx	r8d, BYTE PTR [rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN327@Fput_v3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN331@Fput_v3
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN331@Fput_v3
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r8b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN332@Fput_v3
$LN331@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN332@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN321@Fput_v3
$LN327@Fput_v3:
; Line 527
	mov	BYTE PTR $T5[rsp], 1
$LN321@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1624
	inc	rsi
	sub	r15, 1
	jne	SHORT $LL323@Fput_v3
$LN475@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 435
	movaps	xmm0, XMMWORD PTR $T5[rsp]
$LN402@Fput_v3:
	mov	rax, QWORD PTR _Dest$GSCopy$1$[rbp-185]
$LN322@Fput_v3:
	movups	XMMWORD PTR [rax], xmm0
	lea	rsi, QWORD PTR _Groupstring$[rbp-185]
; Line 436
	cmp	QWORD PTR _Groupstring$[rbp-161], 15
	cmova	rsi, QWORD PTR _Groupstring$[rbp-185]
; Line 2272
	add	rsi, r13
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1533
	mov	rax, QWORD PTR _Dest$GSCopy$1$[rbp-185]
	movups	xmm0, XMMWORD PTR [rax]
	movaps	XMMWORD PTR $T6[rsp], xmm0
	sub	r12, r13
; Line 1624
	je	SHORT $LN197@Fput_v3
	mov	rbx, QWORD PTR $T6[rsp+8]
	npad	5
$LL198@Fput_v3:
; Line 1625
	movzx	r8d, BYTE PTR [rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN202@Fput_v3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN206@Fput_v3
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN206@Fput_v3
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r8b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN207@Fput_v3
$LN206@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN207@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN196@Fput_v3
$LN202@Fput_v3:
; Line 527
	mov	BYTE PTR $T6[rsp], 1
$LN196@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1624
	inc	rsi
	sub	r12, 1
	jne	SHORT $LL198@Fput_v3
	movaps	xmm0, XMMWORD PTR $T6[rsp]
$LN197@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 284
	mov	rcx, QWORD PTR _Iosbase$GSCopy$1$[rbp-185]
	mov	QWORD PTR [rcx+40], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1535
	movaps	XMMWORD PTR $T7[rsp], xmm0
; Line 1632
	test	rdi, rdi
	je	SHORT $LN95@Fput_v3
	mov	rbx, QWORD PTR $T7[rsp+8]
$LL96@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN100@Fput_v3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN104@Fput_v3
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN104@Fput_v3
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r14b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN105@Fput_v3
$LN104@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN105@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN94@Fput_v3
$LN100@Fput_v3:
; Line 527
	mov	BYTE PTR $T7[rsp], 1
$LN94@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1632
	sub	rdi, 1
	jne	SHORT $LL96@Fput_v3
	movaps	xmm0, XMMWORD PTR $T7[rsp]
$LN95@Fput_v3:
; Line 1636
	mov	rbx, QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-185]
	movups	XMMWORD PTR [rbx], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3083
	mov	rdx, QWORD PTR _Grouping$[rbp-161]
	cmp	rdx, 15
	jbe	SHORT $LN143@Fput_v3
; Line 852
	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	mov	rcx, QWORD PTR _Grouping$[rbp-185]
	mov	rax, rcx
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN148@Fput_v3
; Line 202
	add	rdx, 39					; 00000027H
; Line 205
	mov	rcx, QWORD PTR [rcx-8]
; Line 219
	sub	rax, rcx
	sub	rax, 8
	cmp	rax, 31
	ja	$LN477@Fput_v3
$LN148@Fput_v3:
; Line 289
	call	??3@YAXPEAX_K@Z				; operator delete
$LN143@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3090
	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR _Grouping$[rbp-169], xmm0
; Line 3093
	mov	BYTE PTR _Grouping$[rbp-185], 0
; Line 3083
	mov	rdx, QWORD PTR _Groupstring$[rbp-161]
	cmp	rdx, 15
	jbe	SHORT $LN174@Fput_v3
; Line 852
	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	mov	rcx, QWORD PTR _Groupstring$[rbp-185]
	mov	rax, rcx
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN179@Fput_v3
; Line 202
	add	rdx, 39					; 00000027H
; Line 205
	mov	rcx, QWORD PTR [rcx-8]
; Line 219
	sub	rax, rcx
	sub	rax, 8
	cmp	rax, 31
	ja	SHORT $LN478@Fput_v3
$LN179@Fput_v3:
; Line 289
	call	??3@YAXPEAX_K@Z				; operator delete
$LN174@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1535
	mov	rax, rbx
; Line 1536
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-185]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+256]
	add	rsp, 192				; 000000c0H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN478@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	npad	1
$LN438@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 470
	call	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
	npad	1
$LN477@Fput_v3:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN474@Fput_v3:
??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput_v3<0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
$T6 = 48
$T7 = 48
_Eoff$1$ = 48
_Dp$ = 64
_Dest$GSCopy$1$ = 72
_Iosbase$GSCopy$1$ = 80
__$ReturnUdt$GSCopy$1$ = 88
$T8 = 96
$T9 = 96
_Groupstring$ = 112
_Grouping$ = 144
__$ArrayPad$ = 176
this$ = 256
__$ReturnUdt$ = 264
_Dest$ = 272
_Iosbase$ = 280
_Fill$ = 288
_Buf$ = 296
_Count$ = 304
_Is_finite_val$ = 312
?dtor$0@?0???$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput_v3<0>'::`1'::dtor$0
	lea	rcx, QWORD PTR $T8[rdx]
	jmp	??1locale@std@@QEAA@XZ			; std::locale::~locale
?dtor$0@?0???$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput_v3<0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
$T6 = 48
$T7 = 48
_Eoff$1$ = 48
_Dp$ = 64
_Dest$GSCopy$1$ = 72
_Iosbase$GSCopy$1$ = 80
__$ReturnUdt$GSCopy$1$ = 88
$T8 = 96
$T9 = 96
_Groupstring$ = 112
_Grouping$ = 144
__$ArrayPad$ = 176
this$ = 256
__$ReturnUdt$ = 264
_Dest$ = 272
_Iosbase$ = 280
_Fill$ = 288
_Buf$ = 296
_Count$ = 304
_Is_finite_val$ = 312
?dtor$1@?0???$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput_v3<0>'::`1'::dtor$1
	lea	rcx, QWORD PTR _Groupstring$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput_v3<0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
$T6 = 48
$T7 = 48
_Eoff$1$ = 48
_Dp$ = 64
_Dest$GSCopy$1$ = 72
_Iosbase$GSCopy$1$ = 80
__$ReturnUdt$GSCopy$1$ = 88
$T8 = 96
$T9 = 96
_Groupstring$ = 112
_Grouping$ = 144
__$ArrayPad$ = 176
this$ = 256
__$ReturnUdt$ = 264
_Dest$ = 272
_Iosbase$ = 280
_Fill$ = 288
_Buf$ = 296
_Count$ = 304
_Is_finite_val$ = 312
?dtor$2@?0???$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput_v3<0>'::`1'::dtor$2
	lea	rcx, QWORD PTR $T9[rdx]
	jmp	??1locale@std@@QEAA@XZ			; std::locale::~locale
?dtor$2@?0???$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput_v3<0>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
$T6 = 48
$T7 = 48
_Eoff$1$ = 48
_Dp$ = 64
_Dest$GSCopy$1$ = 72
_Iosbase$GSCopy$1$ = 80
__$ReturnUdt$GSCopy$1$ = 88
$T8 = 96
$T9 = 96
_Groupstring$ = 112
_Grouping$ = 144
__$ArrayPad$ = 176
this$ = 256
__$ReturnUdt$ = 264
_Dest$ = 272
_Iosbase$ = 280
_Fill$ = 288
_Buf$ = 296
_Count$ = 304
_Is_finite_val$ = 312
?dtor$3@?0???$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput_v3<0>'::`1'::dtor$3
	lea	rcx, QWORD PTR _Grouping$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0???$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput_v3<0>'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$isfinite@O@@YA_NO@Z
_TEXT	SEGMENT
_X$ = 8
??$isfinite@O@@YA_NO@Z PROC				; isfinite<long double>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\corecrt_math.h
; Line 335
	movq	rax, xmm0
	shr	rax, 52					; 00000034H
	and	eax, 2047				; 000007ffH
	cmp	eax, 2047				; 000007ffH
	setne	al
; Line 438
	ret	0
??$isfinite@O@@YA_NO@Z ENDP				; isfinite<long double>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Float_put_desired_precision@O@std@@YAH_JH@Z
_TEXT	SEGMENT
_Precision$ = 8
_Float_flags$ = 16
??$_Float_put_desired_precision@O@std@@YAH_JH@Z PROC	; std::_Float_put_desired_precision<long double>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1180
	cmp	edx, 12288				; 00003000H
; Line 1181
	jne	SHORT $LN2@Float_put_
; Line 1186
	mov	eax, 13
; Line 1205
	ret	0
$LN2@Float_put_:
; Line 1192
	test	rcx, rcx
	jle	SHORT $LN10@Float_put_
; Line 1193
	mov	eax, ecx
; Line 1205
	ret	0
$LN10@Float_put_:
; Line 1194
	jne	SHORT $LN5@Float_put_
; Line 1195
	xor	eax, eax
	test	edx, edx
	sete	al
; Line 1205
	ret	0
$LN5@Float_put_:
; Line 1203
	mov	eax, 6
; Line 1205
	ret	0
??$_Float_put_desired_precision@O@std@@YAH_JH@Z ENDP	; std::_Float_put_desired_precision<long double>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$addressof@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::basic_ostream<char,std::char_traits<char> > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1525
	mov	rax, rcx
; Line 1526
	ret	0
??$addressof@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_ostream<char,std::char_traits<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$exchange@PEAV_Facet_base@std@@$$T@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEA$$T@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEAV_Facet_base@std@@$$T@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEA$$T@Z PROC ; std::exchange<std::_Facet_base *,std::nullptr_t>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; Line 774
	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx
; Line 776
	ret	0
??$exchange@PEAV_Facet_base@std@@$$T@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEA$$T@Z ENDP ; std::exchange<std::_Facet_base *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 69
	mov	rax, rcx
; Line 70
	ret	0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
_Obj$ = 8
<_Args_0>$ = 16
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 476
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
; Line 478
	ret	0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate_for_capacity@$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAPEADAEAV?$allocator@D@1@AEA_K@Z
_TEXT	SEGMENT
_Al$ = 48
_Capacity$ = 56
??$_Allocate_for_capacity@$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAPEADAEAV?$allocator@D@1@AEA_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Allocate_for_capacity<0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 823
$LN8:
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 825
	inc	QWORD PTR [rdx]
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	mov	rcx, QWORD PTR [rdx]
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 845
	dec	QWORD PTR [rbx]
; Line 847
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Allocate_for_capacity@$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAPEADAEAV?$allocator@D@1@AEA_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Allocate_for_capacity<0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1502
	mov	rax, rcx
; Line 1503
	ret	0
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@PEAU1@_KAEAV?$allocator@US_UNDO@@@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Count$ = 16
_Al$ = 24
??$_Uninitialized_value_construct_n@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@PEAU1@_KAEAV?$allocator@US_UNDO@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<S_UNDO> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 2093
	test	rdx, rdx
	je	SHORT $LN23@Uninitiali
	xor	eax, eax
	npad	9
$LL4@Uninitiali:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	mov	QWORD PTR [rcx], rax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 47
	mov	BYTE PTR [rcx+8], al
	mov	DWORD PTR [rcx+12], -1
	mov	WORD PTR [rcx+16], ax
	mov	QWORD PTR [rcx+24], rax
	mov	BYTE PTR [rcx+32], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1845
	add	rcx, 728				; 000002d8H
; Line 2093
	sub	rdx, 1
	jne	SHORT $LL4@Uninitiali
$LN23@Uninitiali:
; Line 2098
	mov	rax, rcx
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@PEAU1@_KAEAV?$allocator@US_UNDO@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<S_UNDO> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Val$ = 64
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1552
$LN91:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 1553
	mov	r10, 25338934167183450			; 005a05a05a05a05aH
	mov	rdi, rdx
	mov	rsi, rcx
	cmp	rdx, r10
	ja	$LN88@Resize_rea
; Line 1562
	mov	rcx, QWORD PTR [rcx+8]
	mov	r9, 3243383573399481603			; 2d02d02d02d02d03H
	sub	rcx, QWORD PTR [rsi]
	mov	rax, r9
	imul	rcx
	mov	QWORD PTR [rsp+48], rbx
; Line 1924
	mov	rax, r9
	mov	QWORD PTR [rsp+64], r14
; Line 1562
	mov	r14, rdx
	sar	r14, 7
	mov	rcx, r14
	shr	rcx, 63					; 0000003fH
	add	r14, rcx
; Line 1924
	mov	rcx, QWORD PTR [rsi+16]
	sub	rcx, QWORD PTR [rsi]
	imul	rcx
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
; Line 2011
	mov	rax, r10
	mov	rcx, rdx
	shr	rcx, 1
	sub	rax, rcx
	cmp	rdx, rax
	jbe	$LN6@Resize_rea
; Line 2012
	mov	rbx, r10
$LN17@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 122
	imul	rcx, rbx, 728				; 000002d8H
	mov	QWORD PTR [rsp+56], rbp
; Line 990
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1566
	imul	rcx, r14, 728				; 000002d8H
; Line 1575
	mov	rdx, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	mov	rbp, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1566
	add	rcx, rax
; Line 1575
	sub	rdx, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 2093
	je	SHORT $LN24@Resize_rea
	xor	eax, eax
$LL25@Resize_rea:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	mov	QWORD PTR [rcx], rax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 47
	mov	BYTE PTR [rcx+8], al
	mov	DWORD PTR [rcx+12], -1
	mov	WORD PTR [rcx+16], ax
	mov	QWORD PTR [rcx+24], rax
	mov	BYTE PTR [rcx+32], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1845
	lea	rcx, QWORD PTR [rcx+728]
; Line 2093
	sub	rdx, 1
	jne	SHORT $LL25@Resize_rea
$LN24@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 4767
	mov	rdx, QWORD PTR [rsi]
; Line 4751
	mov	rcx, rbp
; Line 4769
	mov	r8, QWORD PTR [rsi+8]
	sub	r8, rdx
; Line 4751
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1585
	mov	r9, rbx
	mov	r8, rdi
	mov	rdx, rbp
	mov	rcx, rsi
	mov	rbp, QWORD PTR [rsp+56]
	mov	rbx, QWORD PTR [rsp+48]
	mov	r14, QWORD PTR [rsp+64]
; Line 1586
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
; Line 1585
	jmp	?_Change_array@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXQEAUS_UNDO@@_K1@Z ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Change_array
$LN6@Resize_rea:
; Line 2015
	lea	rbx, QWORD PTR [rcx+rdx]
; Line 2017
	cmp	rbx, rdi
	jae	SHORT $LN7@Resize_rea
; Line 2018
	mov	rbx, rdi
	jmp	$LN17@Resize_rea
$LN7@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 117
	cmp	rbx, r10
	ja	SHORT $LN90@Resize_rea
	jmp	$LN17@Resize_rea
$LN88@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1554
	call	?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Xlength
	int	3
$LN90@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 118
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN86@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy_range@V?$allocator@US_UNDO@@@std@@@std@@YAXPEAUS_UNDO@@QEAU1@AEAV?$allocator@US_UNDO@@@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Al$ = 24
??$_Destroy_range@V?$allocator@US_UNDO@@@std@@@std@@YAXPEAUS_UNDO@@QEAU1@AEAV?$allocator@US_UNDO@@@0@@Z PROC ; std::_Destroy_range<std::allocator<S_UNDO> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1106
	ret	0
??$_Destroy_range@V?$allocator@US_UNDO@@@std@@@std@@YAXPEAUS_UNDO@@QEAU1@AEAV?$allocator@US_UNDO@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<S_UNDO> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninitialized_move@PEAUS_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@QEAU1@0PEAU1@AEAV?$allocator@US_UNDO@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$ = 72
??$_Uninitialized_move@PEAUS_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@QEAU1@0PEAU1@AEAV?$allocator@US_UNDO@@@0@@Z PROC ; std::_Uninitialized_move<S_UNDO *,std::allocator<S_UNDO> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1977
$LN20:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 4769
	sub	rbx, rcx
; Line 4751
	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1993
	mov	rax, 3243383573399481603		; 2d02d02d02d02d03H
	imul	rbx
; Line 2003
	mov	rbx, QWORD PTR [rsp+48]
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	imul	rax, rdx, 728				; 000002d8H
	add	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAUS_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@QEAU1@0PEAU1@AEAV?$allocator@US_UNDO@@@0@@Z ENDP ; std::_Uninitialized_move<S_UNDO *,std::allocator<S_UNDO> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate_at_least_helper@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@0@AEA_K@Z
_TEXT	SEGMENT
_Al$ = 48
_Count$ = 56
??$_Allocate_at_least_helper@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@0@AEA_K@Z PROC ; std::_Allocate_at_least_helper<std::allocator<S_UNDO> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 2294
$LN13:
	sub	rsp, 40					; 00000028H
; Line 2303
	mov	rax, QWORD PTR [rdx]
; Line 117
	mov	rcx, 25338934167183450			; 005a05a05a05a05aH
	cmp	rax, rcx
	ja	SHORT $LN12@Allocate_a
; Line 122
	imul	rcx, rax, 728				; 000002d8H
; Line 2305
	add	rsp, 40					; 00000028H
; Line 990
	jmp	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
$LN12@Allocate_a:
; Line 118
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN10@Allocate_a:
??$_Allocate_at_least_helper@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@0@AEA_K@Z ENDP ; std::_Allocate_at_least_helper<std::allocator<S_UNDO> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
<_Val2_0>$ = 24
??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1531
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::failed, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 546
	movzx	eax, BYTE PTR [rcx]
; Line 547
	ret	0
?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::failed
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator++, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 538
	mov	rax, rcx
; Line 539
	ret	0
??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator*, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 534
	mov	rax, rcx
; Line 535
	ret	0
??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator=, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 525
$LN34:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	movzx	r9d, dl
; Line 526
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN3@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rcx+64]
	mov	r8d, r9d
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN7@operator
	mov	rax, QWORD PTR [rcx+88]
; Line 166
	cmp	DWORD PTR [rax], 0
	jle	SHORT $LN7@operator
; Line 256
	dec	DWORD PTR [rax]
; Line 257
	mov	rcx, QWORD PTR [rcx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r9b
	jmp	SHORT $LN8@operator
$LN7@operator:
	mov	rax, QWORD PTR [rcx]
	mov	edx, r8d
	call	QWORD PTR [rax+24]
	mov	r8d, eax
$LN8@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	r8d, -1
	jne	SHORT $LN31@operator
$LN3@operator:
; Line 527
	mov	BYTE PTR [rbx], 1
$LN31@operator:
; Line 531
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Sb$ = 16
??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::ostreambuf_iterator<char,std::char_traits<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 550
	mov	BYTE PTR [rcx], 0
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], rdx
	ret	0
??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::ostreambuf_iterator<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`scalar deleting destructor', COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	test	dl, 1
	je	SHORT $LN5@scalar
	mov	edx, 16
	call	??3@YAXPEAX_K@Z				; operator delete
$LN5@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Dest$ = 64
_Ch$ = 72
_Count$ = 80
?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1631
$LN42:
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H
; Line 1632
	mov	rdi, QWORD PTR _Count$[rsp]
	mov	rsi, r8
	movzx	ebp, r9b
	mov	r14, rdx
	test	rdi, rdi
	je	SHORT $LN3@Rep
	mov	QWORD PTR [rsp+48], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	mov	rbx, QWORD PTR [r8+8]
$LL4@Rep:
	test	rbx, rbx
	je	SHORT $LN8@Rep
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN12@Rep
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN12@Rep
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, ebp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	BYTE PTR [rdx], bpl
	jmp	SHORT $LN13@Rep
$LN12@Rep:
	mov	rax, QWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, ebp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN13@Rep:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN2@Rep
$LN8@Rep:
; Line 527
	mov	BYTE PTR [rsi], 1
$LN2@Rep:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1632
	sub	rdi, 1
	jne	SHORT $LL4@Rep
	mov	rbx, QWORD PTR [rsp+48]
$LN3@Rep:
; Line 1636
	movups	xmm0, XMMWORD PTR [rsi]
; Line 1637
	mov	rbp, QWORD PTR [rsp+56]
	mov	rax, r14
	mov	rsi, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	movups	XMMWORD PTR [r14], xmm0
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Dest$ = 64
_Ptr$ = 72
_Count$ = 80
?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1623
$LN42:
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H
; Line 1624
	mov	rdi, QWORD PTR _Count$[rsp]
	mov	rsi, r9
	mov	r14, r8
	mov	rbp, rdx
	test	rdi, rdi
	je	SHORT $LN3@Put
	mov	QWORD PTR [rsp+48], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	mov	rbx, QWORD PTR [r8+8]
$LL4@Put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1625
	movzx	r9d, BYTE PTR [rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN8@Put
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN12@Put
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN12@Put
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r9d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	BYTE PTR [rdx], r9b
	jmp	SHORT $LN13@Put
$LN12@Put:
	mov	rax, QWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r9d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN13@Put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN2@Put
$LN8@Put:
; Line 527
	mov	BYTE PTR [r14], 1
$LN2@Put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1624
	inc	rsi
	sub	rdi, 1
	jne	SHORT $LL4@Put
	mov	rbx, QWORD PTR [rsp+48]
$LN3@Put:
; Line 1628
	movups	xmm0, XMMWORD PTR [r14]
; Line 1629
	mov	rsi, QWORD PTR [rsp+64]
	mov	rax, rbp
	mov	rdi, QWORD PTR [rsp+72]
	movups	XMMWORD PTR [rbp], xmm0
	mov	rbp, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
$T6 = 48
$T7 = 48
$T8 = 48
$T9 = 48
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1569
$LN464:
	mov	QWORD PTR [rsp+8], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-15]
	sub	rsp, 176				; 000000b0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-161], rax
	mov	r12, r9
	mov	QWORD PTR _Iosbase$GSCopy$1$[rbp-161], r9
	mov	QWORD PTR _Dest$GSCopy$1$[rbp-161], r8
	mov	QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-161], rdx
	movzx	r14d, BYTE PTR _Fill$[rbp-161]
	mov	rsi, QWORD PTR _Buf$[rbp-161]
	mov	rdi, QWORD PTR _Count$[rbp-161]
; Line 1570
	test	rdi, rdi
	je	SHORT $LN17@Iput
	movzx	eax, BYTE PTR [rsi]
	cmp	al, 43					; 0000002bH
	je	SHORT $LN16@Iput
	cmp	al, 45					; 0000002dH
	jne	SHORT $LN17@Iput
$LN16@Iput:
	mov	r13d, 1
	jmp	SHORT $LN18@Iput
$LN17@Iput:
	xor	r13d, r13d
$LN18@Iput:
; Line 1572
	mov	eax, DWORD PTR [r9+24]
	and	eax, 3584				; 00000e00H
	cmp	eax, 2048				; 00000800H
	jne	SHORT $LN4@Iput
	lea	rcx, QWORD PTR [r13+2]
	cmp	rcx, rdi
	ja	SHORT $LN4@Iput
	cmp	BYTE PTR [rsi+r13], 48			; 00000030H
	jne	SHORT $LN4@Iput
	movzx	eax, BYTE PTR [rsi+r13+1]
	sub	al, 88					; 00000058H
	test	al, 223					; 000000dfH
	cmove	r13, rcx
$LN4@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 268
	mov	rax, QWORD PTR [r9+64]
	mov	rbx, QWORD PTR [rax+8]
	mov	QWORD PTR $T1[rbp-153], rbx
; Line 269
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+8]
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1576
	lea	rcx, QWORD PTR $T1[rbp-161]
	call	??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	mov	r15, rax
	test	rbx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 354
	je	SHORT $LN55@Iput
; Line 355
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+16]
	mov	rcx, rax
	test	rax, rax
	je	SHORT $LN55@Iput
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	call	QWORD PTR [rax]
$LN55@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1577
	xor	r8d, r8d
	mov	rdx, rdi
	lea	rcx, QWORD PTR _Groupstring$[rbp-161]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 435
	lea	r9, QWORD PTR _Groupstring$[rbp-161]
; Line 436
	cmp	QWORD PTR _Groupstring$[rbp-137], 15
	cmova	r9, QWORD PTR _Groupstring$[rbp-161]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1578
	lea	r8, QWORD PTR [rdi+rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2760
	mov	rax, QWORD PTR [r15]
	mov	rdx, rsi
	mov	rcx, r15
	call	QWORD PTR [rax+56]
; Line 268
	mov	rax, QWORD PTR [r12+64]
	mov	rsi, QWORD PTR [rax+8]
	mov	QWORD PTR $T2[rbp-153], rsi
; Line 269
	mov	rax, QWORD PTR [rsi]
	mov	rcx, rsi
	call	QWORD PTR [rax+8]
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1580
	lea	rcx, QWORD PTR $T2[rbp-161]
	call	??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
	mov	rbx, rax
	test	rsi, rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 354
	je	SHORT $LN81@Iput
; Line 355
	mov	rax, QWORD PTR [rsi]
	mov	rcx, rsi
	call	QWORD PTR [rax+16]
	mov	rcx, rax
	test	rax, rax
	je	SHORT $LN81@Iput
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	call	QWORD PTR [rax]
$LN81@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 108
	mov	rax, QWORD PTR [rbx]
	lea	rdx, QWORD PTR _Grouping$[rbp-161]
	mov	rcx, rbx
	call	QWORD PTR [rax+40]
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 444
	lea	rsi, QWORD PTR _Grouping$[rbp-161]
; Line 445
	cmp	QWORD PTR _Grouping$[rbp-137], 15
	cmova	rsi, QWORD PTR _Grouping$[rbp-161]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1583
	movzx	eax, BYTE PTR [rsi]
	cmp	al, 127					; 0000007fH
	je	$LN457@Iput
	test	al, al
	jle	$LN457@Iput
; Line 104
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+32]
	movsx	r15d, al
; Line 1585
	movzx	eax, BYTE PTR [rsi]
	cmp	al, 127					; 0000007fH
	je	$LN457@Iput
	npad	7
$LL2@Iput:
	test	al, al
	jle	$LN457@Iput
	movsx	rcx, al
	mov	rax, rdi
	sub	rax, r13
	cmp	rcx, rax
	jae	$LN457@Iput
; Line 1587
	sub	rdi, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 469
	mov	r8, QWORD PTR _Groupstring$[rbp-145]
	cmp	r8, rdi
	jb	$LN423@Iput
; Line 1788
	mov	rcx, QWORD PTR _Groupstring$[rbp-137]
	mov	rax, rcx
	sub	rax, r8
	cmp	rax, 1
	jb	SHORT $LN24@Iput
; Line 1790
	lea	rax, QWORD PTR [r8+1]
	mov	QWORD PTR _Groupstring$[rbp-145], rax
; Line 435
	lea	rbx, QWORD PTR _Groupstring$[rbp-161]
; Line 436
	cmp	rcx, 15
	cmova	rbx, QWORD PTR _Groupstring$[rbp-161]
; Line 1792
	add	rbx, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 174
	sub	r8, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1793
	inc	r8
	lea	rcx, QWORD PTR [rbx+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 174
	mov	rdx, rbx
	call	memmove
; Line 493
	movzx	al, r15b
	mov	BYTE PTR [rbx], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1795
	jmp	SHORT $LN23@Iput
$LN24@Iput:
; Line 1798
	mov	BYTE PTR [rsp+40], r15b
	mov	QWORD PTR [rsp+32], 1
	mov	r9, rdi
	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR _Groupstring$[rbp-161]
	call	??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_b986da8d428e4af07c64af60eec09b61>,unsigned __int64,unsigned __int64,char>
$LN23@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1589
	lea	rax, QWORD PTR [rsi+1]
	cmp	BYTE PTR [rax], 0
	cmovg	rsi, rax
; Line 1585
	movzx	eax, BYTE PTR [rsi]
	cmp	al, 127					; 0000007fH
	jne	$LL2@Iput
$LN457@Iput:
; Line 1595
	mov	r12, QWORD PTR _Groupstring$[rbp-145]
; Line 1598
	mov	rax, QWORD PTR _Iosbase$GSCopy$1$[rbp-161]
	mov	rdi, QWORD PTR [rax+40]
	test	rdi, rdi
	jle	SHORT $LN10@Iput
	cmp	rdi, r12
	jbe	SHORT $LN10@Iput
; Line 1601
	sub	rdi, r12
	jmp	SHORT $LN9@Iput
$LN10@Iput:
; Line 1599
	xor	edi, edi
$LN9@Iput:
; Line 1604
	mov	eax, DWORD PTR [rax+24]
	and	eax, 448				; 000001c0H
; Line 1605
	cmp	eax, 64					; 00000040H
	je	$LN13@Iput
	cmp	eax, 256				; 00000100H
	mov	rax, QWORD PTR _Dest$GSCopy$1$[rbp-161]
	movups	xmm0, XMMWORD PTR [rax]
	movaps	XMMWORD PTR $T3[rbp-161], xmm0
	je	$LN455@Iput
; Line 1632
	test	rdi, rdi
	je	SHORT $LN347@Iput
	mov	rbx, QWORD PTR $T3[rbp-153]
$LL348@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN352@Iput
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN356@Iput
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN356@Iput
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r14b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN357@Iput
$LN356@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN357@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN346@Iput
$LN352@Iput:
; Line 527
	mov	BYTE PTR $T3[rbp-161], 1
$LN346@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1632
	sub	rdi, 1
	jne	SHORT $LL348@Iput
	movaps	xmm0, XMMWORD PTR $T3[rbp-161]
$LN347@Iput:
; Line 1607
	xor	edi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 435
	lea	rsi, QWORD PTR _Groupstring$[rbp-161]
; Line 436
	cmp	QWORD PTR _Groupstring$[rbp-137], 15
	cmova	rsi, QWORD PTR _Groupstring$[rbp-161]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1608
	movaps	XMMWORD PTR $T4[rbp-161], xmm0
	mov	r15, r13
; Line 1624
	test	r13, r13
	je	$LN387@Iput
	mov	rbx, QWORD PTR $T4[rbp-153]
	npad	8
$LL388@Iput:
; Line 1625
	movzx	r8d, BYTE PTR [rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN392@Iput
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], rdi
	je	SHORT $LN396@Iput
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN396@Iput
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r8b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN397@Iput
$LN396@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN397@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN386@Iput
$LN392@Iput:
; Line 527
	mov	BYTE PTR $T4[rbp-161], 1
$LN386@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1624
	inc	rsi
	sub	r15, 1
	jne	SHORT $LL388@Iput
; Line 1608
	jmp	$LN459@Iput
$LN455@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 435
	lea	rsi, QWORD PTR _Groupstring$[rbp-161]
; Line 436
	cmp	QWORD PTR _Groupstring$[rbp-137], 15
	cmova	rsi, QWORD PTR _Groupstring$[rbp-161]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1610
	mov	r15, r13
; Line 1624
	test	r13, r13
	je	SHORT $LN235@Iput
	mov	rbx, QWORD PTR $T5[rbp-153]
$LL236@Iput:
; Line 1625
	movzx	r8d, BYTE PTR [rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN240@Iput
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN244@Iput
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN244@Iput
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r8b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN245@Iput
$LN244@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN245@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN234@Iput
$LN240@Iput:
; Line 527
	mov	BYTE PTR $T5[rbp-161], 1
$LN234@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1624
	inc	rsi
	sub	r15, 1
	jne	SHORT $LL236@Iput
	movaps	xmm0, XMMWORD PTR $T5[rbp-161]
$LN235@Iput:
; Line 1611
	movaps	XMMWORD PTR $T6[rbp-161], xmm0
; Line 1632
	test	rdi, rdi
	je	SHORT $LN265@Iput
	mov	rbx, QWORD PTR $T6[rbp-153]
	npad	7
$LL266@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN270@Iput
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN274@Iput
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN274@Iput
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r14b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN275@Iput
$LN274@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN275@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN264@Iput
$LN270@Iput:
; Line 527
	mov	BYTE PTR $T6[rbp-161], 1
$LN264@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1632
	sub	rdi, 1
	jne	SHORT $LL266@Iput
	movaps	xmm0, XMMWORD PTR $T6[rbp-161]
$LN265@Iput:
; Line 1612
	xor	edi, edi
; Line 1613
	jmp	$LN387@Iput
$LN13@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 435
	lea	rsi, QWORD PTR _Groupstring$[rbp-161]
; Line 436
	cmp	QWORD PTR _Groupstring$[rbp-137], 15
	cmova	rsi, QWORD PTR _Groupstring$[rbp-161]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1614
	mov	rax, QWORD PTR _Dest$GSCopy$1$[rbp-161]
	movups	xmm0, XMMWORD PTR [rax]
	movaps	XMMWORD PTR $T7[rbp-161], xmm0
	mov	r15, r13
; Line 1624
	test	r13, r13
	je	SHORT $LN305@Iput
	mov	rbx, QWORD PTR $T7[rbp-153]
	npad	2
$LL306@Iput:
; Line 1625
	movzx	r8d, BYTE PTR [rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN310@Iput
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN314@Iput
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN314@Iput
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r8b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN315@Iput
$LN314@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN315@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN304@Iput
$LN310@Iput:
; Line 527
	mov	BYTE PTR $T7[rbp-161], 1
$LN304@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1624
	inc	rsi
	sub	r15, 1
	jne	SHORT $LL306@Iput
$LN459@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 435
	movaps	xmm0, XMMWORD PTR $T7[rbp-161]
$LN387@Iput:
	mov	rax, QWORD PTR _Dest$GSCopy$1$[rbp-161]
$LN305@Iput:
	movups	XMMWORD PTR [rax], xmm0
	lea	rsi, QWORD PTR _Groupstring$[rbp-161]
; Line 436
	cmp	QWORD PTR _Groupstring$[rbp-137], 15
	cmova	rsi, QWORD PTR _Groupstring$[rbp-161]
; Line 2272
	add	rsi, r13
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1617
	mov	rax, QWORD PTR _Dest$GSCopy$1$[rbp-161]
	movups	xmm0, XMMWORD PTR [rax]
	movaps	XMMWORD PTR $T8[rbp-161], xmm0
	sub	r12, r13
; Line 1624
	je	SHORT $LN172@Iput
	mov	rbx, QWORD PTR $T8[rbp-153]
$LL173@Iput:
; Line 1625
	movzx	r8d, BYTE PTR [rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN177@Iput
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN181@Iput
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN181@Iput
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r8b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN182@Iput
$LN181@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN182@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN171@Iput
$LN177@Iput:
; Line 527
	mov	BYTE PTR $T8[rbp-161], 1
$LN171@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1624
	inc	rsi
	sub	r12, 1
	jne	SHORT $LL173@Iput
	movaps	xmm0, XMMWORD PTR $T8[rbp-161]
$LN172@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 284
	mov	rax, QWORD PTR _Iosbase$GSCopy$1$[rbp-161]
	mov	QWORD PTR [rax+40], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1619
	movaps	XMMWORD PTR $T9[rbp-161], xmm0
; Line 1632
	test	rdi, rdi
	je	SHORT $LN205@Iput
	mov	rbx, QWORD PTR $T9[rbp-153]
$LL206@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN210@Iput
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN214@Iput
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN214@Iput
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r14b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN215@Iput
$LN214@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN215@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN204@Iput
$LN210@Iput:
; Line 527
	mov	BYTE PTR $T9[rbp-161], 1
$LN204@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1632
	sub	rdi, 1
	jne	SHORT $LL206@Iput
	movaps	xmm0, XMMWORD PTR $T9[rbp-161]
$LN205@Iput:
; Line 1636
	mov	rbx, QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-161]
	movups	XMMWORD PTR [rbx], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3083
	mov	rdx, QWORD PTR _Grouping$[rbp-137]
	cmp	rdx, 15
	jbe	SHORT $LN118@Iput
; Line 852
	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	mov	rcx, QWORD PTR _Grouping$[rbp-161]
	mov	rax, rcx
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN123@Iput
; Line 202
	add	rdx, 39					; 00000027H
; Line 205
	mov	rcx, QWORD PTR [rcx-8]
; Line 219
	sub	rax, rcx
	sub	rax, 8
	cmp	rax, 31
	ja	$LN461@Iput
$LN123@Iput:
; Line 289
	call	??3@YAXPEAX_K@Z				; operator delete
$LN118@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3090
	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR _Grouping$[rbp-145], xmm0
; Line 3093
	mov	BYTE PTR _Grouping$[rbp-161], 0
; Line 3083
	mov	rdx, QWORD PTR _Groupstring$[rbp-137]
	cmp	rdx, 15
	jbe	SHORT $LN149@Iput
; Line 852
	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	mov	rcx, QWORD PTR _Groupstring$[rbp-161]
	mov	rax, rcx
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN154@Iput
; Line 202
	add	rdx, 39					; 00000027H
; Line 205
	mov	rcx, QWORD PTR [rcx-8]
; Line 219
	sub	rax, rcx
	sub	rax, 8
	cmp	rax, 31
	ja	SHORT $LN462@Iput
$LN154@Iput:
; Line 289
	call	??3@YAXPEAX_K@Z				; operator delete
$LN149@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1619
	mov	rax, rbx
; Line 1620
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-161]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+240]
	add	rsp, 176				; 000000b0H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN462@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	npad	1
$LN423@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 470
	call	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
	npad	1
$LN461@Iput:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN458@Iput:
?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
$T6 = 48
$T7 = 48
$T8 = 48
$T9 = 48
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1locale@std@@QEAA@XZ			; std::locale::~locale
?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
$T6 = 48
$T7 = 48
$T8 = 48
$T9 = 48
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$1
	lea	rcx, QWORD PTR _Groupstring$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
$T6 = 48
$T7 = 48
$T8 = 48
$T9 = 48
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$2
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1locale@std@@QEAA@XZ			; std::locale::~locale
?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
$T6 = 48
$T7 = 48
$T8 = 48
$T9 = 48
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$3
	lea	rcx, QWORD PTR _Grouping$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z
_TEXT	SEGMENT
this$ = 8
_Fmt$ = 16
_Spec$ = 24
_Flags$ = 32
?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1541
	mov	BYTE PTR [rdx], 37			; 00000025H
	mov	r10, rdx
	lea	rax, QWORD PTR [rdx+1]
; Line 1543
	test	r9b, 32					; 00000020H
	je	SHORT $LN2@Ifmt
; Line 1544
	mov	BYTE PTR [rax], 43			; 0000002bH
	inc	rax
$LN2@Ifmt:
; Line 1547
	test	r9b, 8
	je	SHORT $LN3@Ifmt
; Line 1548
	mov	BYTE PTR [rax], 35			; 00000023H
	inc	rax
$LN3@Ifmt:
; Line 1551
	movzx	edx, BYTE PTR [r8]
	lea	rcx, QWORD PTR [rax+1]
	cmp	dl, 76					; 0000004cH
	je	SHORT $LN4@Ifmt
; Line 1552
	mov	BYTE PTR [rax], dl
; Line 1553
	jmp	SHORT $LN5@Ifmt
$LN4@Ifmt:
; Line 1554
	mov	BYTE PTR [rax], 73			; 00000049H
; Line 1555
	mov	WORD PTR [rcx], 13366			; 00003436H
; Line 1556
	add	rcx, 2
$LN5@Ifmt:
; Line 1559
	mov	eax, r9d
	and	eax, 3584				; 00000e00H
; Line 1560
	cmp	eax, 1024				; 00000400H
	jne	SHORT $LN9@Ifmt
	mov	r9b, 111				; 0000006fH
; Line 1565
	mov	rax, r10
	mov	BYTE PTR [rcx], r9b
	mov	BYTE PTR [rcx+1], 0
; Line 1566
	ret	0
$LN9@Ifmt:
; Line 1560
	cmp	eax, 2048				; 00000800H
	je	SHORT $LN7@Ifmt
	movzx	r9d, BYTE PTR [r8+1]
; Line 1565
	mov	rax, r10
	mov	BYTE PTR [rcx], r9b
	mov	BYTE PTR [rcx+1], 0
; Line 1566
	ret	0
$LN7@Ifmt:
; Line 1560
	shl	r9b, 3
; Line 1565
	mov	rax, r10
	not	r9b
	and	r9b, 32					; 00000020H
	or	r9b, 88					; 00000058H
	mov	BYTE PTR [rcx], r9b
	mov	BYTE PTR [rcx+1], 0
; Line 1566
	ret	0
?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z
_TEXT	SEGMENT
this$ = 8
_Fmt$ = 16
_Spec$ = 24
_Flags$ = 32
?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ffmt, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1418
	mov	BYTE PTR [rdx], 37			; 00000025H
	mov	r10, rdx
	lea	rcx, QWORD PTR [rdx+1]
; Line 1420
	test	r9b, 32					; 00000020H
	je	SHORT $LN2@Ffmt
; Line 1421
	mov	BYTE PTR [rcx], 43			; 0000002bH
	inc	rcx
$LN2@Ffmt:
; Line 1424
	test	r9b, 16
	je	SHORT $LN3@Ffmt
; Line 1425
	mov	BYTE PTR [rcx], 35			; 00000023H
	inc	rcx
$LN3@Ffmt:
; Line 1428
	mov	WORD PTR [rcx], 10798			; 00002a2eH
; Line 1429
	add	rcx, 2
; Line 1430
	test	r8b, r8b
	je	SHORT $LN4@Ffmt
; Line 1431
	mov	BYTE PTR [rcx], r8b
	inc	rcx
$LN4@Ffmt:
; Line 1435
	mov	edx, r9d
	and	edx, 12288				; 00003000H
; Line 1436
	test	r9b, 4
	je	SHORT $LN5@Ffmt
; Line 1437
	cmp	edx, 8192				; 00002000H
	jne	SHORT $LN7@Ffmt
; Line 1438
	mov	al, 70					; 00000046H
; Line 1457
	mov	BYTE PTR [rcx], al
; Line 1460
	mov	rax, r10
	mov	BYTE PTR [rcx+1], 0
; Line 1461
	ret	0
$LN7@Ffmt:
; Line 1439
	cmp	edx, 12288				; 00003000H
	jne	SHORT $LN9@Ffmt
; Line 1440
	mov	al, 65					; 00000041H
; Line 1457
	mov	BYTE PTR [rcx], al
; Line 1460
	mov	rax, r10
	mov	BYTE PTR [rcx+1], 0
; Line 1461
	ret	0
$LN9@Ffmt:
; Line 1441
	mov	eax, 71					; 00000047H
; Line 1457
	cmp	edx, 4096				; 00001000H
	mov	r8d, 69					; 00000045H
	cmove	eax, r8d
	mov	BYTE PTR [rcx], al
; Line 1460
	mov	rax, r10
	mov	BYTE PTR [rcx+1], 0
; Line 1461
	ret	0
$LN5@Ffmt:
; Line 1447
	cmp	edx, 8192				; 00002000H
	jne	SHORT $LN13@Ffmt
; Line 1448
	mov	al, 102					; 00000066H
; Line 1457
	mov	BYTE PTR [rcx], al
; Line 1460
	mov	rax, r10
	mov	BYTE PTR [rcx+1], 0
; Line 1461
	ret	0
$LN13@Ffmt:
; Line 1449
	cmp	edx, 12288				; 00003000H
	jne	SHORT $LN15@Ffmt
; Line 1450
	mov	al, 97					; 00000061H
; Line 1457
	mov	BYTE PTR [rcx], al
; Line 1460
	mov	rax, r10
	mov	BYTE PTR [rcx+1], 0
; Line 1461
	ret	0
$LN15@Ffmt:
; Line 1451
	mov	eax, 103				; 00000067H
; Line 1457
	cmp	edx, 4096				; 00001000H
	mov	r8d, 101				; 00000065H
	cmove	eax, r8d
	mov	BYTE PTR [rcx], al
; Line 1460
	mov	rax, r10
	mov	BYTE PTR [rcx+1], 0
; Line 1461
	ret	0
?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ffmt
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z
_TEXT	SEGMENT
$T1 = 64
_Buf$ = 80
__$ArrayPad$ = 144
this$ = 192
__$ReturnUdt$ = 200
_Dest$ = 208
_Iosbase$ = 216
_Fill$ = 224
_Val$ = 232
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1407
$LN4:
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 160				; 000000a0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 1410
	movups	xmm0, XMMWORD PTR [r8]
	mov	rdi, r9
	lea	r8, OFFSET FLAT:??_C@_02BBAHNLBA@?$CFp@
	mov	r9, QWORD PTR _Val$[rsp]
	mov	rsi, rdx
	mov	rbx, rcx
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	edx, 64					; 00000040H
	lea	rcx, QWORD PTR _Buf$[rsp]
	call	sprintf_s
	movsxd	rcx, eax
	lea	r8, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rsp+48], rcx
	lea	rax, QWORD PTR _Buf$[rsp]
	movzx	ecx, BYTE PTR _Fill$[rsp]
	mov	r9, rdi
	mov	QWORD PTR [rsp+40], rax
	mov	rdx, rsi
	mov	BYTE PTR [rsp+32], cl
	mov	rcx, rbx
	call	?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
	mov	rax, rsi
; Line 1412
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 160				; 000000a0H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
_TEXT	SEGMENT
_Ptwo$1 = 64
$T2 = 80
_Buf$ = 96
_Fmt$ = 128
__$ArrayPad$ = 136
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Val$ = 264
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1379
$LN140:
	push	rbp
	push	rbx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-23]
	sub	rsp, 160				; 000000a0H
	movaps	XMMWORD PTR [rsp+144], xmm6
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-137], rax
	mov	rsi, r9
	mov	r12, r8
	mov	r14, rdx
	mov	r15, rcx
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 493
	movups	XMMWORD PTR _Buf$[rbp-137], xmm0
; Line 860
	xor	r9d, r9d
	mov	QWORD PTR _Buf$[rbp-121], r9
; Line 861
	mov	r8d, 15
	mov	QWORD PTR _Buf$[rbp-113], r8
; Line 865
	mov	BYTE PTR _Buf$[rbp-137], r9b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1382
	mov	eax, DWORD PTR [rsi+24]
	and	eax, 12288				; 00003000H
; Line 1385
	movsd	xmm6, QWORD PTR _Val$[rbp-137]
	cmp	eax, 12288				; 00003000H
	jne	SHORT $LN4@do_put
	mov	rdi, -1
; Line 1186
	mov	ebx, 13
	jmp	SHORT $LN2@do_put
$LN4@do_put:
; Line 1385
	mov	rdi, QWORD PTR [rsi+32]
; Line 1192
	test	rdi, rdi
	jle	SHORT $LN135@do_put
; Line 1193
	mov	ecx, edi
	jmp	SHORT $LN34@do_put
$LN135@do_put:
; Line 1194
	jne	SHORT $LN33@do_put
; Line 1196
	test	eax, eax
	jne	SHORT $LN35@do_put
; Line 1197
	mov	ebx, 1
	jmp	SHORT $LN2@do_put
$LN35@do_put:
; Line 1199
	xor	ecx, ecx
	jmp	SHORT $LN34@do_put
$LN33@do_put:
; Line 1203
	mov	ecx, 6
$LN34@do_put:
; Line 1388
	movsxd	rbx, ecx
; Line 1389
	cmp	eax, 8192				; 00002000H
	jne	SHORT $LN2@do_put
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\corecrt_math.h
; Line 882
	movaps	xmm0, xmm6
	andps	xmm0, XMMWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1389
	comisd	xmm0, QWORD PTR __real@4202a05f20000000
	jbe	SHORT $LN2@do_put
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\corecrt_math.h
; Line 903
	lea	rdx, QWORD PTR _Ptwo$1[rbp-137]
	movaps	xmm0, xmm6
	call	frexp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1392
	mov	ecx, DWORD PTR _Ptwo$1[rbp-137]
	neg	ecx
	cmovs	ecx, DWORD PTR _Ptwo$1[rbp-137]
	imul	ecx, ecx, 30103				; 00007597H
	mov	eax, 351843721				; 14f8b589H
	imul	ecx
	sar	edx, 13
	mov	eax, edx
	shr	eax, 31
	add	eax, edx
	cdqe
	add	rbx, rax
	mov	r8, QWORD PTR _Buf$[rbp-113]
	mov	r9, QWORD PTR _Buf$[rbp-121]
$LN2@do_put:
; Line 1395
	lea	rdx, QWORD PTR [rbx+50]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 2389
	cmp	rdx, r9
	ja	SHORT $LN39@do_put
; Line 3076
	mov	QWORD PTR _Buf$[rbp-121], rdx
; Line 435
	lea	rax, QWORD PTR _Buf$[rbp-137]
; Line 436
	cmp	r8, 15
	cmova	rax, QWORD PTR _Buf$[rbp-137]
; Line 3077
	mov	BYTE PTR [rax+rdx], 0
; Line 2391
	jmp	SHORT $LN40@do_put
$LN39@do_put:
; Line 2392
	sub	rdx, r9
	xor	r8d, r8d
	lea	rcx, QWORD PTR _Buf$[rbp-137]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN40@do_put:
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\corecrt_math.h
; Line 335
	movaps	xmm0, xmm6
	call	_ldclass
	movsx	ecx, ax
; Line 437
	test	ecx, ecx
	setle	bl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1396
	mov	r8d, DWORD PTR [rsi+24]
; Line 1418
	mov	eax, r8d
	and	eax, -17
	test	ecx, ecx
	cmovg	r8d, eax
	mov	BYTE PTR _Fmt$[rbp-137], 37		; 00000025H
; Line 1420
	mov	eax, r8d
	and	eax, 32					; 00000020H
	je	SHORT $LN59@do_put
; Line 1421
	mov	BYTE PTR _Fmt$[rbp-136], 43		; 0000002bH
$LN59@do_put:
; Line 1424
	lea	rcx, QWORD PTR _Fmt$[rbp-136]
	lea	rdx, QWORD PTR _Fmt$[rbp-135]
	test	eax, eax
	cmovne	rcx, rdx
	test	r8b, 16
	je	SHORT $LN60@do_put
; Line 1425
	mov	BYTE PTR [rcx], 35			; 00000023H
	inc	rcx
$LN60@do_put:
; Line 1428
	mov	WORD PTR [rcx], 10798			; 00002a2eH
; Line 1431
	mov	BYTE PTR [rcx+2], 76			; 0000004cH
; Line 1435
	mov	edx, r8d
	and	edx, 12288				; 00003000H
; Line 1436
	test	r8b, 4
	je	SHORT $LN62@do_put
; Line 1437
	cmp	edx, 8192				; 00002000H
	jne	SHORT $LN64@do_put
; Line 1438
	mov	al, 70					; 00000046H
	jmp	SHORT $LN74@do_put
$LN64@do_put:
; Line 1439
	cmp	edx, 12288				; 00003000H
	jne	SHORT $LN66@do_put
; Line 1440
	mov	al, 65					; 00000041H
	jmp	SHORT $LN74@do_put
$LN66@do_put:
; Line 1441
	mov	eax, 71					; 00000047H
	mov	r8d, 69					; 00000045H
; Line 1446
	jmp	SHORT $LN136@do_put
$LN62@do_put:
; Line 1447
	cmp	edx, 8192				; 00002000H
	jne	SHORT $LN70@do_put
; Line 1448
	mov	al, 102					; 00000066H
	jmp	SHORT $LN74@do_put
$LN70@do_put:
; Line 1449
	cmp	edx, 12288				; 00003000H
	jne	SHORT $LN72@do_put
; Line 1450
	mov	al, 97					; 00000061H
	jmp	SHORT $LN74@do_put
$LN72@do_put:
; Line 1451
	mov	eax, 103				; 00000067H
	mov	r8d, 101				; 00000065H
$LN136@do_put:
; Line 1457
	cmp	edx, 4096				; 00001000H
	cmove	eax, r8d
$LN74@do_put:
	mov	BYTE PTR [rcx+3], al
; Line 1459
	mov	BYTE PTR [rcx+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 435
	lea	rcx, QWORD PTR _Buf$[rbp-137]
; Line 436
	cmp	QWORD PTR _Buf$[rbp-113], 15
	cmova	rcx, QWORD PTR _Buf$[rbp-137]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1399
	movsd	QWORD PTR [rsp+32], xmm6
	mov	r9d, edi
	lea	r8, QWORD PTR _Fmt$[rbp-137]
	mov	rdx, QWORD PTR _Buf$[rbp-121]
	call	sprintf_s
	movsxd	rcx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 444
	lea	rax, QWORD PTR _Buf$[rbp-137]
; Line 445
	cmp	QWORD PTR _Buf$[rbp-113], 15
	cmova	rax, QWORD PTR _Buf$[rbp-137]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1402
	movups	xmm0, XMMWORD PTR [r12]
	movaps	XMMWORD PTR $T2[rbp-137], xmm0
	mov	BYTE PTR [rsp+56], bl
	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rax
	movzx	eax, BYTE PTR _Fill$[rbp-137]
	mov	BYTE PTR [rsp+32], al
	mov	r9, rsi
	lea	r8, QWORD PTR $T2[rbp-137]
	mov	rdx, r14
	mov	rcx, r15
	call	??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput_v3<0>
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3083
	mov	rdx, QWORD PTR _Buf$[rbp-113]
	cmp	rdx, 15
	jbe	SHORT $LN117@do_put
; Line 852
	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	mov	rcx, QWORD PTR _Buf$[rbp-137]
	mov	rax, rcx
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN122@do_put
; Line 202
	add	rdx, 39					; 00000027H
; Line 205
	mov	rcx, QWORD PTR [rcx-8]
; Line 219
	sub	rax, rcx
	sub	rax, 8
	cmp	rax, 31
	ja	SHORT $LN138@do_put
$LN122@do_put:
; Line 289
	call	??3@YAXPEAX_K@Z				; operator delete
$LN117@do_put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1402
	mov	rax, r14
; Line 1403
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-137]
	xor	rcx, rsp
	call	__security_check_cookie
	movaps	xmm6, XMMWORD PTR [rsp+144]
	add	rsp, 160				; 000000a0H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
$LN138@do_put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN134@do_put:
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ptwo$1 = 64
$T2 = 80
_Buf$ = 96
_Fmt$ = 128
__$ArrayPad$ = 136
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Val$ = 264
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
	lea	rcx, QWORD PTR _Buf$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
_TEXT	SEGMENT
_Ptwo$1 = 64
$T2 = 80
_Buf$ = 96
_Fmt$ = 128
__$ArrayPad$ = 136
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Val$ = 264
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1352
$LN136:
	push	rbp
	push	rbx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-23]
	sub	rsp, 160				; 000000a0H
	movaps	XMMWORD PTR [rsp+144], xmm6
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-137], rax
	mov	rsi, r9
	mov	r12, r8
	mov	r14, rdx
	mov	r15, rcx
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 493
	movups	XMMWORD PTR _Buf$[rbp-137], xmm0
; Line 860
	xor	r9d, r9d
	mov	QWORD PTR _Buf$[rbp-121], r9
; Line 861
	mov	r8d, 15
	mov	QWORD PTR _Buf$[rbp-113], r8
; Line 865
	mov	BYTE PTR _Buf$[rbp-137], r9b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1355
	mov	eax, DWORD PTR [rsi+24]
	and	eax, 12288				; 00003000H
; Line 1358
	movsd	xmm6, QWORD PTR _Val$[rbp-137]
	cmp	eax, 12288				; 00003000H
	jne	SHORT $LN4@do_put
	mov	rdi, -1
; Line 1184
	mov	ebx, 13
	jmp	SHORT $LN2@do_put
$LN4@do_put:
; Line 1358
	mov	rdi, QWORD PTR [rsi+32]
; Line 1192
	test	rdi, rdi
	jle	SHORT $LN131@do_put
; Line 1193
	mov	ecx, edi
	jmp	SHORT $LN34@do_put
$LN131@do_put:
; Line 1194
	jne	SHORT $LN33@do_put
; Line 1196
	test	eax, eax
	jne	SHORT $LN35@do_put
; Line 1197
	mov	ebx, 1
	jmp	SHORT $LN2@do_put
$LN35@do_put:
; Line 1199
	xor	ecx, ecx
	jmp	SHORT $LN34@do_put
$LN33@do_put:
; Line 1203
	mov	ecx, 6
$LN34@do_put:
; Line 1361
	movsxd	rbx, ecx
; Line 1362
	cmp	eax, 8192				; 00002000H
	jne	SHORT $LN2@do_put
	movaps	xmm0, xmm6
	andps	xmm0, XMMWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
	comisd	xmm0, QWORD PTR __real@4202a05f20000000
	jbe	SHORT $LN2@do_put
; Line 1364
	lea	rdx, QWORD PTR _Ptwo$1[rbp-137]
	movaps	xmm0, xmm6
	call	frexp
; Line 1365
	mov	ecx, DWORD PTR _Ptwo$1[rbp-137]
	neg	ecx
	cmovs	ecx, DWORD PTR _Ptwo$1[rbp-137]
	imul	ecx, ecx, 30103				; 00007597H
	mov	eax, 351843721				; 14f8b589H
	imul	ecx
	sar	edx, 13
	mov	eax, edx
	shr	eax, 31
	add	eax, edx
	cdqe
	add	rbx, rax
	mov	r8, QWORD PTR _Buf$[rbp-113]
	mov	r9, QWORD PTR _Buf$[rbp-121]
$LN2@do_put:
; Line 1368
	lea	rdx, QWORD PTR [rbx+50]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 2389
	cmp	rdx, r9
	ja	SHORT $LN39@do_put
; Line 3076
	mov	QWORD PTR _Buf$[rbp-121], rdx
; Line 435
	lea	rax, QWORD PTR _Buf$[rbp-137]
; Line 436
	cmp	r8, 15
	cmova	rax, QWORD PTR _Buf$[rbp-137]
; Line 3077
	mov	BYTE PTR [rax+rdx], 0
; Line 2391
	jmp	SHORT $LN40@do_put
$LN39@do_put:
; Line 2392
	sub	rdx, r9
	xor	r8d, r8d
	lea	rcx, QWORD PTR _Buf$[rbp-137]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN40@do_put:
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\corecrt_math.h
; Line 326
	movaps	xmm0, xmm6
	call	_dclass
	movsx	ecx, ax
; Line 437
	test	ecx, ecx
	setle	bl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1369
	mov	r8d, DWORD PTR [rsi+24]
; Line 1418
	mov	eax, r8d
	and	eax, -17
	test	ecx, ecx
	cmovg	r8d, eax
	mov	BYTE PTR _Fmt$[rbp-137], 37		; 00000025H
; Line 1420
	mov	eax, r8d
	and	eax, 32					; 00000020H
	je	SHORT $LN59@do_put
; Line 1421
	mov	BYTE PTR _Fmt$[rbp-136], 43		; 0000002bH
$LN59@do_put:
; Line 1424
	lea	rcx, QWORD PTR _Fmt$[rbp-136]
	lea	rdx, QWORD PTR _Fmt$[rbp-135]
	test	eax, eax
	cmovne	rcx, rdx
	test	r8b, 16
	je	SHORT $LN60@do_put
; Line 1425
	mov	BYTE PTR [rcx], 35			; 00000023H
	inc	rcx
$LN60@do_put:
; Line 1428
	mov	WORD PTR [rcx], 10798			; 00002a2eH
; Line 1435
	mov	edx, r8d
	and	edx, 12288				; 00003000H
; Line 1436
	test	r8b, 4
	je	SHORT $LN62@do_put
; Line 1437
	cmp	edx, 8192				; 00002000H
	jne	SHORT $LN64@do_put
; Line 1438
	mov	al, 70					; 00000046H
	jmp	SHORT $LN74@do_put
$LN64@do_put:
; Line 1439
	cmp	edx, 12288				; 00003000H
	jne	SHORT $LN66@do_put
; Line 1440
	mov	al, 65					; 00000041H
	jmp	SHORT $LN74@do_put
$LN66@do_put:
; Line 1441
	mov	eax, 71					; 00000047H
	mov	r8d, 69					; 00000045H
; Line 1446
	jmp	SHORT $LN132@do_put
$LN62@do_put:
; Line 1447
	cmp	edx, 8192				; 00002000H
	jne	SHORT $LN70@do_put
; Line 1448
	mov	al, 102					; 00000066H
	jmp	SHORT $LN74@do_put
$LN70@do_put:
; Line 1449
	cmp	edx, 12288				; 00003000H
	jne	SHORT $LN72@do_put
; Line 1450
	mov	al, 97					; 00000061H
	jmp	SHORT $LN74@do_put
$LN72@do_put:
; Line 1451
	mov	eax, 103				; 00000067H
	mov	r8d, 101				; 00000065H
$LN132@do_put:
; Line 1457
	cmp	edx, 4096				; 00001000H
	cmove	eax, r8d
$LN74@do_put:
	mov	BYTE PTR [rcx+2], al
; Line 1459
	mov	BYTE PTR [rcx+3], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 435
	lea	rcx, QWORD PTR _Buf$[rbp-137]
; Line 436
	cmp	QWORD PTR _Buf$[rbp-113], 15
	cmova	rcx, QWORD PTR _Buf$[rbp-137]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1372
	movsd	QWORD PTR [rsp+32], xmm6
	mov	r9d, edi
	lea	r8, QWORD PTR _Fmt$[rbp-137]
	mov	rdx, QWORD PTR _Buf$[rbp-121]
	call	sprintf_s
	movsxd	rcx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 444
	lea	rax, QWORD PTR _Buf$[rbp-137]
; Line 445
	cmp	QWORD PTR _Buf$[rbp-113], 15
	cmova	rax, QWORD PTR _Buf$[rbp-137]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1375
	movups	xmm0, XMMWORD PTR [r12]
	movaps	XMMWORD PTR $T2[rbp-137], xmm0
	mov	BYTE PTR [rsp+56], bl
	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rax
	movzx	eax, BYTE PTR _Fill$[rbp-137]
	mov	BYTE PTR [rsp+32], al
	mov	r9, rsi
	lea	r8, QWORD PTR $T2[rbp-137]
	mov	rdx, r14
	mov	rcx, r15
	call	??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput_v3<0>
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3083
	mov	rdx, QWORD PTR _Buf$[rbp-113]
	cmp	rdx, 15
	jbe	SHORT $LN117@do_put
; Line 852
	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	mov	rcx, QWORD PTR _Buf$[rbp-137]
	mov	rax, rcx
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN122@do_put
; Line 202
	add	rdx, 39					; 00000027H
; Line 205
	mov	rcx, QWORD PTR [rcx-8]
; Line 219
	sub	rax, rcx
	sub	rax, 8
	cmp	rax, 31
	ja	SHORT $LN134@do_put
$LN122@do_put:
; Line 289
	call	??3@YAXPEAX_K@Z				; operator delete
$LN117@do_put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1375
	mov	rax, r14
; Line 1376
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-137]
	xor	rcx, rsp
	call	__security_check_cookie
	movaps	xmm6, XMMWORD PTR [rsp+144]
	add	rsp, 160				; 000000a0H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
$LN134@do_put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN130@do_put:
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ptwo$1 = 64
$T2 = 80
_Buf$ = 96
_Fmt$ = 128
__$ArrayPad$ = 136
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Val$ = 264
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
	lea	rcx, QWORD PTR _Buf$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z
_TEXT	SEGMENT
$T1 = 64
_Fmt$ = 80
_Buf$ = 96
__$ArrayPad$ = 160
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1343
$LN18:
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 176				; 000000b0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 1347
	mov	eax, DWORD PTR [r9+24]
	mov	rdi, rdx
; Line 1543
	mov	edx, eax
	mov	BYTE PTR _Fmt$[rsp], 37			; 00000025H
; Line 1343
	mov	rbx, r9
	mov	rsi, rcx
; Line 1543
	and	edx, 32					; 00000020H
	je	SHORT $LN4@do_put
; Line 1544
	mov	BYTE PTR _Fmt$[rsp+1], 43		; 0000002bH
$LN4@do_put:
; Line 1547
	test	edx, edx
	lea	rcx, QWORD PTR _Fmt$[rsp+1]
	lea	r9, QWORD PTR _Fmt$[rsp+2]
	cmovne	rcx, r9
	test	al, 8
	je	SHORT $LN5@do_put
; Line 1548
	mov	BYTE PTR [rcx], 35			; 00000023H
	inc	rcx
$LN5@do_put:
; Line 1559
	mov	edx, eax
	mov	WORD PTR [rcx], 13897			; 00003649H
	and	edx, 3584				; 00000e00H
	mov	BYTE PTR [rcx+2], 52			; 00000034H
; Line 1560
	cmp	edx, 1024				; 00000400H
	jne	SHORT $LN11@do_put
	mov	al, 111					; 0000006fH
	jmp	SHORT $LN10@do_put
$LN11@do_put:
	cmp	edx, 2048				; 00000800H
	je	SHORT $LN9@do_put
	mov	al, 117					; 00000075H
	jmp	SHORT $LN10@do_put
$LN9@do_put:
	shl	al, 3
	not	al
	and	al, 32					; 00000020H
	or	al, 88					; 00000058H
$LN10@do_put:
; Line 1347
	movups	xmm0, XMMWORD PTR [r8]
	mov	r9, QWORD PTR _Val$[rsp]
	lea	r8, QWORD PTR _Fmt$[rsp]
; Line 1560
	mov	BYTE PTR [rcx+3], al
; Line 1347
	mov	edx, 64					; 00000040H
; Line 1564
	mov	BYTE PTR [rcx+4], 0
; Line 1347
	lea	rcx, QWORD PTR _Buf$[rsp]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	call	sprintf_s
	movsxd	rcx, eax
	lea	r8, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rsp+48], rcx
	lea	rax, QWORD PTR _Buf$[rsp]
	movzx	ecx, BYTE PTR _Fill$[rsp]
	mov	r9, rbx
	mov	QWORD PTR [rsp+40], rax
	mov	rdx, rdi
	mov	BYTE PTR [rsp+32], cl
	mov	rcx, rsi
	call	?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
	mov	rax, rdi
; Line 1349
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 176				; 000000b0H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z
_TEXT	SEGMENT
$T1 = 64
_Fmt$ = 80
_Buf$ = 96
__$ArrayPad$ = 160
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1334
$LN18:
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 176				; 000000b0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 1338
	mov	eax, DWORD PTR [r9+24]
	mov	rdi, rdx
; Line 1543
	mov	edx, eax
	mov	BYTE PTR _Fmt$[rsp], 37			; 00000025H
; Line 1334
	mov	rbx, r9
	mov	rsi, rcx
; Line 1543
	and	edx, 32					; 00000020H
	je	SHORT $LN4@do_put
; Line 1544
	mov	BYTE PTR _Fmt$[rsp+1], 43		; 0000002bH
$LN4@do_put:
; Line 1547
	test	edx, edx
	lea	rcx, QWORD PTR _Fmt$[rsp+1]
	lea	r9, QWORD PTR _Fmt$[rsp+2]
	cmovne	rcx, r9
	test	al, 8
	je	SHORT $LN5@do_put
; Line 1548
	mov	BYTE PTR [rcx], 35			; 00000023H
	inc	rcx
$LN5@do_put:
; Line 1559
	mov	edx, eax
	mov	WORD PTR [rcx], 13897			; 00003649H
	and	edx, 3584				; 00000e00H
	mov	BYTE PTR [rcx+2], 52			; 00000034H
; Line 1560
	cmp	edx, 1024				; 00000400H
	jne	SHORT $LN11@do_put
	mov	al, 111					; 0000006fH
	jmp	SHORT $LN10@do_put
$LN11@do_put:
	cmp	edx, 2048				; 00000800H
	je	SHORT $LN9@do_put
	mov	al, 100					; 00000064H
	jmp	SHORT $LN10@do_put
$LN9@do_put:
	shl	al, 3
	not	al
	and	al, 32					; 00000020H
	or	al, 88					; 00000058H
$LN10@do_put:
; Line 1338
	movups	xmm0, XMMWORD PTR [r8]
	mov	r9, QWORD PTR _Val$[rsp]
	lea	r8, QWORD PTR _Fmt$[rsp]
; Line 1560
	mov	BYTE PTR [rcx+3], al
; Line 1338
	mov	edx, 64					; 00000040H
; Line 1564
	mov	BYTE PTR [rcx+4], 0
; Line 1338
	lea	rcx, QWORD PTR _Buf$[rsp]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	call	sprintf_s
	movsxd	rcx, eax
	lea	r8, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rsp+48], rcx
	lea	rax, QWORD PTR _Buf$[rsp]
	movzx	ecx, BYTE PTR _Fill$[rsp]
	mov	r9, rbx
	mov	QWORD PTR [rsp+40], rax
	mov	rdx, rdi
	mov	BYTE PTR [rsp+32], cl
	mov	rcx, rsi
	call	?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
	mov	rax, rdi
; Line 1340
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 176				; 000000b0H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z
_TEXT	SEGMENT
$T1 = 64
_Fmt$ = 80
_Buf$ = 96
__$ArrayPad$ = 160
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1325
$LN18:
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 176				; 000000b0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 1329
	mov	eax, DWORD PTR [r9+24]
	mov	rdi, rdx
; Line 1543
	mov	edx, eax
	mov	BYTE PTR _Fmt$[rsp], 37			; 00000025H
; Line 1325
	mov	rbx, r9
	mov	rsi, rcx
; Line 1543
	and	edx, 32					; 00000020H
	je	SHORT $LN4@do_put
; Line 1544
	mov	BYTE PTR _Fmt$[rsp+1], 43		; 0000002bH
$LN4@do_put:
; Line 1547
	test	edx, edx
	lea	rcx, QWORD PTR _Fmt$[rsp+1]
	lea	r9, QWORD PTR _Fmt$[rsp+2]
	cmovne	rcx, r9
	test	al, 8
	je	SHORT $LN5@do_put
; Line 1548
	mov	BYTE PTR [rcx], 35			; 00000023H
	inc	rcx
$LN5@do_put:
; Line 1559
	mov	edx, eax
	mov	BYTE PTR [rcx], 108			; 0000006cH
	and	edx, 3584				; 00000e00H
; Line 1560
	cmp	edx, 1024				; 00000400H
	jne	SHORT $LN11@do_put
	mov	al, 111					; 0000006fH
	jmp	SHORT $LN10@do_put
$LN11@do_put:
	cmp	edx, 2048				; 00000800H
	je	SHORT $LN9@do_put
	mov	al, 117					; 00000075H
	jmp	SHORT $LN10@do_put
$LN9@do_put:
	shl	al, 3
	not	al
	and	al, 32					; 00000020H
	or	al, 88					; 00000058H
$LN10@do_put:
; Line 1329
	movups	xmm0, XMMWORD PTR [r8]
	mov	r9d, DWORD PTR _Val$[rsp]
	lea	r8, QWORD PTR _Fmt$[rsp]
; Line 1560
	mov	BYTE PTR [rcx+1], al
; Line 1329
	mov	edx, 64					; 00000040H
; Line 1564
	mov	BYTE PTR [rcx+2], 0
; Line 1329
	lea	rcx, QWORD PTR _Buf$[rsp]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	call	sprintf_s
	movsxd	rcx, eax
	lea	r8, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rsp+48], rcx
	lea	rax, QWORD PTR _Buf$[rsp]
	movzx	ecx, BYTE PTR _Fill$[rsp]
	mov	r9, rbx
	mov	QWORD PTR [rsp+40], rax
	mov	rdx, rdi
	mov	BYTE PTR [rsp+32], cl
	mov	rcx, rsi
	call	?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
	mov	rax, rdi
; Line 1331
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 176				; 000000b0H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z
_TEXT	SEGMENT
$T1 = 64
_Fmt$ = 80
_Buf$ = 96
__$ArrayPad$ = 160
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1316
$LN18:
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 176				; 000000b0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 1320
	mov	eax, DWORD PTR [r9+24]
	mov	rdi, rdx
; Line 1543
	mov	edx, eax
	mov	BYTE PTR _Fmt$[rsp], 37			; 00000025H
; Line 1316
	mov	rbx, r9
	mov	rsi, rcx
; Line 1543
	and	edx, 32					; 00000020H
	je	SHORT $LN4@do_put
; Line 1544
	mov	BYTE PTR _Fmt$[rsp+1], 43		; 0000002bH
$LN4@do_put:
; Line 1547
	test	edx, edx
	lea	rcx, QWORD PTR _Fmt$[rsp+1]
	lea	r9, QWORD PTR _Fmt$[rsp+2]
	cmovne	rcx, r9
	test	al, 8
	je	SHORT $LN5@do_put
; Line 1548
	mov	BYTE PTR [rcx], 35			; 00000023H
	inc	rcx
$LN5@do_put:
; Line 1559
	mov	edx, eax
	mov	BYTE PTR [rcx], 108			; 0000006cH
	and	edx, 3584				; 00000e00H
; Line 1560
	cmp	edx, 1024				; 00000400H
	jne	SHORT $LN11@do_put
	mov	al, 111					; 0000006fH
	jmp	SHORT $LN10@do_put
$LN11@do_put:
	cmp	edx, 2048				; 00000800H
	je	SHORT $LN9@do_put
	mov	al, 100					; 00000064H
	jmp	SHORT $LN10@do_put
$LN9@do_put:
	shl	al, 3
	not	al
	and	al, 32					; 00000020H
	or	al, 88					; 00000058H
$LN10@do_put:
; Line 1320
	movups	xmm0, XMMWORD PTR [r8]
	mov	r9d, DWORD PTR _Val$[rsp]
	lea	r8, QWORD PTR _Fmt$[rsp]
; Line 1560
	mov	BYTE PTR [rcx+1], al
; Line 1320
	mov	edx, 64					; 00000040H
; Line 1564
	mov	BYTE PTR [rcx+2], 0
; Line 1320
	lea	rcx, QWORD PTR _Buf$[rsp]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	call	sprintf_s
	movsxd	rcx, eax
	lea	r8, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rsp+48], rcx
	lea	rax, QWORD PTR _Buf$[rsp]
	movzx	ecx, BYTE PTR _Fill$[rsp]
	mov	r9, rbx
	mov	QWORD PTR [rsp+40], rax
	mov	rdx, rdi
	mov	BYTE PTR [rsp+32], cl
	mov	rcx, rsi
	call	?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
	mov	rax, rdi
; Line 1322
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 176				; 000000b0H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
_TEXT	SEGMENT
_Dest$GSCopy$1$ = 56
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
this$GSCopy$1$ = 80
_Str$1 = 88
$T2 = 128
$T3 = 128
$T4 = 128
$T5 = 128
$T6 = 128
$T7 = 128
$T8 = 128
__$ArrayPad$ = 160
this$ = 288
__$ReturnUdt$ = 296
_Dest$ = 304
_Iosbase$ = 312
_Fill$ = 320
_Val$ = 328
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1284
$LN330:
	mov	rax, rsp
	push	rbp
	push	rbx
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rax-79]
	sub	rsp, 216				; 000000d8H
	movaps	XMMWORD PTR [rax-88], xmm6
	movaps	XMMWORD PTR [rax-104], xmm7
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-201], rax
	mov	r13, r9
	mov	QWORD PTR _Iosbase$GSCopy$1$[rsp], r9
	mov	r15, r8
	mov	QWORD PTR _Dest$GSCopy$1$[rsp], r8
	mov	rbx, rdx
	mov	QWORD PTR __$ReturnUdt$GSCopy$1$[rsp], rdx
	mov	QWORD PTR this$GSCopy$1$[rbp-201], rcx
	movzx	r12d, BYTE PTR _Fill$[rbp-201]
; Line 1285
	test	DWORD PTR [r9+24], 16384		; 00004000H
	jne	SHORT $LN2@do_put
; Line 1286
	movups	xmm0, XMMWORD PTR [r8]
	movaps	XMMWORD PTR $T5[rbp-201], xmm0
	movzx	r8d, BYTE PTR _Val$[rbp-201]
	mov	rdx, QWORD PTR [rcx]
	mov	r10, QWORD PTR [rdx+72]
	mov	DWORD PTR [rsp+40], r8d
	mov	BYTE PTR [rsp+32], r12b
	lea	r8, QWORD PTR $T5[rbp-201]
	mov	rdx, rbx
	call	r10
	jmp	$LN112@do_put
$LN2@do_put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 268
	mov	rax, QWORD PTR [r9+64]
	mov	rbx, QWORD PTR [rax+8]
	mov	QWORD PTR $T2[rbp-193], rbx
; Line 269
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+8]
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1288
	lea	rcx, QWORD PTR $T2[rbp-201]
	call	??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
	mov	rdi, rax
	test	rbx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 354
	je	SHORT $LN26@do_put
; Line 355
	mov	rdx, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rdx+16]
	test	rax, rax
	je	SHORT $LN26@do_put
	mov	rcx, QWORD PTR [rax]
	mov	r8, QWORD PTR [rcx]
	mov	edx, 1
	mov	rcx, rax
	call	r8
$LN26@do_put:
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 493
	movups	XMMWORD PTR _Str$1[rbp-201], xmm0
; Line 860
	movdqa	xmm1, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR _Str$1[rbp-185], xmm1
; Line 865
	mov	BYTE PTR _Str$1[rbp-201], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1289
	mov	rax, QWORD PTR [rdi]
; Line 1290
	lea	rdx, QWORD PTR $T3[rbp-201]
	mov	rcx, rdi
	cmp	BYTE PTR _Val$[rbp-201], 0
	je	SHORT $LN4@do_put
; Line 116
	call	QWORD PTR [rax+56]
; Line 1292
	jmp	SHORT $LN326@do_put
$LN4@do_put:
; Line 112
	call	QWORD PTR [rax+48]
$LN326@do_put:
; Line 1297
	movups	xmm6, XMMWORD PTR $T4[rbp-185]
	movups	xmm7, XMMWORD PTR $T4[rbp-201]
	movdqu	XMMWORD PTR _Str$1[rbp-185], xmm6
	movups	XMMWORD PTR _Str$1[rbp-201], xmm7
	mov	rsi, QWORD PTR [r13+40]
	movq	r14, xmm6
	test	rsi, rsi
	jle	SHORT $LN8@do_put
	cmp	rsi, r14
	jbe	SHORT $LN8@do_put
; Line 1300
	sub	rsi, r14
	jmp	SHORT $LN7@do_put
$LN8@do_put:
; Line 1298
	xor	esi, esi
$LN7@do_put:
; Line 1303
	mov	eax, DWORD PTR [r13+24]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	SHORT $LN9@do_put
; Line 1304
	movups	xmm0, XMMWORD PTR [r15]
	movaps	XMMWORD PTR $T6[rbp-201], xmm0
; Line 1632
	test	rsi, rsi
	je	SHORT $LN286@do_put
	mov	rbx, QWORD PTR $T6[rbp-193]
$LL287@do_put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN291@do_put
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN295@do_put
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN295@do_put
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r12b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r12d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN296@do_put
$LN295@do_put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r12d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN296@do_put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN285@do_put
$LN291@do_put:
; Line 527
	mov	BYTE PTR $T6[rbp-201], 1
$LN285@do_put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1632
	sub	rsi, 1
	jne	SHORT $LL287@do_put
	movaps	xmm0, XMMWORD PTR $T6[rbp-201]
$LN286@do_put:
; Line 1304
	movups	XMMWORD PTR [r15], xmm0
; Line 1305
	xor	esi, esi
$LN9@do_put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 444
	lea	rdi, QWORD PTR _Str$1[rbp-201]
; Line 445
	movq	r15, xmm7
	psrldq	xmm6, 8
	movq	r13, xmm6
	cmp	r13, 15
	cmova	rdi, r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1307
	mov	rax, QWORD PTR _Dest$GSCopy$1$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movaps	XMMWORD PTR $T7[rbp-201], xmm0
	test	r14, r14
; Line 1624
	je	SHORT $LN61@do_put
	mov	rbx, QWORD PTR $T7[rbp-193]
$LL62@do_put:
; Line 1625
	movzx	r8d, BYTE PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	test	rbx, rbx
	je	SHORT $LN66@do_put
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rbx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN324@do_put
	mov	rcx, QWORD PTR [rbx+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN324@do_put
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r8b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN71@do_put
$LN324@do_put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]
$LN71@do_put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 526
	cmp	eax, -1
	jne	SHORT $LN60@do_put
$LN66@do_put:
; Line 527
	mov	BYTE PTR $T7[rbp-201], 1
$LN60@do_put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1624
	inc	rdi
	sub	r14, 1
	jne	SHORT $LL62@do_put
	movaps	xmm0, XMMWORD PTR $T7[rbp-201]
$LN61@do_put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 284
	mov	rax, QWORD PTR _Iosbase$GSCopy$1$[rsp]
	xor	edi, edi
	mov	QWORD PTR [rax+40], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1309
	movdqa	XMMWORD PTR $T8[rbp-201], xmm0
	mov	QWORD PTR [rsp+32], rsi
	movzx	r9d, r12b
	lea	r8, QWORD PTR $T8[rbp-201]
	mov	rbx, QWORD PTR __$ReturnUdt$GSCopy$1$[rsp]
	mov	rdx, rbx
	mov	rcx, QWORD PTR this$GSCopy$1$[rbp-201]
	call	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3083
	cmp	r13, 15
	jbe	SHORT $LN112@do_put
; Line 852
	lea	rdx, QWORD PTR [r13+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	mov	rax, r15
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN117@do_put
; Line 202
	add	rdx, 39					; 00000027H
; Line 205
	mov	r15, QWORD PTR [r15-8]
; Line 219
	sub	rax, r15
	sub	rax, 8
	cmp	rax, 31
	ja	SHORT $LN328@do_put
$LN117@do_put:
; Line 289
	mov	rcx, r15
	call	??3@YAXPEAX_K@Z				; operator delete
$LN112@do_put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1311
	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-201]
	xor	rcx, rsp
	call	__security_check_cookie
	movaps	xmm6, XMMWORD PTR [rsp+192]
	movaps	xmm7, XMMWORD PTR [rsp+176]
	add	rsp, 216				; 000000d8H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
$LN328@do_put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	mov	QWORD PTR [rsp+32], rdi
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN325@do_put:
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Dest$GSCopy$1$ = 56
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
this$GSCopy$1$ = 80
_Str$1 = 88
$T2 = 128
$T3 = 128
$T4 = 128
$T5 = 128
$T6 = 128
$T7 = 128
$T8 = 128
__$ArrayPad$ = 160
this$ = 288
__$ReturnUdt$ = 296
_Dest$ = 304
_Iosbase$ = 312
_Fill$ = 320
_Val$ = 328
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1locale@std@@QEAA@XZ			; std::locale::~locale
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Dest$GSCopy$1$ = 56
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
this$GSCopy$1$ = 80
_Str$1 = 88
$T2 = 128
$T3 = 128
$T4 = 128
$T5 = 128
$T6 = 128
$T7 = 128
$T8 = 128
__$ArrayPad$ = 160
this$ = 288
__$ReturnUdt$ = 296
_Dest$ = 304
_Iosbase$ = 312
_Fill$ = 320
_Val$ = 328
?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$1
	lea	rcx, QWORD PTR _Str$1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
__$ReturnUdt$ = 88
_Dest$ = 96
_Iosbase$ = 104
_Fill$ = 112
_Val$ = 120
?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1248
$LN4:
	push	rbx
	sub	rsp, 64					; 00000040H
; Line 1249
	mov	rax, QWORD PTR [rcx]
	mov	rbx, rdx
	movups	xmm0, XMMWORD PTR [r8]
	lea	r8, QWORD PTR $T1[rsp]
	mov	r10, QWORD PTR [rax+72]
	mov	eax, DWORD PTR _Val$[rsp]
	mov	DWORD PTR [rsp+40], eax
	movzx	eax, BYTE PTR _Fill$[rsp]
	mov	BYTE PTR [rsp+32], al
	movaps	XMMWORD PTR $T1[rsp], xmm0
	call	r10
	mov	rax, rbx
; Line 1250
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z
_TEXT	SEGMENT
this$ = 8
_Lobj$ = 16
_Refs$ = 24
??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1235
	lea	rax, OFFSET FLAT:??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 143
	mov	DWORD PTR [rcx+8], r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1235
	mov	QWORD PTR [rcx], rax
; Line 1237
	mov	rax, rcx
	ret	0
??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Init, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1226
	ret	0
?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Init
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::~num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1224
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	QWORD PTR [rcx], rax
	ret	0
??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::~num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
_TEXT	SEGMENT
$T1 = 32
_Ppf$ = 176
$T2 = 176
$T3 = 176
_Ploc$ = 184
?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1212
$LN109:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	rbp
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-71]
	sub	rsp, 144				; 00000090H
	mov	r14, rdx
	mov	rsi, rcx
	xor	r15d, r15d
	mov	edi, r15d
	mov	DWORD PTR $T3[rbp-73], r15d
; Line 1214
	test	rcx, rcx
	je	$LN60@Getcat
	cmp	QWORD PTR [rcx], rdi
	jne	$LN60@Getcat
; Line 1215
	mov	ecx, 16
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax
	mov	QWORD PTR $T2[rbp-73], rax
	test	rax, rax
	je	$LN4@Getcat
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 373
	mov	rax, QWORD PTR [r14+8]
	test	rax, rax
	je	SHORT $LN12@Getcat
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 190
	mov	rdi, QWORD PTR [rax+40]
	test	rdi, rdi
	jne	SHORT $LN13@Getcat
	lea	rdi, QWORD PTR [rax+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 373
	jmp	SHORT $LN13@Getcat
$LN12@Getcat:
	lea	rdi, OFFSET FLAT:??_C@_00CNPNBAHC@@
$LN13@Getcat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 232
	xor	edx, edx
	lea	rcx, QWORD PTR $T1[rbp-73]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
	npad	1
; Line 140
	mov	QWORD PTR $T1[rbp-65], r15
	mov	BYTE PTR $T1[rbp-57], 0
	mov	QWORD PTR $T1[rbp-49], r15
	mov	BYTE PTR $T1[rbp-41], 0
	mov	QWORD PTR $T1[rbp-33], r15
	mov	WORD PTR $T1[rbp-25], r15w
	mov	QWORD PTR $T1[rbp-17], r15
	mov	WORD PTR $T1[rbp-9], r15w
	mov	QWORD PTR $T1[rbp-1], r15
	mov	BYTE PTR $T1[rbp+7], 0
	mov	QWORD PTR $T1[rbp+15], r15
	mov	BYTE PTR $T1[rbp+23], 0
; Line 235
	test	rdi, rdi
	je	$LN21@Getcat
; Line 236
	mov	rdx, rdi
	lea	rcx, QWORD PTR $T1[rbp-73]
	call	?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z ; std::_Locinfo::_Locinfo_ctor
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1215
	mov	edi, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 143
	mov	DWORD PTR [rbx+8], r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1235
	lea	rax, OFFSET FLAT:??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
	mov	QWORD PTR [rbx], rax
; Line 1215
	jmp	SHORT $LN5@Getcat
$LN4@Getcat:
	mov	rbx, r15
$LN5@Getcat:
	mov	QWORD PTR [rsi], rbx
	test	dil, 1
	je	SHORT $LN60@Getcat
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 257
	lea	rcx, QWORD PTR $T1[rbp-73]
	call	?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z ; std::_Locinfo::_Locinfo_dtor
; Line 203
	mov	rcx, QWORD PTR $T1[rbp+15]
	test	rcx, rcx
	je	SHORT $LN68@Getcat
; Line 207
	call	free
$LN68@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp+15], r15
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-1]
	test	rcx, rcx
	je	SHORT $LN75@Getcat
; Line 207
	call	free
$LN75@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-1], r15
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-17]
	test	rcx, rcx
	je	SHORT $LN82@Getcat
; Line 207
	call	free
$LN82@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-17], r15
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-33]
	test	rcx, rcx
	je	SHORT $LN89@Getcat
; Line 207
	call	free
$LN89@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-33], r15
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-49]
	test	rcx, rcx
	je	SHORT $LN96@Getcat
; Line 207
	call	free
$LN96@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-49], r15
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-65]
	test	rcx, rcx
	je	SHORT $LN103@Getcat
; Line 207
	call	free
$LN103@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-65], r15
; Line 258
	lea	rcx, QWORD PTR $T1[rbp-73]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
	npad	1
$LN60@Getcat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1218
	mov	eax, 4
; Line 1219
	lea	r11, QWORD PTR [rsp+144]
	mov	rbx, QWORD PTR [r11+40]
	mov	rsi, QWORD PTR [r11+48]
	mov	rdi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rbp
	ret	0
$LN21@Getcat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 240
	lea	rcx, OFFSET FLAT:??_C@_0BA@ELKIONDK@bad?5locale?5name@
	call	?_Xruntime_error@std@@YAXPEBD@Z		; std::_Xruntime_error
	int	3
$LN106@Getcat:
?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ppf$ = 176
$T2 = 176
$T3 = 176
_Ploc$ = 184
?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	edx, 16
	mov	rcx, QWORD PTR $T2[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ppf$ = 176
$T2 = 176
$T3 = 176
_Ploc$ = 184
?dtor$2@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$2
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
?dtor$2@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ppf$ = 176
$T2 = 176
$T3 = 176
_Ploc$ = 184
?dtor$3@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$3
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 8
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$3@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ppf$ = 176
$T2 = 176
$T3 = 176
_Ploc$ = 184
?dtor$4@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$4
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 24
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$4@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ppf$ = 176
$T2 = 176
$T3 = 176
_Ploc$ = 184
?dtor$5@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$5
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 40					; 00000028H
	jmp	??1?$_Yarn@_W@std@@QEAA@XZ		; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$5@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ppf$ = 176
$T2 = 176
$T3 = 176
_Ploc$ = 184
?dtor$6@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$6
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 56					; 00000038H
	jmp	??1?$_Yarn@_W@std@@QEAA@XZ		; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$6@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ppf$ = 176
$T2 = 176
$T3 = 176
_Ploc$ = 184
?dtor$7@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$7
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 72					; 00000048H
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$7@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ppf$ = 176
$T2 = 176
$T3 = 176
_Ploc$ = 184
?dtor$8@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$8
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 88					; 00000058H
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$8@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
_Loc$ = 80
_Psave_guard$1 = 80
_Lock$2 = 80
_Lock$3 = 88
_Psave$4 = 96
??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 435
$LN49:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 32					; 00000020H
	mov	rbp, rcx
; Line 436
	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$3[rsp]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
	npad	1
; Line 437
	mov	rsi, QWORD PTR ?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave
	mov	QWORD PTR _Psave$4[rsp], rsi
; Line 91
	mov	rdi, QWORD PTR ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
	test	rdi, rdi
	jne	SHORT $LN11@use_facet
; Line 92
	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$2[rsp]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
; Line 93
	cmp	QWORD PTR ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A, rdi ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
	jne	SHORT $LN12@use_facet
; Line 94
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	cdqe
	mov	QWORD PTR ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A, rax ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
$LN12@use_facet:
; Line 96
	lea	rcx, QWORD PTR _Lock$2[rsp]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
	mov	rdi, QWORD PTR ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
$LN11@use_facet:
; Line 377
	mov	rcx, QWORD PTR [rbp+8]
	lea	r14, QWORD PTR [rdi*8]
	cmp	rdi, QWORD PTR [rcx+24]
	jae	SHORT $LN19@use_facet
	mov	rax, QWORD PTR [rcx+16]
	mov	rbx, QWORD PTR [r14+rax]
; Line 378
	test	rbx, rbx
	jne	SHORT $LN39@use_facet
	jmp	SHORT $LN42@use_facet
$LN19@use_facet:
; Line 377
	xor	ebx, ebx
$LN42@use_facet:
; Line 378
	cmp	BYTE PTR [rcx+36], 0
	je	SHORT $LN14@use_facet
; Line 383
	call	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale
; Line 384
	cmp	rdi, QWORD PTR [rax+24]
	jae	SHORT $LN43@use_facet
; Line 385
	mov	rax, QWORD PTR [rax+16]
	mov	rbx, QWORD PTR [r14+rax]
$LN14@use_facet:
; Line 442
	test	rbx, rbx
	jne	SHORT $LN39@use_facet
$LN43@use_facet:
; Line 443
	test	rsi, rsi
	je	SHORT $LN3@use_facet
; Line 444
	mov	rbx, rsi
	jmp	SHORT $LN39@use_facet
$LN3@use_facet:
; Line 445
	mov	rdx, rbp
	lea	rcx, QWORD PTR _Psave$4[rsp]
	call	?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat
	cmp	rax, -1
	je	SHORT $LN47@use_facet
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1531
	mov	rbx, QWORD PTR _Psave$4[rsp]
	mov	QWORD PTR _Psave_guard$1[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 458
	mov	rcx, rbx
	call	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register
; Line 461
	mov	rcx, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rcx+8]
	mov	rcx, rbx
	call	rdx
; Line 462
	mov	QWORD PTR ?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB, rbx ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave
$LN39@use_facet:
; Line 469
	lea	rcx, QWORD PTR _Lock$3[rsp]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
	mov	rax, rbx
; Line 471
	add	rsp, 32					; 00000020H
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN47@use_facet:
; Line 447
	call	?_Throw_bad_cast@std@@YAXXZ		; std::_Throw_bad_cast
	npad	1
$LN44@use_facet:
??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Loc$ = 80
_Psave_guard$1 = 80
_Lock$2 = 80
_Lock$3 = 88
_Psave$4 = 96
?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Lock$3[rdx]
	jmp	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Loc$ = 80
_Psave_guard$1 = 80
_Lock$2 = 80
_Lock$3 = 88
_Psave$4 = 96
?dtor$1@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >'::`1'::dtor$1
	lea	rcx, QWORD PTR _Psave_guard$1[rdx]
	jmp	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
?dtor$1@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Arg$ = 56
_Count$ = 64
??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<2,char const *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 871
$LN32:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 881
	mov	rbx, 9223372036854775807		; 7fffffffffffffffH
	mov	rdi, r8
	mov	rbp, rdx
	mov	rsi, rcx
	cmp	r8, rbx
	ja	SHORT $LN30@Construct
; Line 889
	cmp	r8, 15
	ja	SHORT $LN3@Construct
; Line 890
	mov	QWORD PTR [rcx+16], r8
; Line 891
	mov	QWORD PTR [rcx+24], 15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rcx], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 908
	jmp	SHORT $LN23@Construct
$LN3@Construct:
; Line 2978
	mov	rax, rdi
	or	rax, 15
	cmp	rax, rbx
; Line 2979
	ja	SHORT $LN8@Construct
; Line 2987
	mov	ecx, 22
	mov	rbx, rax
	cmp	rax, rcx
	cmovb	rbx, rcx
$LN8@Construct:
; Line 825
	lea	rcx, QWORD PTR [rbx+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 924
	lea	r8, QWORD PTR [rdi+1]
	mov	QWORD PTR [rsi], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rdx, rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 915
	mov	QWORD PTR [rsi+16], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 916
	mov	QWORD PTR [rsi+24], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	call	memcpy
$LN23@Construct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 929
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN30@Construct:
; Line 882
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN28@Construct:
??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<2,char const *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Arg$ = 56
_Count$ = 64
??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 871
$LN32:
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H
; Line 881
	mov	rbp, 9223372036854775807		; 7fffffffffffffffH
	mov	rdi, r8
	mov	r14, rdx
	mov	rsi, rcx
	cmp	r8, rbp
	ja	$LN30@Construct
; Line 889
	cmp	r8, 15
	ja	SHORT $LN3@Construct
; Line 890
	mov	QWORD PTR [rcx+16], r8
; Line 891
	mov	QWORD PTR [rcx+24], 15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	call	memcpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 898
	mov	BYTE PTR [rdi+rsi], 0
; Line 908
	jmp	SHORT $LN1@Construct
$LN3@Construct:
; Line 2978
	mov	rax, rdi
	mov	QWORD PTR [rsp+48], rbx
	or	rax, 15
	cmp	rax, rbp
; Line 2979
	ja	SHORT $LN8@Construct
; Line 2987
	mov	ecx, 22
	mov	rbp, rax
	cmp	rax, rcx
	cmovb	rbp, rcx
$LN8@Construct:
; Line 825
	lea	rcx, QWORD PTR [rbp+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	r8, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 913
	mov	QWORD PTR [rsi], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rdx, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 915
	mov	QWORD PTR [rsi+16], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 916
	mov	QWORD PTR [rsi+24], rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	mov	rbx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	call	memcpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 922
	mov	BYTE PTR [rbx+rdi], 0
	mov	rbx, QWORD PTR [rsp+48]
$LN1@Construct:
; Line 929
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN30@Construct:
; Line 882
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN28@Construct:
??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z
_TEXT	SEGMENT
this$ = 48
_Arg$ = 56
_Count$ = 64
??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<0,char>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 871
$LN32:
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H
; Line 881
	mov	rbp, 9223372036854775807		; 7fffffffffffffffH
	movsx	r14d, dl
	mov	rdi, r8
	mov	rsi, rcx
	cmp	r8, rbp
	ja	$LN30@Construct
; Line 889
	cmp	r8, 15
	ja	SHORT $LN3@Construct
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 493
	mov	edx, r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 890
	mov	QWORD PTR [rcx+16], r8
; Line 891
	mov	QWORD PTR [rcx+24], 15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 493
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 895
	mov	BYTE PTR [rdi+rsi], 0
; Line 908
	jmp	SHORT $LN1@Construct
$LN3@Construct:
; Line 2978
	mov	rax, rdi
	mov	QWORD PTR [rsp+48], rbx
	or	rax, 15
	cmp	rax, rbp
; Line 2979
	ja	SHORT $LN8@Construct
; Line 2987
	mov	ecx, 22
	mov	rbp, rax
	cmp	rax, rcx
	cmovb	rbp, rcx
$LN8@Construct:
; Line 825
	lea	rcx, QWORD PTR [rbp+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 493
	mov	edx, r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 913
	mov	QWORD PTR [rsi], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 493
	mov	r8, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 915
	mov	QWORD PTR [rsi+16], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 493
	mov	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 916
	mov	QWORD PTR [rsi+24], rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	mov	rbx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 493
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 919
	mov	BYTE PTR [rbx+rdi], 0
	mov	rbx, QWORD PTR [rsp+48]
$LN1@Construct:
; Line 929
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN30@Construct:
; Line 882
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN28@Construct:
??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<0,char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 517
	xor	eax, eax
	xorps	xmm0, xmm0
; Line 493
	movups	XMMWORD PTR [rcx], xmm0
; Line 517
	mov	QWORD PTR [rcx+16], rax
; Line 518
	mov	QWORD PTR [rcx+24], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1531
	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
_Val1$ = 24
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 517
	xor	eax, eax
	xorps	xmm0, xmm0
; Line 493
	movups	XMMWORD PTR [rcx], xmm0
; Line 517
	mov	QWORD PTR [rcx+16], rax
; Line 518
	mov	QWORD PTR [rcx+24], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1536
	mov	rax, rcx
	ret	0
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::move<std::allocator<char> &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1513
	mov	rax, rcx
; Line 1514
	ret	0
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::move<std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Convert_size@_K_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 8
??$_Convert_size@_K_K@std@@YA_K_K@Z PROC		; std::_Convert_size<unsigned __int64,unsigned __int64>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1131
	mov	rax, rcx
; Line 1132
	ret	0
??$_Convert_size@_K_K@std@@YA_K_K@Z ENDP		; std::_Convert_size<unsigned __int64,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Val$ = 64
??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Resize<std::_Value_init_tag>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1589
$LN123:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	r14
	sub	rsp, 32					; 00000020H
; Line 1595
	mov	r8, QWORD PTR [rcx+8]
	mov	rbx, rdx
	mov	r9, QWORD PTR [rcx]
	mov	rdx, r8
	sub	rdx, r9
	mov	r10, 3243383573399481603		; 2d02d02d02d02d03H
	mov	rax, r10
	mov	r14, rcx
	imul	rdx
	mov	rsi, rdx
	sar	rsi, 7
	mov	rax, rsi
	shr	rax, 63					; 0000003fH
	add	rsi, rax
; Line 1596
	cmp	rbx, rsi
	jae	SHORT $LN2@Resize
; Line 1597
	imul	rax, rbx, 728				; 000002d8H
	add	rax, r9
; Line 1601
	mov	QWORD PTR [rcx+8], rax
; Line 1625
	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN2@Resize:
; Line 1605
	jbe	$LN3@Resize
; Line 1606
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, r10
	sub	rcx, r9
	imul	rcx
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
; Line 1607
	cmp	rbx, rdx
	jbe	$LN4@Resize
; Line 1553
	mov	r8, 25338934167183450			; 005a05a05a05a05aH
	cmp	rbx, r8
	ja	$LN120@Resize
; Line 2011
	mov	rcx, rdx
	mov	QWORD PTR [rsp+56], rdi
	shr	rcx, 1
	mov	rax, r8
	sub	rax, rcx
	cmp	rdx, rax
	jbe	$LN11@Resize
; Line 2012
	mov	rdi, r8
$LN107@Resize:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 122
	imul	rcx, rdi, 728				; 000002d8H
	mov	QWORD PTR [rsp+48], rbp
; Line 990
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1566
	imul	rcx, rsi, 728				; 000002d8H
; Line 1575
	mov	r8, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	mov	rbp, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1566
	add	rcx, rax
; Line 1575
	sub	r8, rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 2093
	je	SHORT $LN29@Resize
	xor	edx, edx
	npad	6
$LL30@Resize:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	mov	QWORD PTR [rcx], rdx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 47
	mov	BYTE PTR [rcx+8], dl
	mov	DWORD PTR [rcx+12], -1
	mov	WORD PTR [rcx+16], dx
	mov	QWORD PTR [rcx+24], rdx
	mov	BYTE PTR [rcx+32], dl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1845
	lea	rcx, QWORD PTR [rcx+728]
; Line 2093
	sub	r8, 1
	jne	SHORT $LL30@Resize
$LN29@Resize:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 4767
	mov	rdx, QWORD PTR [r14]
; Line 4751
	mov	rcx, rbp
; Line 4769
	mov	r8, QWORD PTR [r14+8]
	sub	r8, rdx
; Line 4751
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1585
	mov	r9, rdi
	mov	r8, rbx
	mov	rdx, rbp
	mov	rcx, r14
	call	?_Change_array@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXQEAUS_UNDO@@_K1@Z ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Change_array
	mov	rbp, QWORD PTR [rsp+48]
	mov	rdi, QWORD PTR [rsp+56]
$LN3@Resize:
; Line 1625
	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN11@Resize:
; Line 2015
	lea	rdi, QWORD PTR [rdx+rcx]
; Line 2017
	cmp	rdi, rbx
	jae	SHORT $LN12@Resize
; Line 2018
	mov	rdi, rbx
	jmp	$LN107@Resize
$LN12@Resize:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 117
	cmp	rdi, r8
	ja	SHORT $LN121@Resize
	jmp	$LN107@Resize
$LN4@Resize:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1618
	sub	rbx, rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 2093
	je	SHORT $LN82@Resize
	xor	edx, edx
	npad	11
$LL83@Resize:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	mov	QWORD PTR [r8], rdx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 47
	mov	BYTE PTR [r8+8], dl
	mov	DWORD PTR [r8+12], -1
	mov	WORD PTR [r8+16], dx
	mov	QWORD PTR [r8+24], rdx
	mov	BYTE PTR [r8+32], dl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1845
	add	r8, 728					; 000002d8H
; Line 2093
	sub	rbx, 1
	jne	SHORT $LL83@Resize
$LN82@Resize:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1625
	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	mov	QWORD PTR [r14+8], r8
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN120@Resize:
; Line 1554
	call	?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Xlength
	int	3
$LN121@Resize:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 118
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN118@Resize:
??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rcx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Pnavail
	mov	rax, QWORD PTR [rcx+88]
	movsxd	rax, DWORD PTR [rax]
; Line 262
	ret	0
$LN3@Pnavail:
; Line 261
	xor	eax, eax
	cdqe
; Line 262
	ret	0
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 256
	mov	rax, QWORD PTR [rcx+88]
	dec	DWORD PTR [rax]
; Line 257
	mov	rdx, QWORD PTR [rcx+64]
	mov	rax, QWORD PTR [rdx]
	lea	rcx, QWORD PTR [rax+1]
	mov	QWORD PTR [rdx], rcx
; Line 258
	ret	0
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
_Count$ = 24
?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::sputn, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 171
	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+72]
?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sputn
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::sputc, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rcx+64]
; Line 165
	movzx	r9d, dl
; Line 261
	mov	r10d, r9d
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@sputc
	mov	rax, QWORD PTR [rcx+88]
; Line 166
	cmp	DWORD PTR [rax], 0
	jle	SHORT $LN3@sputc
; Line 256
	dec	DWORD PTR [rax]
; Line 166
	mov	eax, r9d
; Line 257
	mov	rdx, QWORD PTR [rcx+64]
	mov	r8, QWORD PTR [rdx]
	lea	rcx, QWORD PTR [r8+1]
	mov	QWORD PTR [rdx], rcx
; Line 166
	mov	BYTE PTR [r8], r9b
; Line 167
	ret	0
$LN3@sputc:
; Line 166
	mov	rax, QWORD PTR [rcx]
	mov	edx, r10d
	rex_jmp	QWORD PTR [rax+24]
?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sputc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ
_TEXT	SEGMENT
this$ = 8
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::pubsync, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 121
	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+104]
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 123
	movzx	eax, BYTE PTR [rcx+8]
; Line 124
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 107
$LN14:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 111
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
; Line 116
	test	al, al
	jne	SHORT $LN2@sentry
; Line 117
	mov	rcx, QWORD PTR [rbx]
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
	npad	1
$LN2@sentry:
; Line 77
	mov	rdx, QWORD PTR [rbx]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [rcx+rdx+72]
; Line 78
	test	rcx, rcx
	je	SHORT $LN11@sentry
; Line 79
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN11@sentry:
; Line 119
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Ostr$ = 56
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 90
$LN18:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx
; Line 69
	mov	QWORD PTR [rcx], rdx
; Line 70
	mov	rax, QWORD PTR [rdx]
	movsxd	r8, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [r8+rdx+72]
; Line 71
	test	rcx, rcx
	je	SHORT $LN8@sentry
; Line 72
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	npad	1
$LN8@sentry:
; Line 91
	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	cmp	DWORD PTR [rcx+rbx+16], 0
	je	SHORT $LN2@sentry
; Line 92
	xor	al, al
; Line 93
	jmp	SHORT $LN1@sentry
$LN2@sentry:
; Line 96
	mov	rcx, QWORD PTR [rcx+rbx+80]
; Line 97
	test	rcx, rcx
	je	SHORT $LN4@sentry
	cmp	rcx, rbx
	je	SHORT $LN4@sentry
; Line 102
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
; Line 103
	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 206
	cmp	DWORD PTR [rcx+rbx+16], 0
	sete	al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 103
	jmp	SHORT $LN1@sentry
$LN4@sentry:
; Line 98
	mov	al, 1
$LN1@sentry:
; Line 104
	mov	BYTE PTR [rdi+8], al
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Ostr$ = 56
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 76
$LN7:
	sub	rsp, 40					; 00000028H
; Line 77
	mov	rdx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [rcx+rdx+72]
; Line 78
	test	rcx, rcx
	je	SHORT $LN2@Sentry_bas
; Line 79
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN2@Sentry_bas:
; Line 81
	add	rsp, 40					; 00000028H
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Ostr$ = 56
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 69
$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	QWORD PTR [rcx], rdx
	mov	rbx, rcx
; Line 70
	mov	rax, QWORD PTR [rdx]
	movsxd	r8, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [r8+rdx+72]
; Line 71
	test	rcx, rcx
	je	SHORT $LN4@Sentry_bas
; Line 72
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
$LN4@Sentry_bas:
; Line 74
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1531
	mov	QWORD PTR [rcx], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\memory
; Line 3370
	mov	rax, rcx
	ret	0
??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1539
	mov	rax, rcx
; Line 1540
	ret	0
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ
_TEXT	SEGMENT
this$ = 8
?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; Line 773
	mov	rax, QWORD PTR [rcx]
; Line 774
	mov	QWORD PTR [rcx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\memory
; Line 3466
	ret	0
?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\memory
; Line 3426
	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN7@unique_ptr
; Line 3309
	mov	rax, QWORD PTR [rcx]
	mov	edx, 1
	rex_jmp	QWORD PTR [rax]
$LN7@unique_ptr:
; Line 3438
	ret	0
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z PROC ; std::default_delete<std::_Facet_base>::operator(), COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\memory
; Line 3307
	mov	r8, rdx
; Line 3309
	test	rdx, rdx
	je	SHORT $LN3@operator
	mov	rax, QWORD PTR [rdx]
	mov	rcx, r8
	mov	edx, 1
	rex_jmp	QWORD PTR [rax]
$LN3@operator:
; Line 3310
	ret	0
??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z ENDP ; std::default_delete<std::_Facet_base>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Get_index@$0A@@id@locale@std@@QEAA_KXZ
_TEXT	SEGMENT
this$ = 48
_Lock$1 = 48
??$_Get_index@$0A@@id@locale@std@@QEAA_KXZ PROC		; std::locale::id::_Get_index<0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 90
$LN11:
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 91
	cmp	QWORD PTR [rcx], 0
	mov	rbx, rcx
	jne	SHORT $LN6@Get_index
; Line 92
	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$1[rsp]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
; Line 93
	cmp	QWORD PTR [rbx], 0
	jne	SHORT $LN3@Get_index
; Line 94
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	cdqe
	mov	QWORD PTR [rbx], rax
$LN3@Get_index:
; Line 96
	lea	rcx, QWORD PTR _Lock$1[rsp]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
; Line 98
	mov	rax, QWORD PTR [rbx]
; Line 99
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN6@Get_index:
; Line 98
	mov	rax, QWORD PTR [rcx]
; Line 99
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Get_index@$0A@@id@locale@std@@QEAA_KXZ ENDP		; std::locale::id::_Get_index<0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$min@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$min@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::min<unsigned __int64>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; Line 101
	mov	rax, QWORD PTR [rcx]
	cmp	QWORD PTR [rdx], rax
	cmovb	rcx, rdx
	mov	rax, rcx
; Line 102
	ret	0
??$min@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::min<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$initializer_list@H@std@@QEBAPEBHXZ
_TEXT	SEGMENT
this$ = 8
?end@?$initializer_list@H@std@@QEBAPEBHXZ PROC		; std::initializer_list<int>::end, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\initializer_list
; Line 41
	mov	rax, QWORD PTR [rcx+8]
; Line 42
	ret	0
?end@?$initializer_list@H@std@@QEBAPEBHXZ ENDP		; std::initializer_list<int>::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$initializer_list@H@std@@QEBAPEBHXZ
_TEXT	SEGMENT
this$ = 8
?begin@?$initializer_list@H@std@@QEBAPEBHXZ PROC	; std::initializer_list<int>::begin, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\initializer_list
; Line 37
	mov	rax, QWORD PTR [rcx]
; Line 38
	ret	0
?begin@?$initializer_list@H@std@@QEBAPEBHXZ ENDP	; std::initializer_list<int>::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$initializer_list@H@std@@QEAA@PEBH0@Z
_TEXT	SEGMENT
this$ = 8
_First_arg$ = 16
_Last_arg$ = 24
??0?$initializer_list@H@std@@QEAA@PEBH0@Z PROC		; std::initializer_list<int>::initializer_list<int>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\initializer_list
; Line 34
	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0?$initializer_list@H@std@@QEAA@PEBH0@Z ENDP		; std::initializer_list<int>::initializer_list<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_all_sliding_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
_TEXT	SEGMENT
pos$ = 48
list$ = 56
us$ = 64
?generate_all_sliding_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z PROC ; SlidingPieceOptimizations::generate_all_sliding_moves_optimized, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 207
$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	movzx	ebx, r8b
	mov	rdi, rdx
	mov	rsi, rcx
; Line 209
	call	?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; SlidingPieceOptimizations::generate_bishop_moves_optimized
; Line 212
	movzx	r8d, bl
	mov	rdx, rdi
	mov	rcx, rsi
	call	?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; SlidingPieceOptimizations::generate_rook_moves_optimized
; Line 215
	movzx	r8d, bl
	mov	rdx, rdi
	mov	rcx, rsi
; Line 216
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
; Line 215
	jmp	?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; SlidingPieceOptimizations::generate_queen_moves_optimized
?generate_all_sliding_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ENDP ; SlidingPieceOptimizations::generate_all_sliding_moves_optimized
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
$T3 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
$T8 = 120
$T9 = 128
$T10 = 136
$T11 = 144
$T12 = 152
$T13 = 160
$T14 = 168
$T15 = 176
$T16 = 184
$T17 = 192
pos$ = 272
$T18 = 272
list$ = 280
us$ = 288
tv1781 = 296
?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z PROC ; SlidingPieceOptimizations::generate_queen_moves_optimized, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 101
$LN519:
	mov	r11, rsp
	mov	BYTE PTR [r11+24], r8b
	push	rbp
	push	rbx
	push	r12
	lea	rbp, QWORD PTR [r11-95]
	sub	rsp, 240				; 000000f0H
	mov	rbx, rdx
	mov	r12, rcx
; Line 102
	movzx	edx, r8b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	imul	rax, rdx, 28
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 102
	movsxd	r9, DWORD PTR [rax+rcx+796]
; Line 105
	test	r9d, r9d
	je	$LN3@generate_q
; Line 107
	imul	rax, rdx, 280				; 00000118H
	mov	QWORD PTR [r11-40], r13
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	add	rax, rcx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 109
	mov	QWORD PTR $T18[rbp-169], r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	mov	QWORD PTR tv1781[rbp-169], rax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 109
	test	r9d, r9d
	jle	$LN516@generate_q
	mov	rcx, QWORD PTR $T18[rbp-169]
	xor	r9d, r9d
	mov	QWORD PTR [r11+16], rsi
	mov	r13d, r9d
	mov	QWORD PTR [r11-32], rdi
	mov	QWORD PTR [r11-48], r14
	mov	QWORD PTR [r11-56], r15
	mov	QWORD PTR $T17[rbp-169], r9
$LL4@generate_q:
; Line 110
	mov	r13d, DWORD PTR [rax+r13*4+416]
; Line 111
	cmp	r13d, -1
	je	$LN2@generate_q
; Line 36
	lea	r14d, DWORD PTR [r13+10]
	cmp	r14d, -1
	je	$LN29@generate_q
	movsxd	rdi, r14d
	lea	r15, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r12
	mov	esi, r14d
	sub	r15, r12
$LL26@generate_q:
	cmp	esi, 119				; 00000077H
	ja	$LN29@generate_q
	cmp	BYTE PTR [r15+rdi], 0
	je	$LN29@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN27@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, r14d
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r13d
	mov	DWORD PTR $T1[rbp-165], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rbp-169], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	r14d, 10
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rbp-169]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	esi, 10
	add	rdi, 10
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	esi, -1
	jne	SHORT $LL26@generate_q
	jmp	$LN29@generate_q
$LN27@generate_q:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN49@generate_q
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN50@generate_q
$LN49@generate_q:
	mov	al, 2
$LN50@generate_q:
; Line 37
	movzx	r8d, BYTE PTR us$[rbp-169]
	test	r8b, r8b
	jne	SHORT $LN57@generate_q
	mov	dl, 1
	jmp	SHORT $LN58@generate_q
$LN57@generate_q:
	cmp	r8b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN58@generate_q:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN29@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T2[rbp-165], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, r14d
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r13d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rbp-169], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T2[rbp-169]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
	xor	r9d, r9d
$LN29@generate_q:
; Line 36
	lea	esi, DWORD PTR [r13-10]
	cmp	esi, -1
	je	$LN77@generate_q
	movsxd	rdi, esi
	lea	r15, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r12
	mov	r14d, esi
	sub	r15, r12
$LL74@generate_q:
	cmp	r14d, 119				; 00000077H
	ja	$LN77@generate_q
	cmp	BYTE PTR [rdi+r15], 0
	je	$LN77@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN75@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, esi
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r13d
	mov	DWORD PTR $T3[rbp-165], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T3[rbp-169], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	esi, 10
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T3[rbp-169]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	r14d, 10
	sub	rdi, 10
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	esi, -1
	jne	SHORT $LL74@generate_q
	jmp	SHORT $LN77@generate_q
$LN75@generate_q:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN97@generate_q
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN98@generate_q
$LN97@generate_q:
	mov	al, 2
$LN98@generate_q:
; Line 37
	movzx	r8d, BYTE PTR us$[rbp-169]
	test	r8b, r8b
	jne	SHORT $LN105@generate_q
	mov	dl, 1
	jmp	SHORT $LN106@generate_q
$LN105@generate_q:
	cmp	r8b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN106@generate_q:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN77@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T4[rbp-165], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, esi
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r13d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T4[rbp-169], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T4[rbp-169]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN77@generate_q:
; Line 36
	lea	r14d, DWORD PTR [r13+1]
	cmp	r14d, -1
	je	$LN125@generate_q
	movsxd	rdi, r14d
	lea	r15, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r12
	sub	r15, r12
	xor	r9d, r9d
	mov	esi, r14d
	npad	2
$LL122@generate_q:
	cmp	esi, 119				; 00000077H
	ja	$LN125@generate_q
	cmp	BYTE PTR [r15+rdi], 0
	je	$LN125@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN123@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, r14d
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r13d
	mov	DWORD PTR $T5[rbp-165], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T5[rbp-169], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	inc	r14d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T5[rbp-169]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	inc	esi
	inc	rdi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	esi, -1
	jne	SHORT $LL122@generate_q
	jmp	SHORT $LN125@generate_q
$LN123@generate_q:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN145@generate_q
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN146@generate_q
$LN145@generate_q:
	mov	al, 2
$LN146@generate_q:
; Line 37
	movzx	r8d, BYTE PTR us$[rbp-169]
	test	r8b, r8b
	jne	SHORT $LN153@generate_q
	mov	dl, 1
	jmp	SHORT $LN154@generate_q
$LN153@generate_q:
	cmp	r8b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN154@generate_q:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN125@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T6[rbp-165], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, r14d
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r13d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T6[rbp-169], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T6[rbp-169]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN125@generate_q:
; Line 36
	lea	esi, DWORD PTR [r13-1]
	cmp	esi, -1
	je	$LN173@generate_q
	movsxd	rdi, esi
	lea	r15, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r12
	sub	r15, r12
	xor	r9d, r9d
	mov	r14d, esi
	npad	8
$LL170@generate_q:
	cmp	r14d, 119				; 00000077H
	ja	$LN173@generate_q
	cmp	BYTE PTR [r15+rdi], 0
	je	$LN173@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN171@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, esi
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r13d
	mov	DWORD PTR $T7[rbp-165], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T7[rbp-169], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	dec	esi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T7[rbp-169]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	dec	r14d
	dec	rdi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	esi, -1
	jne	SHORT $LL170@generate_q
	jmp	SHORT $LN173@generate_q
$LN171@generate_q:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN193@generate_q
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN194@generate_q
$LN193@generate_q:
	mov	al, 2
$LN194@generate_q:
; Line 37
	movzx	r8d, BYTE PTR us$[rbp-169]
	test	r8b, r8b
	jne	SHORT $LN201@generate_q
	mov	dl, 1
	jmp	SHORT $LN202@generate_q
$LN201@generate_q:
	cmp	r8b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN202@generate_q:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN173@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T8[rbp-165], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, esi
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r13d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T8[rbp-169], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T8[rbp-169]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN173@generate_q:
; Line 36
	lea	r14d, DWORD PTR [r13+11]
	cmp	r14d, -1
	je	$LN221@generate_q
	movsxd	rdi, r14d
	lea	r15, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r12
	sub	r15, r12
	xor	r9d, r9d
	mov	esi, r14d
	npad	8
$LL218@generate_q:
	cmp	esi, 119				; 00000077H
	ja	$LN221@generate_q
	cmp	BYTE PTR [r15+rdi], 0
	je	$LN221@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN219@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, r14d
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r13d
	mov	DWORD PTR $T9[rbp-165], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T9[rbp-169], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	r14d, 11
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T9[rbp-169]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	esi, 11
	add	rdi, 11
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	esi, -1
	jne	SHORT $LL218@generate_q
	jmp	SHORT $LN221@generate_q
$LN219@generate_q:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN241@generate_q
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN242@generate_q
$LN241@generate_q:
	mov	al, 2
$LN242@generate_q:
; Line 37
	movzx	r8d, BYTE PTR us$[rbp-169]
	test	r8b, r8b
	jne	SHORT $LN249@generate_q
	mov	dl, 1
	jmp	SHORT $LN250@generate_q
$LN249@generate_q:
	cmp	r8b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN250@generate_q:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN221@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T10[rbp-165], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, r14d
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r13d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T10[rbp-169], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T10[rbp-169]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN221@generate_q:
; Line 36
	lea	r14d, DWORD PTR [r13+9]
	cmp	r14d, -1
	je	$LN269@generate_q
	movsxd	rdi, r14d
	lea	r15, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r12
	sub	r15, r12
	xor	r9d, r9d
	mov	esi, r14d
	npad	4
$LL266@generate_q:
	cmp	esi, 119				; 00000077H
	ja	$LN269@generate_q
	cmp	BYTE PTR [r15+rdi], 0
	je	$LN269@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN267@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, r14d
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r13d
	mov	DWORD PTR $T11[rbp-165], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T11[rbp-169], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	r14d, 9
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T11[rbp-169]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	esi, 9
	add	rdi, 9
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	esi, -1
	jne	SHORT $LL266@generate_q
	jmp	SHORT $LN269@generate_q
$LN267@generate_q:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN289@generate_q
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN290@generate_q
$LN289@generate_q:
	mov	al, 2
$LN290@generate_q:
; Line 37
	movzx	r8d, BYTE PTR us$[rbp-169]
	test	r8b, r8b
	jne	SHORT $LN297@generate_q
	mov	dl, 1
	jmp	SHORT $LN298@generate_q
$LN297@generate_q:
	cmp	r8b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN298@generate_q:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN269@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T12[rbp-165], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, r14d
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r13d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T12[rbp-169], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T12[rbp-169]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN269@generate_q:
; Line 36
	lea	esi, DWORD PTR [r13-9]
	cmp	esi, -1
	je	$LN317@generate_q
	movsxd	rdi, esi
	lea	r15, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r12
	sub	r15, r12
	xor	r9d, r9d
	mov	r14d, esi
	npad	5
$LL314@generate_q:
	cmp	r14d, 119				; 00000077H
	ja	$LN317@generate_q
	cmp	BYTE PTR [r15+rdi], 0
	je	$LN317@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN315@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, esi
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r13d
	mov	DWORD PTR $T13[rbp-165], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T13[rbp-169], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	esi, 9
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T13[rbp-169]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	r14d, 9
	sub	rdi, 9
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	esi, -1
	jne	SHORT $LL314@generate_q
	jmp	SHORT $LN317@generate_q
$LN315@generate_q:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN337@generate_q
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN338@generate_q
$LN337@generate_q:
	mov	al, 2
$LN338@generate_q:
; Line 37
	movzx	r8d, BYTE PTR us$[rbp-169]
	test	r8b, r8b
	jne	SHORT $LN345@generate_q
	mov	dl, 1
	jmp	SHORT $LN346@generate_q
$LN345@generate_q:
	cmp	r8b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN346@generate_q:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN317@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T14[rbp-165], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, esi
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r13d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T14[rbp-169], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T14[rbp-169]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN317@generate_q:
; Line 36
	lea	esi, DWORD PTR [r13-11]
	cmp	esi, -1
	je	$LN454@generate_q
	movsxd	rdi, esi
	lea	r15, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r12
	sub	r15, r12
	xor	r9d, r9d
	mov	r14d, esi
	npad	6
$LL362@generate_q:
	cmp	r14d, 119				; 00000077H
	ja	$LN455@generate_q
	cmp	BYTE PTR [r15+rdi], 0
	je	$LN455@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN363@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, esi
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r13d
	mov	DWORD PTR $T15[rbp-165], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T15[rbp-169], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	esi, 11
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T15[rbp-169]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	r14d, 11
	sub	rdi, 11
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	esi, -1
	jne	SHORT $LL362@generate_q
	jmp	SHORT $LN455@generate_q
$LN363@generate_q:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN385@generate_q
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN386@generate_q
$LN385@generate_q:
	mov	al, 2
$LN386@generate_q:
; Line 37
	movzx	r8d, BYTE PTR us$[rbp-169]
	test	r8b, r8b
	jne	SHORT $LN393@generate_q
	mov	dl, 1
	jmp	SHORT $LN394@generate_q
$LN393@generate_q:
	cmp	r8b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN394@generate_q:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN455@generate_q
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T16[rbp-165], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, esi
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r13d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T16[rbp-169], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T16[rbp-169]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN454@generate_q:
; Line 109
	xor	r9d, r9d
$LN455@generate_q:
	mov	rcx, QWORD PTR $T18[rbp-169]
	mov	rax, QWORD PTR tv1781[rbp-169]
$LN2@generate_q:
	mov	r13, QWORD PTR $T17[rbp-169]
	inc	r13
	mov	QWORD PTR $T17[rbp-169], r13
	cmp	r13, rcx
	jl	$LL4@generate_q
	mov	r15, QWORD PTR [rsp+208]
	mov	r14, QWORD PTR [rsp+216]
	mov	rdi, QWORD PTR [rsp+232]
	mov	rsi, QWORD PTR [rsp+280]
$LN516@generate_q:
	mov	r13, QWORD PTR [rsp+224]
$LN3@generate_q:
; Line 126
	add	rsp, 240				; 000000f0H
	pop	r12
	pop	rbx
	pop	rbp
	ret	0
?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ENDP ; SlidingPieceOptimizations::generate_queen_moves_optimized
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$generate_sliding_ray@$0?0@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
pos$ = 128
list$ = 136
us$ = 144
from$ = 152
??$generate_sliding_ray@$0?0@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z PROC ; SlidingPieceOptimizations::generate_sliding_ray<-1>, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 35
$LN66:
	mov	rax, rsp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r15
	sub	rsp, 80					; 00000050H
; Line 36
	lea	edi, DWORD PTR [r9-1]
	mov	r15d, r9d
	movzx	r12d, r8b
	mov	rsi, rdx
	mov	r13, rcx
	cmp	edi, -1
	je	$LN7@generate_s
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rbp
	mov	ebp, edi
	mov	QWORD PTR [rax+24], r14
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	movsxd	rbx, edi
	sub	r14, rcx
	add	rbx, rcx
	xor	r9d, r9d
	npad	6
$LL4@generate_s:
	cmp	ebp, 119				; 00000077H
	ja	$LN63@generate_s
	cmp	BYTE PTR [r14+rbx], 0
	je	$LN63@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rbx]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN5@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, edi
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r15d
	mov	DWORD PTR $T1[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rsi+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	dec	edi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	dec	ebp
	dec	rbx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rsi+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rsi+2048]
	mov	DWORD PTR [rsi+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rsi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	edi, -1
	jne	SHORT $LL4@generate_s
	jmp	SHORT $LN63@generate_s
$LN5@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN27@generate_s
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN28@generate_s
$LN27@generate_s:
	mov	al, 2
$LN28@generate_s:
; Line 37
	test	r12b, r12b
	jne	SHORT $LN35@generate_s
	mov	dl, 1
	jmp	SHORT $LN36@generate_s
$LN35@generate_s:
	cmp	r12b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN36@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN63@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T2[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, edi
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r13
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rsi
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN63@generate_s:
	mov	rbp, QWORD PTR [rsp+136]
	mov	rbx, QWORD PTR [rsp+128]
	mov	r14, QWORD PTR [rsp+144]
$LN7@generate_s:
; Line 48
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
??$generate_sliding_ray@$0?0@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ENDP ; SlidingPieceOptimizations::generate_sliding_ray<-1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$generate_sliding_ray@$00@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
pos$ = 128
list$ = 136
us$ = 144
from$ = 152
??$generate_sliding_ray@$00@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z PROC ; SlidingPieceOptimizations::generate_sliding_ray<1>, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 35
$LN66:
	mov	rax, rsp
	push	rbp
	push	rsi
	push	r12
	push	r13
	push	r15
	sub	rsp, 80					; 00000050H
; Line 36
	lea	ebp, DWORD PTR [r9+1]
	mov	r15d, r9d
	movzx	r12d, r8b
	mov	rsi, rdx
	mov	r13, rcx
	cmp	ebp, -1
	je	$LN7@generate_s
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rdi
	mov	edi, ebp
	mov	QWORD PTR [rax+24], r14
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	movsxd	rbx, ebp
	sub	r14, rcx
	add	rbx, rcx
	xor	r9d, r9d
	npad	6
$LL4@generate_s:
	cmp	edi, 119				; 00000077H
	ja	$LN63@generate_s
	cmp	BYTE PTR [r14+rbx], 0
	je	$LN63@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rbx]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN5@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, ebp
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r15d
	mov	DWORD PTR $T1[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rsi+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	inc	ebp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	inc	edi
	inc	rbx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rsi+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rsi+2048]
	mov	DWORD PTR [rsi+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rsi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	edi, -1
	jne	SHORT $LL4@generate_s
	jmp	SHORT $LN63@generate_s
$LN5@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN27@generate_s
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN28@generate_s
$LN27@generate_s:
	mov	al, 2
$LN28@generate_s:
; Line 37
	test	r12b, r12b
	jne	SHORT $LN35@generate_s
	mov	dl, 1
	jmp	SHORT $LN36@generate_s
$LN35@generate_s:
	cmp	r12b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN36@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN63@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T2[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, ebp
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r13
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rsi
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN63@generate_s:
	mov	rdi, QWORD PTR [rsp+136]
	mov	rbx, QWORD PTR [rsp+128]
	mov	r14, QWORD PTR [rsp+144]
$LN7@generate_s:
; Line 48
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r13
	pop	r12
	pop	rsi
	pop	rbp
	ret	0
??$generate_sliding_ray@$00@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ENDP ; SlidingPieceOptimizations::generate_sliding_ray<1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$generate_sliding_ray@$0?9@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
pos$ = 128
list$ = 136
us$ = 144
from$ = 152
??$generate_sliding_ray@$0?9@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z PROC ; SlidingPieceOptimizations::generate_sliding_ray<-10>, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 35
$LN66:
	mov	rax, rsp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r15
	sub	rsp, 80					; 00000050H
; Line 36
	lea	edi, DWORD PTR [r9-10]
	mov	r15d, r9d
	movzx	r12d, r8b
	mov	rsi, rdx
	mov	r13, rcx
	cmp	edi, -1
	je	$LN7@generate_s
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rbp
	mov	ebp, edi
	mov	QWORD PTR [rax+24], r14
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	movsxd	rbx, edi
	sub	r14, rcx
	add	rbx, rcx
	xor	r9d, r9d
	npad	6
$LL4@generate_s:
	cmp	ebp, 119				; 00000077H
	ja	$LN63@generate_s
	cmp	BYTE PTR [r14+rbx], 0
	je	$LN63@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rbx]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN5@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, edi
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r15d
	mov	DWORD PTR $T1[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rsi+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	edi, 10
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	ebp, 10
	sub	rbx, 10
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rsi+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rsi+2048]
	mov	DWORD PTR [rsi+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rsi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	edi, -1
	jne	SHORT $LL4@generate_s
	jmp	SHORT $LN63@generate_s
$LN5@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN27@generate_s
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN28@generate_s
$LN27@generate_s:
	mov	al, 2
$LN28@generate_s:
; Line 37
	test	r12b, r12b
	jne	SHORT $LN35@generate_s
	mov	dl, 1
	jmp	SHORT $LN36@generate_s
$LN35@generate_s:
	cmp	r12b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN36@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN63@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T2[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, edi
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r13
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rsi
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN63@generate_s:
	mov	rbp, QWORD PTR [rsp+136]
	mov	rbx, QWORD PTR [rsp+128]
	mov	r14, QWORD PTR [rsp+144]
$LN7@generate_s:
; Line 48
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
??$generate_sliding_ray@$0?9@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ENDP ; SlidingPieceOptimizations::generate_sliding_ray<-10>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$generate_sliding_ray@$09@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
pos$ = 128
list$ = 136
us$ = 144
from$ = 152
??$generate_sliding_ray@$09@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z PROC ; SlidingPieceOptimizations::generate_sliding_ray<10>, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 35
$LN66:
	mov	rax, rsp
	push	rbp
	push	rsi
	push	r12
	push	r13
	push	r15
	sub	rsp, 80					; 00000050H
; Line 36
	lea	ebp, DWORD PTR [r9+10]
	mov	r15d, r9d
	movzx	r12d, r8b
	mov	rsi, rdx
	mov	r13, rcx
	cmp	ebp, -1
	je	$LN7@generate_s
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rdi
	mov	edi, ebp
	mov	QWORD PTR [rax+24], r14
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	movsxd	rbx, ebp
	sub	r14, rcx
	add	rbx, rcx
	xor	r9d, r9d
	npad	6
$LL4@generate_s:
	cmp	edi, 119				; 00000077H
	ja	$LN63@generate_s
	cmp	BYTE PTR [r14+rbx], 0
	je	$LN63@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rbx]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN5@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, ebp
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r15d
	mov	DWORD PTR $T1[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rsi+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	ebp, 10
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	edi, 10
	add	rbx, 10
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rsi+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rsi+2048]
	mov	DWORD PTR [rsi+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rsi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	edi, -1
	jne	SHORT $LL4@generate_s
	jmp	SHORT $LN63@generate_s
$LN5@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN27@generate_s
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN28@generate_s
$LN27@generate_s:
	mov	al, 2
$LN28@generate_s:
; Line 37
	test	r12b, r12b
	jne	SHORT $LN35@generate_s
	mov	dl, 1
	jmp	SHORT $LN36@generate_s
$LN35@generate_s:
	cmp	r12b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN36@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN63@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T2[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, ebp
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r13
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rsi
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN63@generate_s:
	mov	rdi, QWORD PTR [rsp+136]
	mov	rbx, QWORD PTR [rsp+128]
	mov	r14, QWORD PTR [rsp+144]
$LN7@generate_s:
; Line 48
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r13
	pop	r12
	pop	rsi
	pop	rbp
	ret	0
??$generate_sliding_ray@$09@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ENDP ; SlidingPieceOptimizations::generate_sliding_ray<10>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
$T3 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
$T8 = 120
$T9 = 128
pos$ = 208
tv995 = 208
list$ = 216
us$ = 224
tv1009 = 232
?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z PROC ; SlidingPieceOptimizations::generate_rook_moves_optimized, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 77
$LN279:
	mov	r11, rsp
	push	rbx
	push	r12
	push	r13
	sub	rsp, 176				; 000000b0H
	movzx	r13d, r8b
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	imul	rax, r13, 28
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 77
	mov	r12, rcx
; Line 78
	mov	edx, r13d
	movsxd	r9, DWORD PTR [rax+rcx+792]
; Line 81
	test	r9d, r9d
	je	$LN3@generate_r
; Line 83
	imul	rax, rdx, 280				; 00000118H
	mov	QWORD PTR [r11-56], r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	add	rax, rcx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 85
	mov	QWORD PTR tv995[rsp], r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	mov	QWORD PTR tv1009[rsp], rax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 85
	test	r9d, r9d
	jle	$LN276@generate_r
	mov	rcx, QWORD PTR tv995[rsp]
	xor	r9d, r9d
	mov	QWORD PTR [r11+16], rbp
	mov	r15d, r9d
	mov	QWORD PTR [r11-32], rsi
	mov	QWORD PTR [r11-40], rdi
	mov	QWORD PTR [r11-48], r14
	mov	QWORD PTR $T9[rsp], r9
	npad	2
$LL4@generate_r:
; Line 86
	mov	r15d, DWORD PTR [rax+r15*4+376]
; Line 87
	cmp	r15d, -1
	je	$LN2@generate_r
; Line 36
	lea	ebp, DWORD PTR [r15+10]
	cmp	ebp, -1
	je	$LN29@generate_r
	movsxd	rdi, ebp
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r12
	mov	esi, ebp
	sub	r14, r12
$LL26@generate_r:
	cmp	esi, 119				; 00000077H
	ja	$LN29@generate_r
	cmp	BYTE PTR [rdi+r14], 0
	je	$LN29@generate_r
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN27@generate_r
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, ebp
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r15d
	mov	DWORD PTR $T1[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	ebp, 10
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	esi, 10
	add	rdi, 10
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	esi, -1
	jne	SHORT $LL26@generate_r
	jmp	SHORT $LN29@generate_r
$LN27@generate_r:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN49@generate_r
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN50@generate_r
$LN49@generate_r:
	mov	al, 2
$LN50@generate_r:
; Line 37
	test	r13b, r13b
	jne	SHORT $LN57@generate_r
	mov	dl, 1
	jmp	SHORT $LN58@generate_r
$LN57@generate_r:
	cmp	r13b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN58@generate_r:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN29@generate_r
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T2[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, ebp
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
	xor	r9d, r9d
$LN29@generate_r:
; Line 36
	lea	esi, DWORD PTR [r15-10]
	cmp	esi, -1
	je	$LN77@generate_r
	movsxd	rdi, esi
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r12
	mov	ebp, esi
	sub	r14, r12
	npad	7
$LL74@generate_r:
	cmp	ebp, 119				; 00000077H
	ja	$LN77@generate_r
	cmp	BYTE PTR [r14+rdi], 0
	je	$LN77@generate_r
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN75@generate_r
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, esi
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r15d
	mov	DWORD PTR $T3[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T3[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	esi, 10
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T3[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	ebp, 10
	sub	rdi, 10
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	esi, -1
	jne	SHORT $LL74@generate_r
	jmp	SHORT $LN77@generate_r
$LN75@generate_r:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN97@generate_r
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN98@generate_r
$LN97@generate_r:
	mov	al, 2
$LN98@generate_r:
; Line 37
	test	r13b, r13b
	jne	SHORT $LN105@generate_r
	mov	dl, 1
	jmp	SHORT $LN106@generate_r
$LN105@generate_r:
	cmp	r13b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN106@generate_r:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN77@generate_r
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T4[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, esi
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T4[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN77@generate_r:
; Line 36
	lea	ebp, DWORD PTR [r15+1]
	cmp	ebp, -1
	je	$LN125@generate_r
	movsxd	rdi, ebp
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r12
	sub	r14, r12
	xor	r9d, r9d
	mov	esi, ebp
	npad	8
$LL122@generate_r:
	cmp	esi, 119				; 00000077H
	ja	$LN125@generate_r
	cmp	BYTE PTR [r14+rdi], 0
	je	$LN125@generate_r
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN123@generate_r
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, ebp
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r15d
	mov	DWORD PTR $T5[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T5[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	inc	ebp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T5[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	inc	esi
	inc	rdi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	esi, -1
	jne	SHORT $LL122@generate_r
	jmp	SHORT $LN125@generate_r
$LN123@generate_r:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN145@generate_r
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN146@generate_r
$LN145@generate_r:
	mov	al, 2
$LN146@generate_r:
; Line 37
	test	r13b, r13b
	jne	SHORT $LN153@generate_r
	mov	dl, 1
	jmp	SHORT $LN154@generate_r
$LN153@generate_r:
	cmp	r13b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN154@generate_r:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN125@generate_r
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T6[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, ebp
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T6[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T6[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN125@generate_r:
; Line 36
	lea	esi, DWORD PTR [r15-1]
	cmp	esi, -1
	je	$LN242@generate_r
	movsxd	rdi, esi
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r12
	sub	r14, r12
	xor	r9d, r9d
	mov	ebp, esi
$LL170@generate_r:
	cmp	ebp, 119				; 00000077H
	ja	$LN243@generate_r
	cmp	BYTE PTR [r14+rdi], 0
	je	$LN243@generate_r
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN171@generate_r
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, esi
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r15d
	mov	DWORD PTR $T7[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T7[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	dec	esi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T7[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	dec	ebp
	dec	rdi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	esi, -1
	jne	SHORT $LL170@generate_r
	jmp	SHORT $LN243@generate_r
$LN171@generate_r:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN193@generate_r
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN194@generate_r
$LN193@generate_r:
	mov	al, 2
$LN194@generate_r:
; Line 37
	test	r13b, r13b
	jne	SHORT $LN201@generate_r
	mov	dl, 1
	jmp	SHORT $LN202@generate_r
$LN201@generate_r:
	cmp	r13b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN202@generate_r:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN243@generate_r
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T8[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, esi
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T8[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T8[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN242@generate_r:
; Line 85
	xor	r9d, r9d
$LN243@generate_r:
	mov	rcx, QWORD PTR tv995[rsp]
	mov	rax, QWORD PTR tv1009[rsp]
$LN2@generate_r:
	mov	r15, QWORD PTR $T9[rsp]
	inc	r15
	mov	QWORD PTR $T9[rsp], r15
	cmp	r15, rcx
	jl	$LL4@generate_r
	mov	r14, QWORD PTR [rsp+152]
	mov	rdi, QWORD PTR [rsp+160]
	mov	rsi, QWORD PTR [rsp+168]
	mov	rbp, QWORD PTR [rsp+216]
$LN276@generate_r:
	mov	r15, QWORD PTR [rsp+144]
$LN3@generate_r:
; Line 95
	add	rsp, 176				; 000000b0H
	pop	r13
	pop	r12
	pop	rbx
	ret	0
?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ENDP ; SlidingPieceOptimizations::generate_rook_moves_optimized
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$generate_sliding_ray@$0?L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
pos$ = 128
list$ = 136
us$ = 144
from$ = 152
??$generate_sliding_ray@$0?L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z PROC ; SlidingPieceOptimizations::generate_sliding_ray<-11>, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 35
$LN66:
	mov	rax, rsp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r15
	sub	rsp, 80					; 00000050H
; Line 36
	lea	edi, DWORD PTR [r9-11]
	mov	r15d, r9d
	movzx	r12d, r8b
	mov	rsi, rdx
	mov	r13, rcx
	cmp	edi, -1
	je	$LN7@generate_s
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rbp
	mov	ebp, edi
	mov	QWORD PTR [rax+24], r14
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	movsxd	rbx, edi
	sub	r14, rcx
	add	rbx, rcx
	xor	r9d, r9d
	npad	6
$LL4@generate_s:
	cmp	ebp, 119				; 00000077H
	ja	$LN63@generate_s
	cmp	BYTE PTR [r14+rbx], 0
	je	$LN63@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rbx]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN5@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, edi
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r15d
	mov	DWORD PTR $T1[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rsi+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	edi, 11
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	ebp, 11
	sub	rbx, 11
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rsi+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rsi+2048]
	mov	DWORD PTR [rsi+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rsi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	edi, -1
	jne	SHORT $LL4@generate_s
	jmp	SHORT $LN63@generate_s
$LN5@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN27@generate_s
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN28@generate_s
$LN27@generate_s:
	mov	al, 2
$LN28@generate_s:
; Line 37
	test	r12b, r12b
	jne	SHORT $LN35@generate_s
	mov	dl, 1
	jmp	SHORT $LN36@generate_s
$LN35@generate_s:
	cmp	r12b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN36@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN63@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T2[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, edi
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r13
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rsi
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN63@generate_s:
	mov	rbp, QWORD PTR [rsp+136]
	mov	rbx, QWORD PTR [rsp+128]
	mov	r14, QWORD PTR [rsp+144]
$LN7@generate_s:
; Line 48
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
??$generate_sliding_ray@$0?L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ENDP ; SlidingPieceOptimizations::generate_sliding_ray<-11>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$generate_sliding_ray@$0?8@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
pos$ = 128
list$ = 136
us$ = 144
from$ = 152
??$generate_sliding_ray@$0?8@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z PROC ; SlidingPieceOptimizations::generate_sliding_ray<-9>, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 35
$LN66:
	mov	rax, rsp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r15
	sub	rsp, 80					; 00000050H
; Line 36
	lea	edi, DWORD PTR [r9-9]
	mov	r15d, r9d
	movzx	r12d, r8b
	mov	rsi, rdx
	mov	r13, rcx
	cmp	edi, -1
	je	$LN7@generate_s
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rbp
	mov	ebp, edi
	mov	QWORD PTR [rax+24], r14
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	movsxd	rbx, edi
	sub	r14, rcx
	add	rbx, rcx
	xor	r9d, r9d
	npad	6
$LL4@generate_s:
	cmp	ebp, 119				; 00000077H
	ja	$LN63@generate_s
	cmp	BYTE PTR [r14+rbx], 0
	je	$LN63@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rbx]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN5@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, edi
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r15d
	mov	DWORD PTR $T1[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rsi+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	edi, 9
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	ebp, 9
	sub	rbx, 9
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rsi+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rsi+2048]
	mov	DWORD PTR [rsi+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rsi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	edi, -1
	jne	SHORT $LL4@generate_s
	jmp	SHORT $LN63@generate_s
$LN5@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN27@generate_s
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN28@generate_s
$LN27@generate_s:
	mov	al, 2
$LN28@generate_s:
; Line 37
	test	r12b, r12b
	jne	SHORT $LN35@generate_s
	mov	dl, 1
	jmp	SHORT $LN36@generate_s
$LN35@generate_s:
	cmp	r12b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN36@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN63@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T2[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, edi
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r13
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rsi
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN63@generate_s:
	mov	rbp, QWORD PTR [rsp+136]
	mov	rbx, QWORD PTR [rsp+128]
	mov	r14, QWORD PTR [rsp+144]
$LN7@generate_s:
; Line 48
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
??$generate_sliding_ray@$0?8@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ENDP ; SlidingPieceOptimizations::generate_sliding_ray<-9>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$generate_sliding_ray@$08@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
pos$ = 128
list$ = 136
us$ = 144
from$ = 152
??$generate_sliding_ray@$08@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z PROC ; SlidingPieceOptimizations::generate_sliding_ray<9>, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 35
$LN66:
	mov	rax, rsp
	push	rbp
	push	rsi
	push	r12
	push	r13
	push	r15
	sub	rsp, 80					; 00000050H
; Line 36
	lea	ebp, DWORD PTR [r9+9]
	mov	r15d, r9d
	movzx	r12d, r8b
	mov	rsi, rdx
	mov	r13, rcx
	cmp	ebp, -1
	je	$LN7@generate_s
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rdi
	mov	edi, ebp
	mov	QWORD PTR [rax+24], r14
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	movsxd	rbx, ebp
	sub	r14, rcx
	add	rbx, rcx
	xor	r9d, r9d
	npad	6
$LL4@generate_s:
	cmp	edi, 119				; 00000077H
	ja	$LN63@generate_s
	cmp	BYTE PTR [r14+rbx], 0
	je	$LN63@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rbx]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN5@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, ebp
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r15d
	mov	DWORD PTR $T1[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rsi+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	ebp, 9
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	edi, 9
	add	rbx, 9
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rsi+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rsi+2048]
	mov	DWORD PTR [rsi+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rsi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	edi, -1
	jne	SHORT $LL4@generate_s
	jmp	SHORT $LN63@generate_s
$LN5@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN27@generate_s
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN28@generate_s
$LN27@generate_s:
	mov	al, 2
$LN28@generate_s:
; Line 37
	test	r12b, r12b
	jne	SHORT $LN35@generate_s
	mov	dl, 1
	jmp	SHORT $LN36@generate_s
$LN35@generate_s:
	cmp	r12b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN36@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN63@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T2[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, ebp
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r13
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rsi
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN63@generate_s:
	mov	rdi, QWORD PTR [rsp+136]
	mov	rbx, QWORD PTR [rsp+128]
	mov	r14, QWORD PTR [rsp+144]
$LN7@generate_s:
; Line 48
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r13
	pop	r12
	pop	rsi
	pop	rbp
	ret	0
??$generate_sliding_ray@$08@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ENDP ; SlidingPieceOptimizations::generate_sliding_ray<9>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$generate_sliding_ray@$0L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
pos$ = 128
list$ = 136
us$ = 144
from$ = 152
??$generate_sliding_ray@$0L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z PROC ; SlidingPieceOptimizations::generate_sliding_ray<11>, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 35
$LN66:
	mov	rax, rsp
	push	rbp
	push	rsi
	push	r12
	push	r13
	push	r15
	sub	rsp, 80					; 00000050H
; Line 36
	lea	ebp, DWORD PTR [r9+11]
	mov	r15d, r9d
	movzx	r12d, r8b
	mov	rsi, rdx
	mov	r13, rcx
	cmp	ebp, -1
	je	$LN7@generate_s
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rdi
	mov	edi, ebp
	mov	QWORD PTR [rax+24], r14
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	movsxd	rbx, ebp
	sub	r14, rcx
	add	rbx, rcx
	xor	r9d, r9d
	npad	6
$LL4@generate_s:
	cmp	edi, 119				; 00000077H
	ja	$LN63@generate_s
	cmp	BYTE PTR [r14+rbx], 0
	je	$LN63@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rbx]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN5@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, ebp
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r15d
	mov	DWORD PTR $T1[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rsi+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	ebp, 11
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	edi, 11
	add	rbx, 11
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rsi+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rsi+2048]
	mov	DWORD PTR [rsi+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rsi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	edi, -1
	jne	SHORT $LL4@generate_s
	jmp	SHORT $LN63@generate_s
$LN5@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN27@generate_s
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN28@generate_s
$LN27@generate_s:
	mov	al, 2
$LN28@generate_s:
; Line 37
	test	r12b, r12b
	jne	SHORT $LN35@generate_s
	mov	dl, 1
	jmp	SHORT $LN36@generate_s
$LN35@generate_s:
	cmp	r12b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN36@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN63@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T2[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, ebp
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r13
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rsi
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN63@generate_s:
	mov	rdi, QWORD PTR [rsp+136]
	mov	rbx, QWORD PTR [rsp+128]
	mov	r14, QWORD PTR [rsp+144]
$LN7@generate_s:
; Line 48
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r13
	pop	r12
	pop	rsi
	pop	rbp
	ret	0
??$generate_sliding_ray@$0L@@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ENDP ; SlidingPieceOptimizations::generate_sliding_ray<11>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
$T3 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
$T8 = 120
$T9 = 128
pos$ = 208
tv995 = 208
list$ = 216
us$ = 224
tv1009 = 232
?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z PROC ; SlidingPieceOptimizations::generate_bishop_moves_optimized, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 54
$LN279:
	mov	r11, rsp
	push	rbx
	push	r12
	push	r13
	sub	rsp, 176				; 000000b0H
	movzx	r13d, r8b
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	imul	rax, r13, 28
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 54
	mov	r12, rcx
; Line 55
	mov	edx, r13d
	movsxd	r9, DWORD PTR [rax+rcx+788]
; Line 58
	test	r9d, r9d
	je	$LN3@generate_b
; Line 60
	imul	rax, rdx, 280				; 00000118H
	mov	QWORD PTR [r11-56], r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	add	rax, rcx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 62
	mov	QWORD PTR tv995[rsp], r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	mov	QWORD PTR tv1009[rsp], rax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 62
	test	r9d, r9d
	jle	$LN276@generate_b
	mov	rcx, QWORD PTR tv995[rsp]
	xor	r9d, r9d
	mov	QWORD PTR [r11+16], rbp
	mov	r15d, r9d
	mov	QWORD PTR [r11-32], rsi
	mov	QWORD PTR [r11-40], rdi
	mov	QWORD PTR [r11-48], r14
	mov	QWORD PTR $T9[rsp], r9
	npad	2
$LL4@generate_b:
; Line 63
	mov	r15d, DWORD PTR [rax+r15*4+336]
; Line 64
	cmp	r15d, -1
	je	$LN2@generate_b
; Line 36
	lea	ebp, DWORD PTR [r15+11]
	cmp	ebp, -1
	je	$LN29@generate_b
	movsxd	rdi, ebp
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r12
	mov	esi, ebp
	sub	r14, r12
$LL26@generate_b:
	cmp	esi, 119				; 00000077H
	ja	$LN29@generate_b
	cmp	BYTE PTR [rdi+r14], 0
	je	$LN29@generate_b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN27@generate_b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, ebp
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r15d
	mov	DWORD PTR $T1[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	ebp, 11
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	esi, 11
	add	rdi, 11
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	esi, -1
	jne	SHORT $LL26@generate_b
	jmp	SHORT $LN29@generate_b
$LN27@generate_b:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN49@generate_b
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN50@generate_b
$LN49@generate_b:
	mov	al, 2
$LN50@generate_b:
; Line 37
	test	r13b, r13b
	jne	SHORT $LN57@generate_b
	mov	dl, 1
	jmp	SHORT $LN58@generate_b
$LN57@generate_b:
	cmp	r13b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN58@generate_b:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN29@generate_b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T2[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, ebp
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
	xor	r9d, r9d
$LN29@generate_b:
; Line 36
	lea	ebp, DWORD PTR [r15+9]
	cmp	ebp, -1
	je	$LN77@generate_b
	movsxd	rdi, ebp
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r12
	mov	esi, ebp
	sub	r14, r12
	npad	7
$LL74@generate_b:
	cmp	esi, 119				; 00000077H
	ja	$LN77@generate_b
	cmp	BYTE PTR [r14+rdi], 0
	je	$LN77@generate_b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN75@generate_b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, ebp
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r15d
	mov	DWORD PTR $T3[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T3[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	ebp, 9
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T3[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	add	esi, 9
	add	rdi, 9
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	esi, -1
	jne	SHORT $LL74@generate_b
	jmp	SHORT $LN77@generate_b
$LN75@generate_b:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN97@generate_b
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN98@generate_b
$LN97@generate_b:
	mov	al, 2
$LN98@generate_b:
; Line 37
	test	r13b, r13b
	jne	SHORT $LN105@generate_b
	mov	dl, 1
	jmp	SHORT $LN106@generate_b
$LN105@generate_b:
	cmp	r13b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN106@generate_b:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN77@generate_b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T4[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, ebp
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T4[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN77@generate_b:
; Line 36
	lea	esi, DWORD PTR [r15-9]
	cmp	esi, -1
	je	$LN125@generate_b
	movsxd	rdi, esi
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r12
	sub	r14, r12
	xor	r9d, r9d
	mov	ebp, esi
	npad	8
$LL122@generate_b:
	cmp	ebp, 119				; 00000077H
	ja	$LN125@generate_b
	cmp	BYTE PTR [r14+rdi], 0
	je	$LN125@generate_b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN123@generate_b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, esi
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r15d
	mov	DWORD PTR $T5[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T5[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	esi, 9
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T5[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	ebp, 9
	sub	rdi, 9
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	esi, -1
	jne	SHORT $LL122@generate_b
	jmp	SHORT $LN125@generate_b
$LN123@generate_b:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN145@generate_b
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN146@generate_b
$LN145@generate_b:
	mov	al, 2
$LN146@generate_b:
; Line 37
	test	r13b, r13b
	jne	SHORT $LN153@generate_b
	mov	dl, 1
	jmp	SHORT $LN154@generate_b
$LN153@generate_b:
	cmp	r13b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN154@generate_b:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN125@generate_b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T6[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, esi
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T6[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T6[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN125@generate_b:
; Line 36
	lea	esi, DWORD PTR [r15-11]
	cmp	esi, -1
	je	$LN242@generate_b
	movsxd	rdi, esi
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r12
	sub	r14, r12
	xor	r9d, r9d
	mov	ebp, esi
	npad	8
$LL170@generate_b:
	cmp	ebp, 119				; 00000077H
	ja	$LN243@generate_b
	cmp	BYTE PTR [r14+rdi], 0
	je	$LN243@generate_b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 39
	test	cl, cl
	jne	SHORT $LN171@generate_b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, esi
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r15d
	mov	DWORD PTR $T7[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T7[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	esi, 11
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T7[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	sub	ebp, 11
	sub	rdi, 11
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 36
	cmp	esi, -1
	jne	SHORT $LL170@generate_b
	jmp	SHORT $LN243@generate_b
$LN171@generate_b:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN193@generate_b
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN194@generate_b
$LN193@generate_b:
	mov	al, 2
$LN194@generate_b:
; Line 37
	test	r13b, r13b
	jne	SHORT $LN201@generate_b
	mov	dl, 1
	jmp	SHORT $LN202@generate_b
$LN201@generate_b:
	cmp	r13b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN202@generate_b:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 42
	cmp	al, dl
	jne	SHORT $LN243@generate_b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T8[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, esi
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T8[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 43
	lea	rdx, QWORD PTR $T8[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN242@generate_b:
; Line 62
	xor	r9d, r9d
$LN243@generate_b:
	mov	rcx, QWORD PTR tv995[rsp]
	mov	rax, QWORD PTR tv1009[rsp]
$LN2@generate_b:
	mov	r15, QWORD PTR $T9[rsp]
	inc	r15
	mov	QWORD PTR $T9[rsp], r15
	cmp	r15, rcx
	jl	$LL4@generate_b
	mov	r14, QWORD PTR [rsp+152]
	mov	rdi, QWORD PTR [rsp+160]
	mov	rsi, QWORD PTR [rsp+168]
	mov	rbp, QWORD PTR [rsp+216]
$LN276@generate_b:
	mov	r15, QWORD PTR [rsp+144]
$LN3@generate_b:
; Line 72
	add	rsp, 176				; 000000b0H
	pop	r13
	pop	r12
	pop	rbx
	ret	0
?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ENDP ; SlidingPieceOptimizations::generate_bishop_moves_optimized
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
pos$ = 96
list$ = 104
us$ = 112
from$ = 120
??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z PROC ; KnightOptimizations::generate_single_knight_move<-21>, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 199
$LN57:
	mov	QWORD PTR [rsp+16], rbx
	push	rsi
	sub	rsp, 80					; 00000050H
	movsxd	r10, r9d
	mov	rbx, rdx
	mov	rsi, rcx
; Line 200
	lea	edx, DWORD PTR [r10-21]
; Line 201
	cmp	edx, -1
	je	$LN5@generate_s
	cmp	edx, 119				; 00000077H
	ja	$LN5@generate_s
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 201
	cmp	BYTE PTR [r10+rcx-21], 0
	je	$LN5@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [r10+rsi-21]
	mov	QWORD PTR [rsp+96], rdi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 203
	test	r9b, r9b
	jne	SHORT $LN3@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	xor	edi, edi
; Line 49
	xor	r9d, r9d
	mov	BYTE PTR [rsp+48], dil
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], dil
	mov	ecx, r10d
	mov	BYTE PTR [rsp+32], dil
	mov	DWORD PTR $T1[rsp+4], edi
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], edi
; Line 29
	inc	DWORD PTR [rbx+2048]
	mov	rdi, QWORD PTR [rsp+96]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 209
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
$LN3@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN25@generate_s
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN26@generate_s
$LN25@generate_s:
	mov	al, 2
$LN26@generate_s:
; Line 37
	xor	edi, edi
	test	r8b, r8b
	jne	SHORT $LN33@generate_s
	mov	cl, 1
	jmp	SHORT $LN34@generate_s
$LN33@generate_s:
	cmp	r8b, 1
	mov	ecx, 2
	cmove	ecx, edi
$LN34@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	cmp	al, cl
	jne	SHORT $LN54@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], dil
	and	al, 7
	mov	BYTE PTR [rsp+40], dil
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, r10d
	mov	DWORD PTR $T2[rsp+4], edi
	cmove	r8d, edi
	mov	BYTE PTR [rsp+32], dil
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	mov	r8, rsi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN54@generate_s:
	mov	rdi, QWORD PTR [rsp+96]
$LN5@generate_s:
; Line 209
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
??$generate_single_knight_move@$0?BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ENDP ; KnightOptimizations::generate_single_knight_move<-21>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
pos$ = 96
list$ = 104
us$ = 112
from$ = 120
??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z PROC ; KnightOptimizations::generate_single_knight_move<-19>, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 199
$LN57:
	mov	QWORD PTR [rsp+16], rbx
	push	rsi
	sub	rsp, 80					; 00000050H
	movsxd	r10, r9d
	mov	rbx, rdx
	mov	rsi, rcx
; Line 200
	lea	edx, DWORD PTR [r10-19]
; Line 201
	cmp	edx, -1
	je	$LN5@generate_s
	cmp	edx, 119				; 00000077H
	ja	$LN5@generate_s
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 201
	cmp	BYTE PTR [r10+rcx-19], 0
	je	$LN5@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [r10+rsi-19]
	mov	QWORD PTR [rsp+96], rdi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 203
	test	r9b, r9b
	jne	SHORT $LN3@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	xor	edi, edi
; Line 49
	xor	r9d, r9d
	mov	BYTE PTR [rsp+48], dil
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], dil
	mov	ecx, r10d
	mov	BYTE PTR [rsp+32], dil
	mov	DWORD PTR $T1[rsp+4], edi
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], edi
; Line 29
	inc	DWORD PTR [rbx+2048]
	mov	rdi, QWORD PTR [rsp+96]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 209
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
$LN3@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN25@generate_s
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN26@generate_s
$LN25@generate_s:
	mov	al, 2
$LN26@generate_s:
; Line 37
	xor	edi, edi
	test	r8b, r8b
	jne	SHORT $LN33@generate_s
	mov	cl, 1
	jmp	SHORT $LN34@generate_s
$LN33@generate_s:
	cmp	r8b, 1
	mov	ecx, 2
	cmove	ecx, edi
$LN34@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	cmp	al, cl
	jne	SHORT $LN54@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], dil
	and	al, 7
	mov	BYTE PTR [rsp+40], dil
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, r10d
	mov	DWORD PTR $T2[rsp+4], edi
	cmove	r8d, edi
	mov	BYTE PTR [rsp+32], dil
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	mov	r8, rsi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN54@generate_s:
	mov	rdi, QWORD PTR [rsp+96]
$LN5@generate_s:
; Line 209
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
??$generate_single_knight_move@$0?BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ENDP ; KnightOptimizations::generate_single_knight_move<-19>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
pos$ = 96
list$ = 104
us$ = 112
from$ = 120
??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z PROC ; KnightOptimizations::generate_single_knight_move<-12>, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 199
$LN57:
	mov	QWORD PTR [rsp+16], rbx
	push	rsi
	sub	rsp, 80					; 00000050H
	movsxd	r10, r9d
	mov	rbx, rdx
	mov	rsi, rcx
; Line 200
	lea	edx, DWORD PTR [r10-12]
; Line 201
	cmp	edx, -1
	je	$LN5@generate_s
	cmp	edx, 119				; 00000077H
	ja	$LN5@generate_s
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 201
	cmp	BYTE PTR [r10+rcx-12], 0
	je	$LN5@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [r10+rsi-12]
	mov	QWORD PTR [rsp+96], rdi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 203
	test	r9b, r9b
	jne	SHORT $LN3@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	xor	edi, edi
; Line 49
	xor	r9d, r9d
	mov	BYTE PTR [rsp+48], dil
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], dil
	mov	ecx, r10d
	mov	BYTE PTR [rsp+32], dil
	mov	DWORD PTR $T1[rsp+4], edi
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], edi
; Line 29
	inc	DWORD PTR [rbx+2048]
	mov	rdi, QWORD PTR [rsp+96]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 209
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
$LN3@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN25@generate_s
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN26@generate_s
$LN25@generate_s:
	mov	al, 2
$LN26@generate_s:
; Line 37
	xor	edi, edi
	test	r8b, r8b
	jne	SHORT $LN33@generate_s
	mov	cl, 1
	jmp	SHORT $LN34@generate_s
$LN33@generate_s:
	cmp	r8b, 1
	mov	ecx, 2
	cmove	ecx, edi
$LN34@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	cmp	al, cl
	jne	SHORT $LN54@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], dil
	and	al, 7
	mov	BYTE PTR [rsp+40], dil
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, r10d
	mov	DWORD PTR $T2[rsp+4], edi
	cmove	r8d, edi
	mov	BYTE PTR [rsp+32], dil
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	mov	r8, rsi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN54@generate_s:
	mov	rdi, QWORD PTR [rsp+96]
$LN5@generate_s:
; Line 209
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
??$generate_single_knight_move@$0?M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ENDP ; KnightOptimizations::generate_single_knight_move<-12>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
pos$ = 96
list$ = 104
us$ = 112
from$ = 120
??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z PROC ; KnightOptimizations::generate_single_knight_move<-8>, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 199
$LN57:
	mov	QWORD PTR [rsp+16], rbx
	push	rsi
	sub	rsp, 80					; 00000050H
	movsxd	r10, r9d
	mov	rbx, rdx
	mov	rsi, rcx
; Line 200
	lea	edx, DWORD PTR [r10-8]
; Line 201
	cmp	edx, -1
	je	$LN5@generate_s
	cmp	edx, 119				; 00000077H
	ja	$LN5@generate_s
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 201
	cmp	BYTE PTR [r10+rcx-8], 0
	je	$LN5@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [r10+rsi-8]
	mov	QWORD PTR [rsp+96], rdi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 203
	test	r9b, r9b
	jne	SHORT $LN3@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	xor	edi, edi
; Line 49
	xor	r9d, r9d
	mov	BYTE PTR [rsp+48], dil
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], dil
	mov	ecx, r10d
	mov	BYTE PTR [rsp+32], dil
	mov	DWORD PTR $T1[rsp+4], edi
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], edi
; Line 29
	inc	DWORD PTR [rbx+2048]
	mov	rdi, QWORD PTR [rsp+96]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 209
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
$LN3@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN25@generate_s
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN26@generate_s
$LN25@generate_s:
	mov	al, 2
$LN26@generate_s:
; Line 37
	xor	edi, edi
	test	r8b, r8b
	jne	SHORT $LN33@generate_s
	mov	cl, 1
	jmp	SHORT $LN34@generate_s
$LN33@generate_s:
	cmp	r8b, 1
	mov	ecx, 2
	cmove	ecx, edi
$LN34@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	cmp	al, cl
	jne	SHORT $LN54@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], dil
	and	al, 7
	mov	BYTE PTR [rsp+40], dil
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, r10d
	mov	DWORD PTR $T2[rsp+4], edi
	cmove	r8d, edi
	mov	BYTE PTR [rsp+32], dil
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	mov	r8, rsi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN54@generate_s:
	mov	rdi, QWORD PTR [rsp+96]
$LN5@generate_s:
; Line 209
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
??$generate_single_knight_move@$0?7@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ENDP ; KnightOptimizations::generate_single_knight_move<-8>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
pos$ = 96
list$ = 104
us$ = 112
from$ = 120
??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z PROC ; KnightOptimizations::generate_single_knight_move<8>, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 199
$LN57:
	mov	QWORD PTR [rsp+16], rbx
	push	rsi
	sub	rsp, 80					; 00000050H
	movsxd	r10, r9d
	mov	rbx, rdx
	mov	rsi, rcx
; Line 200
	lea	edx, DWORD PTR [r10+8]
; Line 201
	cmp	edx, -1
	je	$LN5@generate_s
	cmp	edx, 119				; 00000077H
	ja	$LN5@generate_s
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 201
	cmp	BYTE PTR [r10+rcx+8], 0
	je	$LN5@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [r10+rsi+8]
	mov	QWORD PTR [rsp+96], rdi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 203
	test	r9b, r9b
	jne	SHORT $LN3@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	xor	edi, edi
; Line 49
	xor	r9d, r9d
	mov	BYTE PTR [rsp+48], dil
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], dil
	mov	ecx, r10d
	mov	BYTE PTR [rsp+32], dil
	mov	DWORD PTR $T1[rsp+4], edi
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], edi
; Line 29
	inc	DWORD PTR [rbx+2048]
	mov	rdi, QWORD PTR [rsp+96]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 209
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
$LN3@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN25@generate_s
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN26@generate_s
$LN25@generate_s:
	mov	al, 2
$LN26@generate_s:
; Line 37
	xor	edi, edi
	test	r8b, r8b
	jne	SHORT $LN33@generate_s
	mov	cl, 1
	jmp	SHORT $LN34@generate_s
$LN33@generate_s:
	cmp	r8b, 1
	mov	ecx, 2
	cmove	ecx, edi
$LN34@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	cmp	al, cl
	jne	SHORT $LN54@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], dil
	and	al, 7
	mov	BYTE PTR [rsp+40], dil
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, r10d
	mov	DWORD PTR $T2[rsp+4], edi
	cmove	r8d, edi
	mov	BYTE PTR [rsp+32], dil
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	mov	r8, rsi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN54@generate_s:
	mov	rdi, QWORD PTR [rsp+96]
$LN5@generate_s:
; Line 209
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
??$generate_single_knight_move@$07@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ENDP ; KnightOptimizations::generate_single_knight_move<8>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
pos$ = 96
list$ = 104
us$ = 112
from$ = 120
??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z PROC ; KnightOptimizations::generate_single_knight_move<12>, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 199
$LN57:
	mov	QWORD PTR [rsp+16], rbx
	push	rsi
	sub	rsp, 80					; 00000050H
	movsxd	r10, r9d
	mov	rbx, rdx
	mov	rsi, rcx
; Line 200
	lea	edx, DWORD PTR [r10+12]
; Line 201
	cmp	edx, -1
	je	$LN5@generate_s
	cmp	edx, 119				; 00000077H
	ja	$LN5@generate_s
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 201
	cmp	BYTE PTR [r10+rcx+12], 0
	je	$LN5@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [r10+rsi+12]
	mov	QWORD PTR [rsp+96], rdi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 203
	test	r9b, r9b
	jne	SHORT $LN3@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	xor	edi, edi
; Line 49
	xor	r9d, r9d
	mov	BYTE PTR [rsp+48], dil
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], dil
	mov	ecx, r10d
	mov	BYTE PTR [rsp+32], dil
	mov	DWORD PTR $T1[rsp+4], edi
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], edi
; Line 29
	inc	DWORD PTR [rbx+2048]
	mov	rdi, QWORD PTR [rsp+96]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 209
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
$LN3@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN25@generate_s
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN26@generate_s
$LN25@generate_s:
	mov	al, 2
$LN26@generate_s:
; Line 37
	xor	edi, edi
	test	r8b, r8b
	jne	SHORT $LN33@generate_s
	mov	cl, 1
	jmp	SHORT $LN34@generate_s
$LN33@generate_s:
	cmp	r8b, 1
	mov	ecx, 2
	cmove	ecx, edi
$LN34@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	cmp	al, cl
	jne	SHORT $LN54@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], dil
	and	al, 7
	mov	BYTE PTR [rsp+40], dil
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, r10d
	mov	DWORD PTR $T2[rsp+4], edi
	cmove	r8d, edi
	mov	BYTE PTR [rsp+32], dil
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	mov	r8, rsi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN54@generate_s:
	mov	rdi, QWORD PTR [rsp+96]
$LN5@generate_s:
; Line 209
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
??$generate_single_knight_move@$0M@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ENDP ; KnightOptimizations::generate_single_knight_move<12>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
pos$ = 96
list$ = 104
us$ = 112
from$ = 120
??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z PROC ; KnightOptimizations::generate_single_knight_move<19>, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 199
$LN57:
	mov	QWORD PTR [rsp+16], rbx
	push	rsi
	sub	rsp, 80					; 00000050H
	movsxd	r10, r9d
	mov	rbx, rdx
	mov	rsi, rcx
; Line 200
	lea	edx, DWORD PTR [r10+19]
; Line 201
	cmp	edx, -1
	je	$LN5@generate_s
	cmp	edx, 119				; 00000077H
	ja	$LN5@generate_s
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 201
	cmp	BYTE PTR [r10+rcx+19], 0
	je	$LN5@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [r10+rsi+19]
	mov	QWORD PTR [rsp+96], rdi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 203
	test	r9b, r9b
	jne	SHORT $LN3@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	xor	edi, edi
; Line 49
	xor	r9d, r9d
	mov	BYTE PTR [rsp+48], dil
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], dil
	mov	ecx, r10d
	mov	BYTE PTR [rsp+32], dil
	mov	DWORD PTR $T1[rsp+4], edi
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], edi
; Line 29
	inc	DWORD PTR [rbx+2048]
	mov	rdi, QWORD PTR [rsp+96]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 209
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
$LN3@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN25@generate_s
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN26@generate_s
$LN25@generate_s:
	mov	al, 2
$LN26@generate_s:
; Line 37
	xor	edi, edi
	test	r8b, r8b
	jne	SHORT $LN33@generate_s
	mov	cl, 1
	jmp	SHORT $LN34@generate_s
$LN33@generate_s:
	cmp	r8b, 1
	mov	ecx, 2
	cmove	ecx, edi
$LN34@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	cmp	al, cl
	jne	SHORT $LN54@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], dil
	and	al, 7
	mov	BYTE PTR [rsp+40], dil
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, r10d
	mov	DWORD PTR $T2[rsp+4], edi
	cmove	r8d, edi
	mov	BYTE PTR [rsp+32], dil
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	mov	r8, rsi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN54@generate_s:
	mov	rdi, QWORD PTR [rsp+96]
$LN5@generate_s:
; Line 209
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
??$generate_single_knight_move@$0BD@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ENDP ; KnightOptimizations::generate_single_knight_move<19>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
pos$ = 96
list$ = 104
us$ = 112
from$ = 120
??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z PROC ; KnightOptimizations::generate_single_knight_move<21>, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 199
$LN57:
	mov	QWORD PTR [rsp+16], rbx
	push	rsi
	sub	rsp, 80					; 00000050H
	movsxd	r10, r9d
	mov	rbx, rdx
	mov	rsi, rcx
; Line 200
	lea	edx, DWORD PTR [r10+21]
; Line 201
	cmp	edx, -1
	je	$LN5@generate_s
	cmp	edx, 119				; 00000077H
	ja	$LN5@generate_s
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 201
	cmp	BYTE PTR [r10+rcx+21], 0
	je	$LN5@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [r10+rsi+21]
	mov	QWORD PTR [rsp+96], rdi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 203
	test	r9b, r9b
	jne	SHORT $LN3@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	xor	edi, edi
; Line 49
	xor	r9d, r9d
	mov	BYTE PTR [rsp+48], dil
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], dil
	mov	ecx, r10d
	mov	BYTE PTR [rsp+32], dil
	mov	DWORD PTR $T1[rsp+4], edi
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], edi
; Line 29
	inc	DWORD PTR [rbx+2048]
	mov	rdi, QWORD PTR [rsp+96]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 209
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
$LN3@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN25@generate_s
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN26@generate_s
$LN25@generate_s:
	mov	al, 2
$LN26@generate_s:
; Line 37
	xor	edi, edi
	test	r8b, r8b
	jne	SHORT $LN33@generate_s
	mov	cl, 1
	jmp	SHORT $LN34@generate_s
$LN33@generate_s:
	cmp	r8b, 1
	mov	ecx, 2
	cmove	ecx, edi
$LN34@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	cmp	al, cl
	jne	SHORT $LN54@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], dil
	and	al, 7
	mov	BYTE PTR [rsp+40], dil
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, r10d
	mov	DWORD PTR $T2[rsp+4], edi
	cmove	r8d, edi
	mov	BYTE PTR [rsp+32], dil
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	mov	r8, rsi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN54@generate_s:
	mov	rdi, QWORD PTR [rsp+96]
$LN5@generate_s:
; Line 209
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
??$generate_single_knight_move@$0BF@@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@H@Z ENDP ; KnightOptimizations::generate_single_knight_move<21>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
$T3 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
$T8 = 120
$T9 = 128
$T10 = 136
$T11 = 144
$T12 = 152
$T13 = 160
$T14 = 168
pos$ = 240
$T15 = 240
list$ = 248
us$ = 256
$T16 = 264
?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z PROC ; KnightOptimizations::generate_knight_moves_template, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 211
$LN488:
	mov	r11, rsp
	push	rbp
	push	rbx
	push	rsi
	push	r14
	lea	rbp, QWORD PTR [r11-95]
	sub	rsp, 200				; 000000c8H
	movzx	esi, r8b
	mov	rbx, rdx
	mov	r14, rcx
; Line 212
	mov	edx, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rax, QWORD PTR [rsi+28]
	imul	r9, rax, 28
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 212
	movsxd	rax, DWORD PTR [r9+rcx]
; Line 214
	test	eax, eax
	je	$LN3@generate_k
	mov	QWORD PTR [r11-40], r12
; Line 216
	imul	r12, rdx, 280				; 00000118H
	mov	QWORD PTR [r11-48], r13
; Line 218
	mov	r13, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	add	r12, rcx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 218
	test	eax, eax
	jle	$LN482@generate_k
	mov	QWORD PTR [r11+16], rdi
	lea	rax, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
	xor	r10d, r10d
	mov	QWORD PTR [r11-56], r15
	mov	r15d, r10d
$LL4@generate_k:
; Line 219
	movsxd	rdi, DWORD PTR [r12+r15*4+296]
; Line 220
	cmp	edi, -1
	je	$LN2@generate_k
; Line 200
	lea	edx, DWORD PTR [rdi+21]
; Line 201
	cmp	edx, -1
	je	$LN27@generate_k
	cmp	edx, 119				; 00000077H
	ja	$LN27@generate_k
	cmp	BYTE PTR [rdi+rax+261], 0
	je	$LN27@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [rdi+r14+21]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 203
	test	r9b, r9b
	jne	SHORT $LN25@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], r9b
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], r9b
	mov	ecx, edi
	mov	BYTE PTR [rsp+32], r9b
	xor	r9d, r9d
	mov	DWORD PTR $T15[rbp-133], r10d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r10d, r10d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T15[rbp-137], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T15[rbp-137]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r10d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	jmp	SHORT $LN421@generate_k
$LN25@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN47@generate_k
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN48@generate_k
$LN47@generate_k:
	mov	al, 2
$LN48@generate_k:
; Line 37
	test	sil, sil
	jne	SHORT $LN55@generate_k
	mov	cl, 1
	jmp	SHORT $LN56@generate_k
$LN55@generate_k:
	cmp	sil, 1
	mov	ecx, 2
	cmove	ecx, r10d
$LN56@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	cmp	al, cl
	jne	SHORT $LN421@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], 0
	and	al, 7
	mov	BYTE PTR [rsp+40], 0
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, edi
	mov	DWORD PTR $T16[rbp-133], r10d
	cmove	r8d, r10d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	mov	r8, r14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T16[rbp-137], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	lea	rdx, QWORD PTR $T16[rbp-137]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
	xor	r10d, r10d
$LN421@generate_k:
; Line 200
	lea	rax, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
$LN27@generate_k:
	lea	edx, DWORD PTR [rdi+19]
; Line 201
	cmp	edx, -1
	je	$LN399@generate_k
	cmp	edx, 119				; 00000077H
	ja	$LN399@generate_k
	cmp	BYTE PTR [rdi+rax+259], 0
	je	$LN399@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [rdi+r14+19]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 203
	test	r9b, r9b
	jne	SHORT $LN71@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], r9b
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], r9b
	mov	ecx, edi
	mov	BYTE PTR [rsp+32], r9b
	xor	r9d, r9d
	mov	DWORD PTR $T1[rbp-133], r10d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r10d, r10d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rbp-137], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rbp-137]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r10d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	jmp	SHORT $LN73@generate_k
$LN71@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN93@generate_k
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN94@generate_k
$LN93@generate_k:
	mov	al, 2
$LN94@generate_k:
; Line 37
	test	sil, sil
	jne	SHORT $LN101@generate_k
	mov	cl, 1
	jmp	SHORT $LN102@generate_k
$LN101@generate_k:
	cmp	sil, 1
	mov	ecx, 2
	cmove	ecx, r10d
$LN102@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	cmp	al, cl
	jne	SHORT $LN399@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], 0
	and	al, 7
	mov	BYTE PTR [rsp+40], 0
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, edi
	mov	DWORD PTR $T2[rbp-133], r10d
	cmove	r8d, r10d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	mov	r8, r14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rbp-137], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	lea	rdx, QWORD PTR $T2[rbp-137]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN399@generate_k:
; Line 200
	xor	r10d, r10d
$LN73@generate_k:
	lea	edx, DWORD PTR [rdi+12]
; Line 201
	lea	rax, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
	cmp	edx, -1
	je	$LN400@generate_k
	cmp	edx, 119				; 00000077H
	ja	$LN400@generate_k
	cmp	BYTE PTR [rdi+rax+252], 0
	je	$LN400@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [rdi+r14+12]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 203
	test	r9b, r9b
	jne	SHORT $LN117@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], r9b
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], r9b
	mov	ecx, edi
	mov	BYTE PTR [rsp+32], r9b
	xor	r9d, r9d
	mov	DWORD PTR $T3[rbp-133], r10d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r10d, r10d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T3[rbp-137], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T3[rbp-137]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r10d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	jmp	SHORT $LN483@generate_k
$LN117@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN139@generate_k
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN140@generate_k
$LN139@generate_k:
	mov	al, 2
$LN140@generate_k:
; Line 37
	test	sil, sil
	jne	SHORT $LN147@generate_k
	mov	cl, 1
	jmp	SHORT $LN148@generate_k
$LN147@generate_k:
	cmp	sil, 1
	mov	ecx, 2
	cmove	ecx, r10d
$LN148@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	cmp	al, cl
	jne	SHORT $LN403@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], 0
	and	al, 7
	mov	BYTE PTR [rsp+40], 0
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, edi
	mov	DWORD PTR $T4[rbp-133], r10d
	cmove	r8d, r10d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	mov	r8, r14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T4[rbp-137], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	lea	rdx, QWORD PTR $T4[rbp-137]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN403@generate_k:
; Line 200
	xor	r10d, r10d
$LN483@generate_k:
	lea	rax, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
$LN119@generate_k:
	lea	edx, DWORD PTR [rdi+8]
; Line 201
	cmp	edx, -1
	je	$LN407@generate_k
	cmp	edx, 119				; 00000077H
	ja	$LN407@generate_k
	cmp	BYTE PTR [rdi+rax+248], 0
	je	$LN407@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [rdi+r14+8]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 203
	test	r9b, r9b
	jne	SHORT $LN163@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], r9b
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], r9b
	mov	ecx, edi
	mov	BYTE PTR [rsp+32], r9b
	xor	r9d, r9d
	mov	DWORD PTR $T5[rbp-133], r10d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r10d, r10d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T5[rbp-137], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T5[rbp-137]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r10d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	jmp	$LN165@generate_k
$LN400@generate_k:
; Line 200
	xor	r10d, r10d
	jmp	SHORT $LN119@generate_k
$LN163@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN185@generate_k
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN186@generate_k
$LN185@generate_k:
	mov	al, 2
$LN186@generate_k:
; Line 37
	test	sil, sil
	jne	SHORT $LN193@generate_k
	mov	cl, 1
	jmp	SHORT $LN194@generate_k
$LN193@generate_k:
	cmp	sil, 1
	mov	ecx, 2
	cmove	ecx, r10d
$LN194@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	cmp	al, cl
	jne	SHORT $LN407@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], 0
	and	al, 7
	mov	BYTE PTR [rsp+40], 0
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, edi
	mov	DWORD PTR $T6[rbp-133], r10d
	cmove	r8d, r10d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	mov	r8, r14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T6[rbp-137], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	lea	rdx, QWORD PTR $T6[rbp-137]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN407@generate_k:
; Line 200
	xor	r10d, r10d
$LN165@generate_k:
	lea	edx, DWORD PTR [rdi-8]
; Line 201
	lea	rax, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
	cmp	edx, -1
	je	$LN408@generate_k
	cmp	edx, 119				; 00000077H
	ja	$LN408@generate_k
	cmp	BYTE PTR [rdi+rax+232], 0
	je	$LN408@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [rdi+r14-8]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 203
	test	r9b, r9b
	jne	SHORT $LN209@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], r9b
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], r9b
	mov	ecx, edi
	mov	BYTE PTR [rsp+32], r9b
	xor	r9d, r9d
	mov	DWORD PTR $T7[rbp-133], r10d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r10d, r10d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T7[rbp-137], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T7[rbp-137]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r10d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	jmp	SHORT $LN484@generate_k
$LN209@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN231@generate_k
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN232@generate_k
$LN231@generate_k:
	mov	al, 2
$LN232@generate_k:
; Line 37
	test	sil, sil
	jne	SHORT $LN239@generate_k
	mov	cl, 1
	jmp	SHORT $LN240@generate_k
$LN239@generate_k:
	cmp	sil, 1
	mov	ecx, 2
	cmove	ecx, r10d
$LN240@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	cmp	al, cl
	jne	SHORT $LN411@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], 0
	and	al, 7
	mov	BYTE PTR [rsp+40], 0
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, edi
	mov	DWORD PTR $T8[rbp-133], r10d
	cmove	r8d, r10d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	mov	r8, r14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T8[rbp-137], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	lea	rdx, QWORD PTR $T8[rbp-137]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN411@generate_k:
; Line 200
	xor	r10d, r10d
$LN484@generate_k:
	lea	rax, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
$LN211@generate_k:
	lea	edx, DWORD PTR [rdi-12]
; Line 201
	cmp	edx, -1
	je	$LN415@generate_k
	cmp	edx, 119				; 00000077H
	ja	$LN415@generate_k
	cmp	BYTE PTR [rdi+rax+228], 0
	je	$LN415@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [rdi+r14-12]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 203
	test	r9b, r9b
	jne	SHORT $LN255@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], r9b
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], r9b
	mov	ecx, edi
	mov	BYTE PTR [rsp+32], r9b
	xor	r9d, r9d
	mov	DWORD PTR $T9[rbp-133], r10d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r10d, r10d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T9[rbp-137], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T9[rbp-137]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r10d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	jmp	$LN257@generate_k
$LN408@generate_k:
; Line 200
	xor	r10d, r10d
	jmp	SHORT $LN211@generate_k
$LN255@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN277@generate_k
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN278@generate_k
$LN277@generate_k:
	mov	al, 2
$LN278@generate_k:
; Line 37
	test	sil, sil
	jne	SHORT $LN285@generate_k
	mov	cl, 1
	jmp	SHORT $LN286@generate_k
$LN285@generate_k:
	cmp	sil, 1
	mov	ecx, 2
	cmove	ecx, r10d
$LN286@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	cmp	al, cl
	jne	SHORT $LN415@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], 0
	and	al, 7
	mov	BYTE PTR [rsp+40], 0
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, edi
	mov	DWORD PTR $T10[rbp-133], r10d
	cmove	r8d, r10d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	mov	r8, r14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T10[rbp-137], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	lea	rdx, QWORD PTR $T10[rbp-137]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN415@generate_k:
; Line 200
	xor	r10d, r10d
$LN257@generate_k:
	lea	edx, DWORD PTR [rdi-19]
; Line 201
	lea	rax, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
	cmp	edx, -1
	je	$LN416@generate_k
	cmp	edx, 119				; 00000077H
	ja	$LN416@generate_k
	cmp	BYTE PTR [rdi+rax+221], 0
	je	$LN416@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [rdi+r14-19]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 203
	test	r9b, r9b
	jne	SHORT $LN301@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], r9b
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], r9b
	mov	ecx, edi
	mov	BYTE PTR [rsp+32], r9b
	xor	r9d, r9d
	mov	DWORD PTR $T11[rbp-133], r10d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r10d, r10d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T11[rbp-137], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T11[rbp-137]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r10d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	jmp	SHORT $LN485@generate_k
$LN301@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN323@generate_k
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN324@generate_k
$LN323@generate_k:
	mov	al, 2
$LN324@generate_k:
; Line 37
	test	sil, sil
	jne	SHORT $LN331@generate_k
	mov	cl, 1
	jmp	SHORT $LN332@generate_k
$LN331@generate_k:
	cmp	sil, 1
	mov	ecx, 2
	cmove	ecx, r10d
$LN332@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	cmp	al, cl
	jne	SHORT $LN419@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], 0
	and	al, 7
	mov	BYTE PTR [rsp+40], 0
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, edi
	mov	DWORD PTR $T12[rbp-133], r10d
	cmove	r8d, r10d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	mov	r8, r14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T12[rbp-137], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	lea	rdx, QWORD PTR $T12[rbp-137]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN419@generate_k:
; Line 200
	xor	r10d, r10d
$LN485@generate_k:
	lea	rax, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
$LN303@generate_k:
	lea	edx, DWORD PTR [rdi-21]
; Line 201
	cmp	edx, -1
	je	$LN2@generate_k
	cmp	edx, 119				; 00000077H
	ja	$LN2@generate_k
	cmp	BYTE PTR [rdi+rax+219], 0
	je	$LN2@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [rdi+r14-21]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 203
	test	r9b, r9b
	jne	SHORT $LN347@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], r9b
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], r9b
	mov	ecx, edi
	mov	BYTE PTR [rsp+32], r9b
	xor	r9d, r9d
	mov	DWORD PTR $T13[rbp-133], r10d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r10d, r10d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T13[rbp-137], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T13[rbp-137]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r10d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	jmp	$LN420@generate_k
$LN416@generate_k:
; Line 200
	xor	r10d, r10d
	jmp	SHORT $LN303@generate_k
$LN347@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN369@generate_k
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN370@generate_k
$LN369@generate_k:
	mov	al, 2
$LN370@generate_k:
; Line 37
	test	sil, sil
	jne	SHORT $LN377@generate_k
	mov	cl, 1
	jmp	SHORT $LN378@generate_k
$LN377@generate_k:
	cmp	sil, 1
	mov	ecx, 2
	cmove	ecx, r10d
$LN378@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 205
	cmp	al, cl
	jne	SHORT $LN420@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], 0
	and	al, 7
	mov	BYTE PTR [rsp+40], 0
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, edi
	mov	DWORD PTR $T14[rbp-133], r10d
	cmove	r8d, r10d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	mov	r8, r14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T14[rbp-137], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\knight_optimizations.hpp
; Line 206
	lea	rdx, QWORD PTR $T14[rbp-137]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
	xor	r10d, r10d
$LN420@generate_k:
; Line 218
	lea	rax, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
$LN2@generate_k:
	inc	r15
	cmp	r15, r13
	jl	$LL4@generate_k
	mov	r15, QWORD PTR [rsp+176]
	mov	rdi, QWORD PTR [rsp+248]
$LN482@generate_k:
	mov	r12, QWORD PTR [rsp+192]
	mov	r13, QWORD PTR [rsp+184]
$LN3@generate_k:
; Line 232
	add	rsp, 200				; 000000c8H
	pop	r14
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ENDP ; KnightOptimizations::generate_knight_moves_template
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
_TEXT	SEGMENT
pos$ = 128
$T1 = 128
$T2 = 128
$T3 = 128
$T4 = 128
list$ = 136
us$ = 144
$T5 = 152
?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z PROC ; KingOptimizations::generate_king_moves_optimized, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\king_optimizations.hpp
; Line 190
$LN320:
	mov	rax, rsp
	push	rbx
	push	rbp
	push	rdi
	push	r14
	sub	rsp, 88					; 00000058H
	movzx	ebp, r8b
	mov	rdi, rdx
	mov	rbx, rcx
; Line 191
	mov	r14d, DWORD PTR [rcx+rbp*4+136]
; Line 192
	cmp	r14d, -1
	je	$LN22@generate_k
	mov	QWORD PTR [rax+16], rsi
; Line 195
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	mov	QWORD PTR [rax-40], r12
	lea	rsi, OFFSET FLAT:?KING_DELTAS@@3V?$array@H$07@std@@B ; KING_DELTAS
	mov	QWORD PTR [rax-48], r13
	xor	r12d, r12d
	mov	QWORD PTR [rax-56], r15
	lea	r13, OFFSET FLAT:?KING_DELTAS@@3V?$array@H$07@std@@B+32
	mov	r15d, 2
	npad	10
$LL4@generate_k:
; Line 196
	mov	edx, DWORD PTR [rsi]
	add	edx, r14d
; Line 197
	cmp	edx, -1
	je	$LN2@generate_k
	cmp	edx, 119				; 00000077H
	ja	$LN2@generate_k
	movsxd	r9, edx
	cmp	BYTE PTR [r9+rcx], r12b
	je	$LN2@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [r9+rbx]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\king_optimizations.hpp
; Line 200
	test	r9b, r9b
	jne	SHORT $LN7@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], r12b
	xor	r9d, r9d
	mov	BYTE PTR [rsp+40], r12b
	xor	r8d, r8d
	mov	ecx, r14d
	mov	BYTE PTR [rsp+32], r12b
	mov	DWORD PTR $T1[rsp+4], r12d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rdi+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rdi+2048]
	mov	DWORD PTR [rdi+rax*8+4], r12d
; Line 29
	inc	DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\king_optimizations.hpp
; Line 202
	jmp	SHORT $LN269@generate_k
$LN7@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN51@generate_k
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN52@generate_k
$LN51@generate_k:
	movzx	eax, r15b
$LN52@generate_k:
; Line 37
	test	bpl, bpl
	jne	SHORT $LN59@generate_k
	mov	cl, 1
	jmp	SHORT $LN60@generate_k
$LN59@generate_k:
	cmp	bpl, 1
	mov	ecx, r15d
	cmove	ecx, r12d
$LN60@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\king_optimizations.hpp
; Line 202
	cmp	al, cl
	jne	SHORT $LN269@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], r12b
	and	al, 7
	mov	BYTE PTR [rsp+40], r12b
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, r14d
	mov	DWORD PTR $T5[rsp+4], r12d
	cmove	r8d, r12d
	mov	BYTE PTR [rsp+32], r12b
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\king_optimizations.hpp
; Line 203
	mov	r8, rbx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T5[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\king_optimizations.hpp
; Line 203
	lea	rdx, QWORD PTR $T5[rsp]
	mov	rcx, rdi
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN269@generate_k:
; Line 195
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
$LN2@generate_k:
	add	rsi, 4
	cmp	rsi, r13
	jne	$LL4@generate_k
; Line 209
	movzx	ecx, BYTE PTR [rbx+128]
	mov	r13, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+136]
	test	cl, cl
	je	$LN315@generate_k
; Line 212
	test	bpl, bpl
	jne	SHORT $LN24@generate_k
	cmp	r14d, 25
	jmp	SHORT $LN316@generate_k
$LN24@generate_k:
	cmp	r14d, 95				; 0000005fH
$LN316@generate_k:
; Line 215
	sete	al
	test	al, al
	je	$LN315@generate_k
; Line 218
	test	bpl, bpl
	mov	eax, 12
	mov	edx, 3
	cmove	eax, edx
; Line 220
	test	al, cl
	je	$LN315@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	test	bpl, bpl
	jne	$LN34@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\king_optimizations.hpp
; Line 229
	test	cl, 1
	je	$LN16@generate_k
	cmp	BYTE PTR [rbx+28], 4
	jne	$LN16@generate_k
	cmp	BYTE PTR [rbx+26], r12b
	jne	$LN16@generate_k
	cmp	BYTE PTR [rbx+27], r12b
	jne	$LN16@generate_k
; Line 234
	mov	r8b, 1
	mov	rdx, rbx
	mov	ecx, 25
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	$LN16@generate_k
	mov	r8b, 1
	mov	rdx, rbx
	mov	ecx, 26
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	SHORT $LN16@generate_k
	mov	r8b, 1
	mov	rdx, rbx
	mov	ecx, 27
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	SHORT $LN16@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], 1
	xor	r9d, r9d
	mov	BYTE PTR [rsp+40], r12b
	xor	r8d, r8d
	mov	edx, 27
	mov	BYTE PTR [rsp+32], r12b
	mov	ecx, 25
	mov	DWORD PTR $T2[rsp+4], r12d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 62
	movsxd	rcx, DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 62
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rdi+rcx*8], rax
; Line 63
	movsxd	rax, DWORD PTR [rdi+2048]
	mov	DWORD PTR [rdi+rax*8+4], 50000		; 0000c350H
; Line 64
	inc	DWORD PTR [rdi+2048]
$LN16@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\king_optimizations.hpp
; Line 245
	test	BYTE PTR [rbx+128], r15b
	je	$LN315@generate_k
	cmp	BYTE PTR [rbx+21], 4
	jne	$LN315@generate_k
	cmp	BYTE PTR [rbx+24], r12b
	jne	$LN315@generate_k
	cmp	BYTE PTR [rbx+23], r12b
	jne	$LN315@generate_k
	cmp	BYTE PTR [rbx+22], r12b
	jne	$LN315@generate_k
; Line 250
	mov	r8b, 1
	mov	rdx, rbx
	mov	ecx, 25
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	$LN315@generate_k
	mov	r8b, 1
	mov	rdx, rbx
	mov	ecx, 24
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	$LN315@generate_k
	mov	r8b, 1
	mov	rdx, rbx
	mov	ecx, 23
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	$LN315@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	edx, 23
	mov	ecx, 25
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\king_optimizations.hpp
; Line 256
	jmp	$LN317@generate_k
$LN34@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	cmp	bpl, 1
	cmove	r15d, r12d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\king_optimizations.hpp
; Line 260
	test	cl, 4
	je	$LN20@generate_k
	cmp	BYTE PTR [rbx+98], 12
	jne	$LN20@generate_k
	cmp	BYTE PTR [rbx+96], r12b
	jne	$LN20@generate_k
	cmp	BYTE PTR [rbx+97], r12b
	jne	$LN20@generate_k
; Line 265
	movzx	r8d, r15b
	mov	rdx, rbx
	mov	ecx, 95					; 0000005fH
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	$LN20@generate_k
	movzx	r8d, r15b
	mov	rdx, rbx
	mov	ecx, 96					; 00000060H
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	SHORT $LN20@generate_k
	movzx	r8d, r15b
	mov	rdx, rbx
	mov	ecx, 97					; 00000061H
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	SHORT $LN20@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], 1
	xor	r9d, r9d
	mov	BYTE PTR [rsp+40], r12b
	xor	r8d, r8d
	mov	edx, 97					; 00000061H
	mov	BYTE PTR [rsp+32], r12b
	mov	ecx, 95					; 0000005fH
	mov	DWORD PTR $T3[rsp+4], r12d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 62
	movsxd	rcx, DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T3[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 62
	mov	rax, QWORD PTR $T3[rsp]
	mov	QWORD PTR [rdi+rcx*8], rax
; Line 63
	movsxd	rax, DWORD PTR [rdi+2048]
	mov	DWORD PTR [rdi+rax*8+4], 50000		; 0000c350H
; Line 64
	inc	DWORD PTR [rdi+2048]
$LN20@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\king_optimizations.hpp
; Line 276
	test	BYTE PTR [rbx+128], 8
	je	$LN315@generate_k
	cmp	BYTE PTR [rbx+91], 12
	jne	$LN315@generate_k
	cmp	BYTE PTR [rbx+94], r12b
	jne	$LN315@generate_k
	cmp	BYTE PTR [rbx+93], r12b
	jne	$LN315@generate_k
	cmp	BYTE PTR [rbx+92], r12b
	jne	$LN315@generate_k
; Line 281
	movzx	r8d, r15b
	mov	rdx, rbx
	mov	ecx, 95					; 0000005fH
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	$LN315@generate_k
	movzx	r8d, r15b
	mov	rdx, rbx
	mov	ecx, 94					; 0000005eH
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	SHORT $LN315@generate_k
	movzx	r8d, r15b
	mov	rdx, rbx
	mov	ecx, 93					; 0000005dH
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	SHORT $LN315@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	edx, 93					; 0000005dH
	mov	ecx, 95					; 0000005fH
$LN317@generate_k:
	mov	BYTE PTR [rsp+48], 1
	xor	r9d, r9d
	mov	BYTE PTR [rsp+40], r12b
	xor	r8d, r8d
	mov	BYTE PTR [rsp+32], r12b
	mov	DWORD PTR $T4[rsp+4], r12d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 62
	movsxd	rcx, DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T4[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 62
	mov	rax, QWORD PTR $T4[rsp]
	mov	QWORD PTR [rdi+rcx*8], rax
; Line 63
	movsxd	rax, DWORD PTR [rdi+2048]
	mov	DWORD PTR [rdi+rax*8+4], 50000		; 0000c350H
; Line 64
	inc	DWORD PTR [rdi+2048]
$LN315@generate_k:
	mov	r12, QWORD PTR [rsp+80]
	mov	r15, QWORD PTR [rsp+64]
$LN22@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\king_optimizations.hpp
; Line 288
	add	rsp, 88					; 00000058H
	pop	r14
	pop	rdi
	pop	rbp
	pop	rbx
	ret	0
?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ENDP ; KingOptimizations::generate_king_moves_optimized
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@H$02@std@@QEBAAEBH_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@H$02@std@@QEBAAEBH_K@Z PROC			; std::array<int,3>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rax, QWORD PTR [rcx+rdx*4]
; Line 544
	ret	0
??A?$array@H$02@std@@QEBAAEBH_K@Z ENDP			; std::array<int,3>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
$T3 = 80
$T4 = 88
$T5 = 96
$T6 = 104
tv938 = 112
pos$ = 192
tv1002 = 192
list$ = 200
us$ = 208
direction$1$ = 208
tv960 = 216
?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z PROC ; PawnOptimizations::generate_pawn_moves_optimized, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 83
$LN227:
	mov	r11, rsp
	push	rbx
	push	rbp
	push	r15
	sub	rsp, 160				; 000000a0H
	movzx	r15d, r8b
	mov	rbp, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	imul	rax, r15, 28
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 83
	mov	rbx, rdx
; Line 84
	mov	edx, r15d
	movsxd	rcx, DWORD PTR [rax+rcx+780]
; Line 87
	test	ecx, ecx
	je	$LN3@generate_p
	mov	QWORD PTR [r11+16], rsi
; Line 90
	test	r8b, r8b
	mov	QWORD PTR [r11-40], r12
	mov	eax, 10
	mov	QWORD PTR [r11-48], r13
	mov	esi, -10
	cmove	esi, eax
; Line 98
	mov	QWORD PTR tv960[rsp], rcx
	test	r15b, r15b
	mov	DWORD PTR direction$1$[rsp], esi
	mov	eax, 6
	mov	r8d, 1
	cmove	eax, r8d
	mov	r12d, 21
	mov	DWORD PTR tv1002[rsp], eax
	mov	r13d, 28
	mov	eax, 91					; 0000005bH
	cmove	r12d, eax
	mov	eax, 98					; 00000062H
	cmove	r13d, eax
	test	ecx, ecx
	jle	$LN222@generate_p
	mov	QWORD PTR [r11-56], r14
	lea	r8, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
	imul	r14, rdx, 280				; 00000118H
	mov	rax, rcx
	mov	QWORD PTR [rsp+152], rdi
	add	r14, 256				; 00000100H
	add	r14, rbp
	mov	QWORD PTR tv938[rsp], r14
	xor	r11d, r11d
	npad	8
$LL4@generate_p:
; Line 99
	movsxd	r14, DWORD PTR [r14]
; Line 100
	cmp	r14d, -1
	je	$LN2@generate_p
; Line 103
	lea	edi, DWORD PTR [r14+rsi]
; Line 104
	cmp	edi, -1
	je	$LN11@generate_p
	cmp	edi, 119				; 00000077H
	ja	$LN11@generate_p
	movsxd	rax, edi
	cmp	BYTE PTR [rax+r8+240], 0
	je	$LN11@generate_p
	cmp	BYTE PTR [rax+rbp], 0
	jne	$LN11@generate_p
; Line 106
	cmp	edi, r12d
	jl	SHORT $LN8@generate_p
	cmp	edi, r13d
	jg	SHORT $LN8@generate_p
; Line 108
	xor	r9d, r9d
	mov	r8d, edi
	mov	edx, r14d
	mov	rcx, rbx
	call	?generate_promotion_batch@PawnOptimizations@@YAXAEAUS_MOVELIST@@HHW4PieceType@@@Z ; PawnOptimizations::generate_promotion_batch
; Line 109
	xor	r11d, r11d
	jmp	$LN223@generate_p
$LN8@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], 0
	xor	r9d, r9d
	mov	BYTE PTR [rsp+40], 0
	xor	r8d, r8d
	mov	edx, edi
	mov	BYTE PTR [rsp+32], 0
	mov	ecx, r14d
	mov	DWORD PTR $T1[rsp+4], r11d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 85
	lea	r8, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 28
	xor	r11d, r11d
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rbx+rcx*8], rax
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r11d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 85
	cmp	r14d, 119				; 00000077H
	ja	SHORT $LN114@generate_p
; Line 86
	movzx	ecx, BYTE PTR [r14+r8+120]
	jmp	SHORT $LN112@generate_p
$LN114@generate_p:
; Line 85
	mov	cl, 255					; 000000ffH
$LN112@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 113
	cmp	cl, BYTE PTR tv1002[rsp]
	jne	SHORT $LN11@generate_p
; Line 114
	lea	edx, DWORD PTR [rdi+rsi]
; Line 115
	cmp	edx, -1
	je	SHORT $LN11@generate_p
	cmp	edx, 119				; 00000077H
	ja	SHORT $LN11@generate_p
	movsxd	rax, edx
	cmp	BYTE PTR [rax+r8+240], r11b
	je	SHORT $LN11@generate_p
	cmp	BYTE PTR [rax+rbp], r11b
	jne	SHORT $LN11@generate_p
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], r11b
	xor	r9d, r9d
	mov	BYTE PTR [rsp+40], r11b
	xor	r8d, r8d
	mov	ecx, r14d
	mov	BYTE PTR [rsp+32], 1
	mov	DWORD PTR $T2[rsp+4], r11d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r11d, r11d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r11d
; Line 29
	inc	DWORD PTR [rbx+2048]
$LN223@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 123
	lea	r8, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
$LN11@generate_p:
	lea	edx, DWORD PTR [rdi-1]
; Line 124
	lea	esi, DWORD PTR [rdi+1]
; Line 127
	cmp	edx, -1
	je	$LN17@generate_p
	cmp	edx, 119				; 00000077H
	ja	$LN17@generate_p
	movsxd	r10, edi
	cmp	BYTE PTR [r10+r8+239], 0
	je	$LN17@generate_p
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r10d, BYTE PTR [r10+rbp-1]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 129
	test	r10b, r10b
	je	$LN13@generate_p
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r10b, 255				; 000000ffH
	je	SHORT $LN84@generate_p
	movzx	eax, r10b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN85@generate_p
$LN84@generate_p:
	mov	al, 2
$LN85@generate_p:
; Line 37
	test	r15b, r15b
	jne	SHORT $LN92@generate_p
	mov	cl, 1
	jmp	SHORT $LN93@generate_p
$LN92@generate_p:
	cmp	r15b, 1
	mov	ecx, 2
	cmove	ecx, r11d
$LN93@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 129
	cmp	al, cl
	jne	SHORT $LN13@generate_p
; Line 131
	cmp	edx, r12d
	jl	SHORT $LN122@generate_p
	cmp	edx, r13d
	jg	SHORT $LN122@generate_p
; Line 132
	movzx	eax, r10b
	mov	r8d, edx
	and	al, 7
	mov	edx, r14d
	cmp	r10b, 255				; 000000ffH
	movzx	r9d, al
	mov	rcx, rbx
	cmove	r9d, r11d
	call	?generate_promotion_batch@PawnOptimizations@@YAXAEAUS_MOVELIST@@HHW4PieceType@@@Z ; PawnOptimizations::generate_promotion_batch
; Line 133
	jmp	$LN17@generate_p
$LN122@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r10b
; Line 49
	mov	BYTE PTR [rsp+48], 0
	and	al, 7
	mov	BYTE PTR [rsp+40], 0
	cmp	r10b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, r14d
	mov	DWORD PTR $T3[rsp+4], r11d
	cmove	r8d, r11d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 134
	mov	r8, rbp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T3[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 134
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
; Line 135
	jmp	SHORT $LN17@generate_p
$LN13@generate_p:
; Line 136
	cmp	edx, DWORD PTR [rbp+124]
	jne	SHORT $LN17@generate_p
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	r9b, 1
	mov	BYTE PTR [rsp+48], 0
	movzx	r8d, r9b
	mov	BYTE PTR [rsp+40], 0
	mov	ecx, r14d
	mov	DWORD PTR $T4[rsp+4], r11d
	mov	BYTE PTR [rsp+32], 0
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 42
	movsxd	rcx, DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T4[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 42
	mov	rax, QWORD PTR $T4[rsp]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 43
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], 1000105	; 000f42a9H
; Line 44
	inc	DWORD PTR [rbx+2048]
$LN17@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 142
	lea	r8, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
	cmp	esi, -1
	je	$LN183@generate_p
	cmp	esi, 119				; 00000077H
	ja	$LN183@generate_p
	movsxd	rcx, edi
	cmp	BYTE PTR [rcx+r8+241], 0
	je	$LN183@generate_p
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rcx+rbp+1]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 144
	test	cl, cl
	je	$LN184@generate_p
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN72@generate_p
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN73@generate_p
$LN72@generate_p:
	mov	al, 2
$LN73@generate_p:
; Line 37
	test	r15b, r15b
	jne	SHORT $LN80@generate_p
	mov	dl, 1
	xor	r10d, r10d
	jmp	SHORT $LN81@generate_p
$LN80@generate_p:
	cmp	r15b, 1
	mov	edx, 2
	mov	r10d, 0
	cmove	edx, r10d
$LN81@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 144
	cmp	al, dl
	jne	SHORT $LN19@generate_p
; Line 146
	cmp	esi, r12d
	jl	SHORT $LN134@generate_p
	cmp	esi, r13d
	jg	SHORT $LN134@generate_p
; Line 147
	movzx	eax, cl
	mov	r8d, esi
	and	al, 7
	mov	edx, r14d
	cmp	cl, 255					; 000000ffH
	movzx	r9d, al
	mov	rcx, rbx
	cmove	r9d, r10d
	call	?generate_promotion_batch@PawnOptimizations@@YAXAEAUS_MOVELIST@@HHW4PieceType@@@Z ; PawnOptimizations::generate_promotion_batch
; Line 148
	jmp	$LN224@generate_p
$LN134@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
; Line 49
	mov	BYTE PTR [rsp+48], 0
	and	al, 7
	mov	BYTE PTR [rsp+40], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	edx, esi
	mov	DWORD PTR $T5[rsp+4], r10d
	cmove	r8d, r10d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r14d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 149
	mov	r8, rbp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T5[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 149
	lea	rdx, QWORD PTR $T5[rsp]
	mov	rcx, rbx
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
; Line 150
	jmp	SHORT $LN224@generate_p
$LN184@generate_p:
; Line 144
	xor	r10d, r10d
$LN19@generate_p:
; Line 151
	cmp	esi, DWORD PTR [rbp+124]
	jne	SHORT $LN183@generate_p
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	r9b, 1
	mov	BYTE PTR [rsp+48], 0
	movzx	r8d, r9b
	mov	BYTE PTR [rsp+40], 0
	mov	edx, esi
	mov	DWORD PTR $T6[rsp+4], r10d
	mov	ecx, r14d
	mov	BYTE PTR [rsp+32], 0
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 42
	movsxd	rcx, DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T6[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 42
	mov	rax, QWORD PTR $T6[rsp]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 43
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], 1000105	; 000f42a9H
; Line 44
	inc	DWORD PTR [rbx+2048]
$LN224@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 98
	lea	r8, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
$LN183@generate_p:
	mov	rax, QWORD PTR tv960[rsp]
	xor	r11d, r11d
	mov	esi, DWORD PTR direction$1$[rsp]
$LN2@generate_p:
	mov	r14, QWORD PTR tv938[rsp]
	add	r14, 4
	sub	rax, 1
	mov	QWORD PTR tv938[rsp], r14
	mov	QWORD PTR tv960[rsp], rax
	jne	$LL4@generate_p
	mov	r14, QWORD PTR [rsp+128]
	mov	rdi, QWORD PTR [rsp+152]
$LN222@generate_p:
	mov	r12, QWORD PTR [rsp+144]
	mov	rsi, QWORD PTR [rsp+200]
	mov	r13, QWORD PTR [rsp+136]
$LN3@generate_p:
; Line 156
	add	rsp, 160				; 000000a0H
	pop	r15
	pop	rbp
	pop	rbx
	ret	0
?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ENDP ; PawnOptimizations::generate_pawn_moves_optimized
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_promotion_batch@PawnOptimizations@@YAXAEAUS_MOVELIST@@HHW4PieceType@@@Z
_TEXT	SEGMENT
move$1 = 64
list$ = 112
from$ = 120
to$ = 128
captured$ = 136
?generate_promotion_batch@PawnOptimizations@@YAXAEAUS_MOVELIST@@HHW4PieceType@@@Z PROC ; PawnOptimizations::generate_promotion_batch, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 40
$LN43:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	xor	esi, esi
	movzx	ebp, r9b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	mov	DWORD PTR move$1[rsp+4], esi
	lea	r12, OFFSET FLAT:?PROMOTION_PIECES@PawnOptimizations@@3QBW4PieceType@@B
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 40
	mov	r14d, r8d
	mov	r15d, edx
	mov	rdi, rcx
	npad	8
$LL4@generate_p:
; Line 47
	movzx	ebx, BYTE PTR [rsi+r12]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	xor	r9d, r9d
	mov	BYTE PTR [rsp+48], 0
	movzx	r8d, bpl
	mov	BYTE PTR [rsp+40], bl
	mov	edx, r14d
	mov	ecx, r15d
	mov	BYTE PTR [rsp+32], 0
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 54
	mov	edx, ebx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR move$1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\pawn_optimizations.hpp
; Line 51
	mov	eax, 2000000				; 001e8480H
; Line 54
	sub	edx, 2
	je	SHORT $LN12@generate_p
	sub	edx, 1
	je	SHORT $LN11@generate_p
	sub	edx, 1
	je	SHORT $LN10@generate_p
	cmp	edx, 1
	jne	SHORT $LN13@generate_p
; Line 55
	mov	eax, 2090000				; 001fe410H
	jmp	SHORT $LN13@generate_p
$LN10@generate_p:
; Line 56
	mov	eax, 2050000				; 001f47d0H
	jmp	SHORT $LN13@generate_p
$LN11@generate_p:
; Line 57
	mov	eax, 2035000				; 001f0d38H
	jmp	SHORT $LN13@generate_p
$LN12@generate_p:
; Line 58
	mov	eax, 2030000				; 001ef9b0H
$LN13@generate_p:
; Line 63
	test	bpl, bpl
	je	SHORT $LN20@generate_p
; Line 64
	mov	edx, ebp
	sub	edx, 1
	je	SHORT $LN19@generate_p
	sub	edx, 1
	je	SHORT $LN18@generate_p
	sub	edx, 1
	je	SHORT $LN17@generate_p
	sub	edx, 1
	je	SHORT $LN16@generate_p
	cmp	edx, 1
	jne	SHORT $LN20@generate_p
; Line 65
	add	eax, 9000				; 00002328H
	jmp	SHORT $LN20@generate_p
$LN16@generate_p:
; Line 66
	add	eax, 5000				; 00001388H
	jmp	SHORT $LN20@generate_p
$LN17@generate_p:
; Line 67
	add	eax, 3500				; 00000dacH
	jmp	SHORT $LN20@generate_p
$LN18@generate_p:
; Line 68
	add	eax, 3000				; 00000bb8H
	jmp	SHORT $LN20@generate_p
$LN19@generate_p:
; Line 69
	add	eax, 1000				; 000003e8H
$LN20@generate_p:
; Line 75
	movsxd	rdx, DWORD PTR [rdi+2048]
	inc	rsi
	mov	rcx, QWORD PTR move$1[rsp]
	mov	QWORD PTR [rdi+rdx*8], rcx
; Line 76
	movsxd	rcx, DWORD PTR [rdi+2048]
	mov	DWORD PTR [rdi+rcx*8+4], eax
; Line 77
	inc	DWORD PTR [rdi+2048]
	cmp	rsi, 4
	jl	$LL4@generate_p
; Line 79
	lea	r11, QWORD PTR [rsp+80]
	mov	rbx, QWORD PTR [r11+32]
	mov	rbp, QWORD PTR [r11+40]
	mov	rsi, QWORD PTR [r11+48]
	mov	rdi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r12
	ret	0
?generate_promotion_batch@PawnOptimizations@@YAXAEAUS_MOVELIST@@HHW4PieceType@@@Z ENDP ; PawnOptimizations::generate_promotion_batch
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z
_TEXT	SEGMENT
pseudo_moves$ = 32
__$ArrayPad$ = 2096
pos$ = 2144
list$ = 2152
?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z PROC ; generate_legal_moves_enhanced, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 248
$LN57:
	mov	QWORD PTR [rsp+32], rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 2112				; 00000840H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rsi, rcx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 20
	lea	rax, QWORD PTR pseudo_moves$[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 248
	mov	ecx, 256				; 00000100H
	mov	rbx, rdx
	xor	ebp, ebp
$LL45@generate_l:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	mov	QWORD PTR [rax], rbp
	lea	rax, QWORD PTR [rax+8]
	sub	rcx, 1
	jne	SHORT $LL45@generate_l
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 16
	movzx	edi, BYTE PTR [rsi+120]
; Line 20
	lea	rdx, QWORD PTR pseudo_moves$[rsp]
	movzx	r8d, dil
	mov	DWORD PTR pseudo_moves$[rsp+2048], ebp
	mov	rcx, rsi
	call	?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; PawnOptimizations::generate_pawn_moves_optimized
; Line 21
	movzx	r8d, dil
	lea	rdx, QWORD PTR pseudo_moves$[rsp]
	mov	rcx, rsi
	call	?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; KnightOptimizations::generate_knight_moves_template
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 209
	movzx	r8d, dil
	lea	rdx, QWORD PTR pseudo_moves$[rsp]
	mov	rcx, rsi
	call	?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; SlidingPieceOptimizations::generate_bishop_moves_optimized
; Line 212
	movzx	r8d, dil
	lea	rdx, QWORD PTR pseudo_moves$[rsp]
	mov	rcx, rsi
	call	?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; SlidingPieceOptimizations::generate_rook_moves_optimized
; Line 215
	movzx	r8d, dil
	lea	rdx, QWORD PTR pseudo_moves$[rsp]
	mov	rcx, rsi
	call	?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; SlidingPieceOptimizations::generate_queen_moves_optimized
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 24
	movzx	r8d, dil
	lea	rdx, QWORD PTR pseudo_moves$[rsp]
	mov	rcx, rsi
	call	?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; KingOptimizations::generate_king_moves_optimized
; Line 255
	mov	edi, ebp
	mov	DWORD PTR [rbx+2048], ebp
	cmp	DWORD PTR pseudo_moves$[rsp+2048], ebp
	jle	$LN3@generate_l
	mov	QWORD PTR [rsp+2160], r14
	lea	r14, QWORD PTR pseudo_moves$[rsp]
	npad	13
$LL4@generate_l:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 75
	movsxd	rax, edi
	lea	rdx, QWORD PTR pseudo_moves$[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 256
	mov	rcx, rsi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 75
	lea	rdx, QWORD PTR [rdx+rax*8]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 256
	call	?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z ; Position::make_move_with_undo
; Line 259
	movzx	ecx, BYTE PTR [rsi+120]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	test	cl, cl
	jne	$LN25@generate_l
	mov	al, 1
$LN29@generate_l:
	cmp	al, 1
	mov	r8d, 2
	cmove	r8d, ebp
$LN30@generate_l:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 260
	movzx	ecx, al
	mov	rdx, rsi
	mov	ecx, DWORD PTR [rsi+rcx*4+136]
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	SHORT $LN5@generate_l
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
	mov	rax, QWORD PTR [r14]
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], ebp
; Line 29
	inc	DWORD PTR [rbx+2048]
$LN5@generate_l:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 263
	mov	rcx, rsi
	call	?undo_move@Position@@QEAA_NXZ		; Position::undo_move
	inc	edi
	add	r14, 8
	cmp	edi, DWORD PTR pseudo_moves$[rsp+2048]
	jl	SHORT $LL4@generate_l
; Line 255
	mov	r14, QWORD PTR [rsp+2160]
$LN3@generate_l:
; Line 265
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+2168]
	add	rsp, 2112				; 00000840H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN25@generate_l:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	cmp	cl, 1
	mov	eax, 2
	cmove	eax, ebp
	jne	$LN29@generate_l
	mov	r8b, 1
	jmp	$LN30@generate_l
?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z ENDP ; generate_legal_moves_enhanced
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
tv719 = 80
$T3 = 88
pos$ = 160
list$ = 168
us$ = 176
piece_type$ = 184
from$1$ = 184
directions$ = 192
num_directions$ = 200
?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z PROC ; generate_sliding_moves, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 125
$LN158:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	push	rsi
	sub	rsp, 136				; 00000088H
; Line 132
	movsxd	rsi, DWORD PTR num_directions$[rsp]
	mov	rbx, rdx
	movzx	eax, r8b
	mov	r11, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	imul	rdx, rax, 7
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 126
	movzx	r9d, r9b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	add	r9, rdx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 128
	movsxd	rcx, DWORD PTR [rcx+r9*4+776]
	mov	QWORD PTR $T3[rsp], rcx
	test	rcx, rcx
	jle	$LN3@generate_s
	mov	QWORD PTR [rsp+168], rbp
	lea	rax, QWORD PTR [r9*4+27]
	mov	QWORD PTR [rsp+128], rdi
	add	rax, r9
	mov	QWORD PTR [rsp+120], r12
	xor	r9d, r9d
	mov	QWORD PTR [rsp+112], r13
	mov	QWORD PTR [rsp+104], r14
	lea	rax, QWORD PTR [r11+rax*8]
	mov	QWORD PTR [rsp+96], r15
	mov	QWORD PTR tv719[rsp], rax
$LL4@generate_s:
; Line 129
	mov	r10d, DWORD PTR [rax]
	mov	DWORD PTR from$1$[rsp], r10d
; Line 130
	cmp	r10d, -1
	je	$LN2@generate_s
; Line 132
	mov	r13, r9
	test	rsi, rsi
	jle	$LN2@generate_s
	mov	rax, QWORD PTR directions$[rsp]
	npad	6
$LL7@generate_s:
; Line 133
	movsxd	r14, DWORD PTR [rax+r13*4]
; Line 135
	lea	esi, DWORD PTR [r14+r10]
	cmp	esi, -1
	je	$LN5@generate_s
	movsxd	rdi, esi
	lea	r15, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	add	rdi, r11
	mov	ebp, esi
	sub	r15, r11
$LL10@generate_s:
	cmp	ebp, 119				; 00000077H
	ja	SHORT $LN138@generate_s
	cmp	BYTE PTR [rdi+r15], 0
	je	SHORT $LN138@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ecx, BYTE PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 138
	test	cl, cl
	jne	$LN12@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], cl
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], cl
	mov	edx, esi
	mov	BYTE PTR [rsp+32], cl
	mov	ecx, r10d
	mov	DWORD PTR $T1[rsp+4], r9d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rbx+2048]
; Line 28
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 135
	mov	r10d, DWORD PTR from$1$[rsp]
	add	esi, r14d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 135
	add	ebp, r14d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 135
	add	rdi, r14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	QWORD PTR [rbx+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rbx+2048]
	mov	DWORD PTR [rbx+rax*8+4], r9d
; Line 29
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 135
	cmp	esi, -1
	jne	SHORT $LL10@generate_s
$LN138@generate_s:
; Line 132
	mov	r11, QWORD PTR pos$[rsp]
$LN155@generate_s:
	mov	rax, QWORD PTR directions$[rsp]
$LN5@generate_s:
	movsxd	rsi, DWORD PTR num_directions$[rsp]
	inc	r13
	cmp	r13, rsi
	jl	$LL7@generate_s
	mov	rax, QWORD PTR tv719[rsp]
	mov	rcx, QWORD PTR $T3[rsp]
$LN2@generate_s:
; Line 128
	add	rax, 4
	sub	rcx, 1
	mov	QWORD PTR tv719[rsp], rax
	mov	QWORD PTR $T3[rsp], rcx
	jne	$LL4@generate_s
	mov	r15, QWORD PTR [rsp+96]
	mov	r14, QWORD PTR [rsp+104]
	mov	r13, QWORD PTR [rsp+112]
	mov	r12, QWORD PTR [rsp+120]
	mov	rdi, QWORD PTR [rsp+128]
	mov	rbp, QWORD PTR [rsp+168]
$LN3@generate_s:
; Line 149
	add	rsp, 136				; 00000088H
	pop	rsi
	pop	rbx
	ret	0
$LN12@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN49@generate_s
	movzx	eax, cl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN50@generate_s
$LN49@generate_s:
	mov	al, 2
$LN50@generate_s:
; Line 37
	movzx	r8d, BYTE PTR us$[rsp]
	test	r8b, r8b
	jne	SHORT $LN57@generate_s
	mov	dl, 1
	jmp	SHORT $LN58@generate_s
$LN57@generate_s:
	cmp	r8b, 1
	mov	edx, 2
	cmove	edx, r9d
$LN58@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 141
	cmp	al, dl
	jne	$LN138@generate_s
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, cl
	mov	DWORD PTR $T2[rsp+4], r9d
	and	al, 7
; Line 49
	mov	BYTE PTR [rsp+48], 0
	cmp	cl, 255					; 000000ffH
	movzx	r8d, al
	mov	BYTE PTR [rsp+40], 0
	mov	edx, esi
	cmove	r8d, r9d
	mov	BYTE PTR [rsp+32], 0
	xor	r9d, r9d
	mov	ecx, r10d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 33
	movsxd	rdx, DWORD PTR [rbx+2048]
; Line 35
	mov	r11, QWORD PTR pos$[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 33
	mov	rcx, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rbx+rdx*8], rcx
	mov	ecx, eax
; Line 35
	movzx	r8d, BYTE PTR [r11+120]
	sar	ecx, 14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 67
	and	cl, 15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	test	r8b, r8b
	jne	SHORT $LN77@generate_s
	mov	dl, 1
	xor	r9d, r9d
	jmp	SHORT $LN134@generate_s
$LN77@generate_s:
	cmp	r8b, 1
	mov	edx, 2
	mov	r9d, 0
	cmove	edx, r9d
; Line 125
	jne	SHORT $LN81@generate_s
$LN134@generate_s:
	test	cl, cl
	je	SHORT $LN81@generate_s
; Line 126
	shl	dl, 3
	or	dl, cl
	jmp	SHORT $LN79@generate_s
$LN81@generate_s:
; Line 125
	xor	dl, dl
$LN79@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 35
	and	eax, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	cmp	eax, 120				; 00000078H
	jae	SHORT $LN87@generate_s
	movzx	r8d, BYTE PTR [rax+r11]
	jmp	SHORT $LN88@generate_s
$LN87@generate_s:
	mov	r8b, 255				; 000000ffH
$LN88@generate_s:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	movzx	eax, dl
	lea	rdi, OFFSET FLAT:?PIECE_VALUES_MG@@3V?$array@H$06@std@@B
	and	al, 7
	movzx	ecx, al
	test	dl, dl
	cmove	ecx, r9d
	movzx	eax, cl
	mov	ecx, DWORD PTR [rdi+rax*4]
; Line 119
	lea	eax, DWORD PTR [r8-1]
	cmp	al, 253					; 000000fdH
	ja	SHORT $LN109@generate_s
	and	r8b, 7
	jmp	SHORT $LN110@generate_s
$LN109@generate_s:
	xor	r8b, r8b
$LN110@generate_s:
	mov	r10d, DWORD PTR from$1$[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 37
	lea	eax, DWORD PTR [rcx+100000]
	lea	ecx, DWORD PTR [rax+rax*4]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	movzx	edx, r8b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 37
	movsxd	rax, DWORD PTR [rbx+2048]
	add	ecx, ecx
	sub	ecx, DWORD PTR [rdi+rdx*4]
	mov	DWORD PTR [rbx+rax*8+4], ecx
; Line 38
	inc	DWORD PTR [rbx+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 135
	jmp	$LN155@generate_s
?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z ENDP ; generate_sliding_moves
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
_TEXT	SEGMENT
pos$ = 128
$T1 = 128
$T2 = 128
$T3 = 128
$T4 = 128
list$ = 136
us$ = 144
$T5 = 152
?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z PROC ; generate_king_moves, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 173
$LN309:
	mov	rax, rsp
	push	rbx
	push	rbp
	push	rdi
	push	r14
	sub	rsp, 88					; 00000058H
	movzx	r14d, r8b
	mov	rdi, rdx
	mov	rbx, rcx
; Line 174
	mov	ebp, DWORD PTR [rcx+r14*4+136]
; Line 175
	cmp	ebp, -1
	je	$LN17@generate_k
	mov	QWORD PTR [rax+16], rsi
; Line 178
	lea	rsi, OFFSET FLAT:?KING_DELTAS@@3V?$array@H$07@std@@B ; KING_DELTAS
	mov	QWORD PTR [rax-40], r12
	lea	r12, OFFSET FLAT:?KING_DELTAS@@3V?$array@H$07@std@@B+32
	mov	QWORD PTR [rax-48], r13
	lea	r13, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	mov	QWORD PTR [rax-56], r15
	xor	r15d, r15d
	npad	1
$LL4@generate_k:
; Line 179
	mov	edx, DWORD PTR [rsi]
	add	edx, ebp
; Line 180
	cmp	edx, -1
	je	$LN2@generate_k
	cmp	edx, 119				; 00000077H
	ja	$LN2@generate_k
	movsxd	r9, edx
	cmp	BYTE PTR [r9+r13], r15b
	je	$LN2@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [r9+rbx]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 183
	test	r9b, r9b
	jne	SHORT $LN7@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], r15b
	xor	r9d, r9d
	mov	BYTE PTR [rsp+40], r15b
	xor	r8d, r8d
	mov	ecx, ebp
	mov	BYTE PTR [rsp+32], r15b
	mov	DWORD PTR $T1[rsp+4], r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T1[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rdi+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rdi+2048]
	mov	DWORD PTR [rdi+rax*8+4], r15d
; Line 29
	inc	DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 185
	jmp	SHORT $LN2@generate_k
$LN7@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN116@generate_k
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN117@generate_k
$LN116@generate_k:
	mov	al, 2
$LN117@generate_k:
; Line 37
	test	r14b, r14b
	jne	SHORT $LN124@generate_k
	mov	cl, 1
	jmp	SHORT $LN125@generate_k
$LN124@generate_k:
	cmp	r14b, 1
	mov	ecx, 2
	cmove	ecx, r15d
$LN125@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 185
	cmp	al, cl
	jne	SHORT $LN2@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], r15b
	and	al, 7
	mov	BYTE PTR [rsp+40], r15b
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, ebp
	mov	DWORD PTR $T5[rsp+4], r15d
	cmove	r8d, r15d
	mov	BYTE PTR [rsp+32], r15b
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 186
	mov	r8, rbx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T5[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 186
	lea	rdx, QWORD PTR $T5[rsp]
	mov	rcx, rdi
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN2@generate_k:
; Line 178
	add	rsi, 4
	cmp	rsi, r12
	jne	$LL4@generate_k
	mov	r13, QWORD PTR [rsp+72]
	mov	r12, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+136]
; Line 192
	test	r14b, r14b
	jne	$LN10@generate_k
; Line 194
	cmp	ebp, 25
	jne	$LN305@generate_k
; Line 201
	test	BYTE PTR [rbx+128], 1
	je	$LN13@generate_k
	cmp	BYTE PTR [rbx+28], 4
	jne	$LN13@generate_k
	cmp	BYTE PTR [rbx+26], r15b
	jne	$LN13@generate_k
	cmp	BYTE PTR [rbx+27], r15b
	jne	$LN13@generate_k
	mov	r8b, 1
	mov	rdx, rbx
	mov	ecx, ebp
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	$LN13@generate_k
	mov	r8b, 1
	mov	rdx, rbx
	mov	ecx, 26
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	SHORT $LN13@generate_k
	mov	r8b, 1
	mov	rdx, rbx
	mov	ecx, 27
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	SHORT $LN13@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], 1
	xor	r9d, r9d
	mov	BYTE PTR [rsp+40], r15b
	xor	r8d, r8d
	mov	edx, 27
	mov	BYTE PTR [rsp+32], r15b
	mov	ecx, ebp
	mov	DWORD PTR $T2[rsp+4], r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 62
	movsxd	rcx, DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 62
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rdi+rcx*8], rax
; Line 63
	movsxd	rax, DWORD PTR [rdi+2048]
	mov	DWORD PTR [rdi+rax*8+4], 50000		; 0000c350H
; Line 64
	inc	DWORD PTR [rdi+2048]
$LN13@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 213
	test	BYTE PTR [rbx+128], 2
	je	$LN305@generate_k
	cmp	BYTE PTR [rbx+21], 4
	jne	$LN305@generate_k
	cmp	BYTE PTR [rbx+24], r15b
	jne	$LN305@generate_k
	cmp	BYTE PTR [rbx+23], r15b
	jne	$LN305@generate_k
	cmp	BYTE PTR [rbx+22], r15b
	jne	$LN305@generate_k
	mov	r8b, 1
	mov	rdx, rbx
	mov	ecx, 25
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	$LN305@generate_k
	mov	r8b, 1
	mov	rdx, rbx
	mov	ecx, 24
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	$LN305@generate_k
	mov	r8b, 1
	mov	rdx, rbx
	mov	ecx, 23
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	$LN305@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	edx, 23
	mov	ecx, 25
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 218
	jmp	$LN306@generate_k
$LN10@generate_k:
; Line 220
	cmp	ebp, 95					; 0000005fH
	jne	$LN305@generate_k
; Line 227
	test	BYTE PTR [rbx+128], 4
	je	$LN16@generate_k
	cmp	BYTE PTR [rbx+98], 12
	jne	$LN16@generate_k
	cmp	BYTE PTR [rbx+96], r15b
	jne	$LN16@generate_k
	cmp	BYTE PTR [rbx+97], r15b
	jne	$LN16@generate_k
	xor	r8d, r8d
	mov	rdx, rbx
	mov	ecx, ebp
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	$LN16@generate_k
	xor	r8d, r8d
	mov	rdx, rbx
	mov	ecx, 96					; 00000060H
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	SHORT $LN16@generate_k
	xor	r8d, r8d
	mov	rdx, rbx
	mov	ecx, 97					; 00000061H
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	SHORT $LN16@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], 1
	xor	r9d, r9d
	mov	BYTE PTR [rsp+40], r15b
	xor	r8d, r8d
	mov	edx, 97					; 00000061H
	mov	BYTE PTR [rsp+32], r15b
	mov	ecx, ebp
	mov	DWORD PTR $T3[rsp+4], r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 62
	movsxd	rcx, DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T3[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 62
	mov	rax, QWORD PTR $T3[rsp]
	mov	QWORD PTR [rdi+rcx*8], rax
; Line 63
	movsxd	rax, DWORD PTR [rdi+2048]
	mov	DWORD PTR [rdi+rax*8+4], 50000		; 0000c350H
; Line 64
	inc	DWORD PTR [rdi+2048]
$LN16@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 239
	test	BYTE PTR [rbx+128], 8
	je	$LN305@generate_k
	cmp	BYTE PTR [rbx+91], 12
	jne	$LN305@generate_k
	cmp	BYTE PTR [rbx+94], r15b
	jne	$LN305@generate_k
	cmp	BYTE PTR [rbx+93], r15b
	jne	$LN305@generate_k
	cmp	BYTE PTR [rbx+92], r15b
	jne	$LN305@generate_k
	xor	r8d, r8d
	mov	rdx, rbx
	mov	ecx, 95					; 0000005fH
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	$LN305@generate_k
	xor	r8d, r8d
	mov	rdx, rbx
	mov	ecx, 94					; 0000005eH
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	SHORT $LN305@generate_k
	xor	r8d, r8d
	mov	rdx, rbx
	mov	ecx, 93					; 0000005dH
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	jne	SHORT $LN305@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	edx, 93					; 0000005dH
	mov	ecx, 95					; 0000005fH
$LN306@generate_k:
	mov	BYTE PTR [rsp+48], 1
	xor	r9d, r9d
	mov	BYTE PTR [rsp+40], r15b
	xor	r8d, r8d
	mov	BYTE PTR [rsp+32], r15b
	mov	DWORD PTR $T4[rsp+4], r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 62
	movsxd	rcx, DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T4[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 62
	mov	rax, QWORD PTR $T4[rsp]
	mov	QWORD PTR [rdi+rcx*8], rax
; Line 63
	movsxd	rax, DWORD PTR [rdi+2048]
	mov	DWORD PTR [rdi+rax*8+4], 50000		; 0000c350H
; Line 64
	inc	DWORD PTR [rdi+2048]
$LN305@generate_k:
	mov	r15, QWORD PTR [rsp+64]
$LN17@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 245
	add	rsp, 88					; 00000058H
	pop	r14
	pop	rdi
	pop	rbp
	pop	rbx
	ret	0
?generate_king_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ENDP ; generate_king_moves
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_queen_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
_TEXT	SEGMENT
pos$ = 64
list$ = 72
us$ = 80
?generate_queen_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z PROC ; generate_queen_moves, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 168
$LN4:
	sub	rsp, 56					; 00000038H
; Line 170
	lea	rax, OFFSET FLAT:?directions@?1??generate_queen_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z@4QBHB
	mov	DWORD PTR [rsp+40], 8
	mov	r9b, 5
	mov	QWORD PTR [rsp+32], rax
	call	?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z ; generate_sliding_moves
; Line 171
	add	rsp, 56					; 00000038H
	ret	0
?generate_queen_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ENDP ; generate_queen_moves
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_rook_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
_TEXT	SEGMENT
pos$ = 64
list$ = 72
us$ = 80
?generate_rook_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z PROC ; generate_rook_moves, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 163
$LN4:
	sub	rsp, 56					; 00000038H
; Line 165
	lea	rax, OFFSET FLAT:?directions@?1??generate_rook_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z@4QBHB
	mov	DWORD PTR [rsp+40], 4
	mov	r9b, 4
	mov	QWORD PTR [rsp+32], rax
	call	?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z ; generate_sliding_moves
; Line 166
	add	rsp, 56					; 00000038H
	ret	0
?generate_rook_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ENDP ; generate_rook_moves
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_bishop_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
_TEXT	SEGMENT
pos$ = 64
list$ = 72
us$ = 80
?generate_bishop_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z PROC ; generate_bishop_moves, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 158
$LN4:
	sub	rsp, 56					; 00000038H
; Line 160
	lea	rax, OFFSET FLAT:?directions@?1??generate_bishop_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z@4QBHB
	mov	DWORD PTR [rsp+40], 4
	mov	r9b, 3
	mov	QWORD PTR [rsp+32], rax
	call	?generate_sliding_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@W4PieceType@@PEBHH@Z ; generate_sliding_moves
; Line 161
	add	rsp, 56					; 00000038H
	ret	0
?generate_bishop_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ENDP ; generate_bishop_moves
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_knight_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
_TEXT	SEGMENT
$T1 = 64
pos$ = 144
$T2 = 144
list$ = 152
us$ = 160
$T3 = 168
?generate_knight_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z PROC ; generate_knight_moves, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 103
$LN94:
	mov	r11, rsp
	push	rbp
	push	rdi
	push	r12
	push	r14
	sub	rsp, 104				; 00000068H
	movzx	ebp, r8b
	mov	rdi, rdx
	mov	r14, rcx
; Line 104
	mov	edx, ebp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rax, QWORD PTR [rbp+28]
	imul	r9, rax, 28
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 106
	movsxd	r12, DWORD PTR [r9+rcx]
	mov	QWORD PTR $T1[rsp], r12
	test	r12, r12
	jle	$LN3@generate_k
	mov	QWORD PTR [r11+16], rbx
	mov	QWORD PTR [r11-40], rsi
	mov	QWORD PTR [r11-48], r13
	mov	QWORD PTR [r11-56], r15
	imul	r15, rdx, 280				; 00000118H
	add	r15, 296				; 00000128H
	add	r15, rcx
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
	xor	r13d, r13d
	npad	2
$LL4@generate_k:
; Line 107
	mov	esi, DWORD PTR [r15]
; Line 108
	cmp	esi, -1
	je	$LN2@generate_k
; Line 110
	lea	rbx, OFFSET FLAT:?KNIGHT_DELTAS@@3QBHB	; KNIGHT_DELTAS
	lea	r12, OFFSET FLAT:?KNIGHT_DELTAS@@3QBHB+32
	npad	6
$LL7@generate_k:
; Line 111
	mov	edx, DWORD PTR [rbx]
	add	edx, esi
; Line 112
	cmp	edx, -1
	je	$LN5@generate_k
	cmp	edx, 119				; 00000077H
	ja	$LN5@generate_k
	movsxd	r9, edx
	cmp	BYTE PTR [r9+rcx], r13b
	je	$LN5@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	r9d, BYTE PTR [r9+r14]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 115
	test	r9b, r9b
	jne	SHORT $LN10@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], r13b
	xor	r9d, r9d
	mov	BYTE PTR [rsp+40], r13b
	xor	r8d, r8d
	mov	ecx, esi
	mov	BYTE PTR [rsp+32], r13b
	mov	DWORD PTR $T2[rsp+4], r13d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rdi+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rdi+2048]
	mov	DWORD PTR [rdi+rax*8+4], r13d
; Line 29
	inc	DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 117
	jmp	SHORT $LN81@generate_k
$LN10@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN47@generate_k
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN48@generate_k
$LN47@generate_k:
	mov	al, 2
$LN48@generate_k:
; Line 37
	test	bpl, bpl
	jne	SHORT $LN55@generate_k
	mov	cl, 1
	jmp	SHORT $LN56@generate_k
$LN55@generate_k:
	cmp	bpl, 1
	mov	ecx, 2
	cmove	ecx, r13d
$LN56@generate_k:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 117
	cmp	al, cl
	jne	SHORT $LN81@generate_k
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	movzx	eax, r9b
; Line 49
	mov	BYTE PTR [rsp+48], r13b
	and	al, 7
	mov	BYTE PTR [rsp+40], r13b
	cmp	r9b, 255				; 000000ffH
	movzx	r8d, al
	mov	ecx, esi
	mov	DWORD PTR $T3[rsp+4], r13d
	cmove	r8d, r13d
	mov	BYTE PTR [rsp+32], r13b
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 118
	mov	r8, r14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T3[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 118
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, rdi
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
$LN81@generate_k:
; Line 110
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
$LN5@generate_k:
	add	rbx, 4
	cmp	rbx, r12
	jne	$LL7@generate_k
	mov	r12, QWORD PTR $T1[rsp]
$LN2@generate_k:
; Line 106
	add	r15, 4
	sub	r12, 1
	mov	QWORD PTR $T1[rsp], r12
	jne	$LL4@generate_k
	mov	r15, QWORD PTR [rsp+80]
	mov	r13, QWORD PTR [rsp+88]
	mov	rsi, QWORD PTR [rsp+96]
	mov	rbx, QWORD PTR [rsp+152]
$LN3@generate_k:
; Line 123
	add	rsp, 104				; 00000068H
	pop	r14
	pop	r12
	pop	rdi
	pop	rbp
	ret	0
?generate_knight_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ENDP ; generate_knight_moves
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_pawn_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z
_TEXT	SEGMENT
$S2$1 = 64
$T2 = 72
$T3 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
$T8 = 120
$T9 = 128
$T10 = 136
$T11 = 144
$T12 = 152
$T13 = 160
tv2072 = 168
pos$ = 240
$T14 = 240
list$ = 248
us$ = 256
tv2239 = 256
$T15 = 264
?generate_pawn_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z PROC ; generate_pawn_moves, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 43
$LN562:
	mov	r11, rsp
	push	rdi
	push	r12
	push	r13
	sub	rsp, 208				; 000000d0H
	movzx	r13d, r8b
	mov	rdi, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	imul	rax, r13, 28
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 43
	mov	r12, rcx
; Line 44
	mov	edx, r13d
; Line 46
	movsxd	rax, DWORD PTR [rax+rcx+780]
	mov	QWORD PTR $T12[rsp], rax
	test	rax, rax
	jle	$LN3@generate_p
	mov	rcx, QWORD PTR $T12[rsp]
	lea	r8, OFFSET FLAT:__ImageBase
	mov	QWORD PTR [r11+16], rbx
	mov	r9d, 10
	mov	QWORD PTR [r11-32], rbp
	mov	r10d, 1
	mov	QWORD PTR [r11-40], rsi
	mov	QWORD PTR [r11-48], r14
	mov	QWORD PTR [r11-56], r15
	xor	r15d, r15d
	imul	rdx, rdx, 70				; 00000046H
	mov	eax, r15d
	mov	r11d, 7
	mov	QWORD PTR tv2072[rsp], rdx
	mov	QWORD PTR $T13[rsp], rax
	npad	8
$LL4@generate_p:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	add	rax, rdx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 47
	movsxd	r14, DWORD PTR [r12+rax*4+256]
; Line 48
	cmp	r14d, -1
	je	$LN2@generate_p
; Line 51
	test	r13b, r13b
	mov	esi, -10
; Line 52
	mov	ebp, 6
; Line 53
	mov	edx, r15d
	cmove	esi, r9d
	cmove	edx, r11d
	cmove	ebp, r10d
	mov	DWORD PTR tv2239[rsp], edx
; Line 56
	lea	ebx, DWORD PTR [rsi+r14]
; Line 57
	cmp	ebx, -1
	je	$LN518@generate_p
	cmp	ebx, 119				; 00000077H
	ja	$LN518@generate_p
	movsxd	rax, ebx
	cmp	BYTE PTR ?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B[rax+r8+240], 0
	je	$LN518@generate_p
	cmp	BYTE PTR [rax+r12], 0
	jne	$LN518@generate_p
; Line 58
	xor	r9d, r9d
	mov	ecx, r14d
	cmp	BYTE PTR ?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B[rax+r8+120], dl
	mov	edx, ebx
	jne	$LN10@generate_p
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 48
	xor	ebp, ebp
; Line 49
	xor	r8d, r8d
	mov	BYTE PTR [rsp+48], bpl
	mov	BYTE PTR [rsp+40], 5
	mov	BYTE PTR [rsp+32], bpl
	mov	DWORD PTR $T14[rsp+4], ebp
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 48
	movsxd	rdx, DWORD PTR [rdi+2048]
; Line 51
	lea	rsi, OFFSET FLAT:__ImageBase
	mov	r8d, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T14[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 48
	mov	rcx, QWORD PTR $T14[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	r9d, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 48
	sar	r8d, 20
	mov	QWORD PTR [rdi+rdx*8], rcx
	and	r8b, 15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	movzx	ecx, r8b
	and	cl, 7
	test	r8b, r8b
	movzx	edx, cl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 52
	mov	ecx, ebp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	cmove	edx, ebp
	movzx	eax, dl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 51
	imul	edx, DWORD PTR ?PIECE_VALUES_MG@@3V?$array@H$06@std@@B[rsi+rax*4], 100 ; 00000064H
; Line 52
	mov	eax, r9d
	sar	eax, 14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 67
	and	al, 15
; Line 88
	jne	SHORT $LN277@generate_p
; Line 71
	bt	r9d, 18
; Line 88
	jae	SHORT $LN254@generate_p
$LN277@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 125
	test	al, al
	je	SHORT $LN294@generate_p
; Line 119
	and	al, 7
$LN294@generate_p:
; Line 152
	movzx	eax, al
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 55
	mov	eax, DWORD PTR ?PIECE_VALUES_MG@@3V?$array@H$06@std@@B[rsi+rax*4]
	lea	ecx, DWORD PTR [rax+rax*4]
	add	ecx, ecx
$LN254@generate_p:
; Line 57
	movsxd	rax, DWORD PTR [rdi+2048]
	add	edx, 2000000				; 001e8480H
	add	ecx, edx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], bpl
	mov	BYTE PTR [rsp+40], 4
	xor	r9d, r9d
	xor	r8d, r8d
	mov	DWORD PTR $T15[rsp+4], ebp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 57
	mov	DWORD PTR [rdi+rax*8+4], ecx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	edx, ebx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 58
	inc	DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	ecx, r14d
	mov	BYTE PTR [rsp+32], bpl
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 48
	movsxd	rdx, DWORD PTR [rdi+2048]
	mov	r8d, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T15[rsp], eax
	mov	r9d, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 48
	mov	rcx, QWORD PTR $T15[rsp]
	sar	r8d, 20
	mov	QWORD PTR [rdi+rdx*8], rcx
	and	r8b, 15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	movzx	ecx, r8b
	and	cl, 7
	test	r8b, r8b
	movzx	edx, cl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 52
	mov	ecx, ebp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	cmove	edx, ebp
	movzx	eax, dl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 51
	imul	edx, DWORD PTR ?PIECE_VALUES_MG@@3V?$array@H$06@std@@B[rsi+rax*4], 100 ; 00000064H
; Line 52
	mov	eax, r9d
	sar	eax, 14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 67
	and	al, 15
; Line 88
	jne	SHORT $LN330@generate_p
; Line 71
	bt	r9d, 18
; Line 88
	jae	SHORT $LN307@generate_p
$LN330@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 125
	test	al, al
	je	SHORT $LN347@generate_p
; Line 119
	and	al, 7
$LN347@generate_p:
; Line 152
	movzx	eax, al
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 55
	mov	eax, DWORD PTR ?PIECE_VALUES_MG@@3V?$array@H$06@std@@B[rsi+rax*4]
	lea	ecx, DWORD PTR [rax+rax*4]
	add	ecx, ecx
$LN307@generate_p:
; Line 57
	movsxd	rax, DWORD PTR [rdi+2048]
	add	edx, 2000000				; 001e8480H
	add	ecx, edx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], bpl
	mov	BYTE PTR [rsp+40], 3
	xor	r9d, r9d
	xor	r8d, r8d
	mov	DWORD PTR $T2[rsp+4], ebp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 57
	mov	DWORD PTR [rdi+rax*8+4], ecx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	edx, ebx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 58
	inc	DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	ecx, r14d
	mov	BYTE PTR [rsp+32], bpl
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 48
	movsxd	rdx, DWORD PTR [rdi+2048]
	mov	r8d, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T2[rsp], eax
	mov	r9d, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 48
	mov	rcx, QWORD PTR $T2[rsp]
	sar	r8d, 20
	mov	QWORD PTR [rdi+rdx*8], rcx
	and	r8b, 15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	movzx	ecx, r8b
	and	cl, 7
	test	r8b, r8b
	movzx	edx, cl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 52
	mov	ecx, ebp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	cmove	edx, ebp
	movzx	eax, dl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 51
	imul	edx, DWORD PTR ?PIECE_VALUES_MG@@3V?$array@H$06@std@@B[rsi+rax*4], 100 ; 00000064H
; Line 52
	mov	eax, r9d
	sar	eax, 14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 67
	and	al, 15
; Line 88
	jne	SHORT $LN383@generate_p
; Line 71
	bt	r9d, 18
; Line 88
	jae	SHORT $LN360@generate_p
$LN383@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 125
	test	al, al
	je	SHORT $LN400@generate_p
; Line 119
	and	al, 7
$LN400@generate_p:
; Line 152
	movzx	eax, al
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 55
	mov	eax, DWORD PTR ?PIECE_VALUES_MG@@3V?$array@H$06@std@@B[rsi+rax*4]
	lea	ecx, DWORD PTR [rax+rax*4]
	add	ecx, ecx
$LN360@generate_p:
; Line 57
	movsxd	rax, DWORD PTR [rdi+2048]
	add	edx, 2000000				; 001e8480H
	add	ecx, edx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], bpl
	mov	BYTE PTR [rsp+40], 2
	xor	r9d, r9d
	xor	r8d, r8d
	mov	DWORD PTR $T3[rsp+4], ebp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 57
	mov	DWORD PTR [rdi+rax*8+4], ecx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	edx, ebx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 58
	inc	DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	ecx, r14d
	mov	BYTE PTR [rsp+32], bpl
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 48
	movsxd	rdx, DWORD PTR [rdi+2048]
	mov	r8d, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T3[rsp], eax
	mov	r9d, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 48
	mov	rcx, QWORD PTR $T3[rsp]
	sar	r8d, 20
	mov	QWORD PTR [rdi+rdx*8], rcx
	and	r8b, 15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	movzx	ecx, r8b
	and	cl, 7
	test	r8b, r8b
	movzx	edx, cl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 51
	lea	r8, OFFSET FLAT:__ImageBase
; Line 52
	mov	ecx, ebp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	cmove	edx, ebp
	movzx	eax, dl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 51
	imul	edx, DWORD PTR ?PIECE_VALUES_MG@@3V?$array@H$06@std@@B[r8+rax*4], 100 ; 00000064H
; Line 52
	mov	eax, r9d
	sar	eax, 14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 67
	and	al, 15
; Line 88
	jne	SHORT $LN449@generate_p
; Line 71
	bt	r9d, 18
; Line 88
	jae	SHORT $LN426@generate_p
$LN449@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 125
	test	al, al
	je	SHORT $LN466@generate_p
; Line 119
	and	al, 7
$LN466@generate_p:
; Line 152
	movzx	eax, al
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 55
	mov	eax, DWORD PTR ?PIECE_VALUES_MG@@3V?$array@H$06@std@@B[r8+rax*4]
	lea	ecx, DWORD PTR [rax+rax*4]
	add	ecx, ecx
$LN426@generate_p:
; Line 57
	movsxd	rax, DWORD PTR [rdi+2048]
	add	edx, 2000000				; 001e8480H
	add	ecx, edx
	mov	DWORD PTR [rdi+rax*8+4], ecx
; Line 58
	inc	DWORD PTR [rdi+2048]
$LN511@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 78
	mov	edx, DWORD PTR tv2239[rsp]
	jmp	$LN13@generate_p
$LN10@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], 0
	xor	r8d, r8d
	mov	BYTE PTR [rsp+40], 0
	mov	BYTE PTR [rsp+32], 0
	mov	DWORD PTR $T4[rsp+4], r15d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 85
	lea	r8, OFFSET FLAT:__ImageBase
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T4[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T4[rsp]
	mov	QWORD PTR [rdi+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rdi+2048]
	mov	DWORD PTR [rdi+rax*8+4], r15d
; Line 29
	inc	DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 85
	cmp	r14d, 119				; 00000077H
	ja	SHORT $LN416@generate_p
; Line 86
	movzx	ecx, BYTE PTR ?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B[r14+r8+120]
	jmp	SHORT $LN414@generate_p
$LN416@generate_p:
; Line 85
	mov	cl, 255					; 000000ffH
$LN414@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 68
	cmp	cl, bpl
	jne	$LN514@generate_p
; Line 69
	lea	edx, DWORD PTR [rbx+rsi]
; Line 70
	cmp	edx, -1
	je	SHORT $LN514@generate_p
	xor	ebp, ebp
	cmp	edx, 119				; 00000077H
	ja	SHORT $LN511@generate_p
	movsxd	rax, edx
	cmp	BYTE PTR ?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B[rax+r8+240], bpl
	je	$LN511@generate_p
	cmp	BYTE PTR [rax+r12], bpl
	jne	$LN511@generate_p
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], bpl
	xor	r9d, r9d
	mov	BYTE PTR [rsp+40], bpl
	xor	r8d, r8d
	mov	ecx, r14d
	mov	BYTE PTR [rsp+32], 1
	mov	DWORD PTR $T5[rsp+4], ebp
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	movsxd	rcx, DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 68
	lea	r8, OFFSET FLAT:__ImageBase
	mov	edx, DWORD PTR tv2239[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T5[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR $T5[rsp]
	mov	QWORD PTR [rdi+rcx*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rdi+2048]
	mov	DWORD PTR [rdi+rax*8+4], ebp
; Line 29
	inc	DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 68
	jmp	SHORT $LN13@generate_p
$LN514@generate_p:
; Line 78
	mov	edx, DWORD PTR tv2239[rsp]
$LN518@generate_p:
	xor	ebp, ebp
$LN13@generate_p:
	test	r13b, r13b
	lea	r15, QWORD PTR $S2$1[rsp]
	mov	ecx, 9
	mov	eax, -11
	cmove	eax, ecx
	mov	ecx, 11
	mov	DWORD PTR $S2$1[rsp], eax
	mov	eax, -9
	cmove	eax, ecx
	mov	DWORD PTR $S2$1[rsp+4], eax
	npad	11
$LL7@generate_p:
; Line 79
	mov	esi, DWORD PTR [r15]
	add	esi, r14d
; Line 80
	cmp	esi, -1
	je	$LN5@generate_p
	cmp	esi, 119				; 00000077H
	ja	$LN5@generate_p
	movsxd	rbx, esi
	cmp	BYTE PTR ?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B[rbx+r8+240], 0
	je	$LN5@generate_p
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	movzx	ebx, BYTE PTR [rbx+r12]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 83
	test	bl, bl
	je	$LN508@generate_p
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	test	r13b, r13b
	jne	SHORT $LN51@generate_p
	mov	cl, 1
	jmp	SHORT $LN52@generate_p
$LN51@generate_p:
	cmp	r13b, 1
	mov	ecx, 2
	cmove	ecx, ebp
$LN52@generate_p:
; Line 122
	cmp	bl, 255					; 000000ffH
	je	SHORT $LN55@generate_p
	movzx	eax, bl
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN56@generate_p
$LN55@generate_p:
	mov	al, 2
$LN56@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 83
	cmp	al, cl
	jne	$LN508@generate_p
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 86
	movsxd	rax, esi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 85
	cmp	BYTE PTR ?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B[rax+r8+120], dl
	jne	$LN17@generate_p
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	cmp	bl, 255					; 000000ffH
	je	SHORT $LN86@generate_p
	movzx	r8d, bl
	and	r8b, 7
	jmp	SHORT $LN87@generate_p
$LN86@generate_p:
	xor	r8b, r8b
$LN87@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], 0
	xor	r9d, r9d
	mov	BYTE PTR [rsp+40], 5
	mov	edx, esi
	mov	ecx, r14d
	mov	BYTE PTR [rsp+32], 0
	mov	DWORD PTR $T6[rsp+4], ebp
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
	mov	DWORD PTR $T6[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 48
	lea	rbp, QWORD PTR [rdi+2048]
	mov	rcx, QWORD PTR $T6[rsp]
; Line 51
	lea	r10, OFFSET FLAT:__ImageBase
	movsxd	rdx, DWORD PTR [rbp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	r8d, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	mov	r9d, 0
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 48
	mov	QWORD PTR [rdi+rdx*8], rcx
	mov	edx, eax
	sar	edx, 20
	and	dl, 15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	movzx	ecx, dl
	and	cl, 7
	test	dl, dl
	movzx	eax, cl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 52
	mov	ecx, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	cmove	eax, r9d
	movzx	eax, al
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 51
	imul	edx, DWORD PTR ?PIECE_VALUES_MG@@3V?$array@H$06@std@@B[r10+rax*4], 100 ; 00000064H
; Line 52
	mov	eax, r8d
	sar	eax, 14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 67
	and	al, 15
; Line 88
	jne	SHORT $LN120@generate_p
; Line 71
	bt	r8d, 18
; Line 88
	jae	SHORT $LN97@generate_p
	lea	rbp, QWORD PTR [rdi+2048]
$LN120@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 125
	test	al, al
	je	SHORT $LN137@generate_p
; Line 119
	and	al, 7
$LN137@generate_p:
; Line 152
	movzx	eax, al
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 55
	mov	eax, DWORD PTR ?PIECE_VALUES_MG@@3V?$array@H$06@std@@B[r10+rax*4]
	lea	ecx, DWORD PTR [rax+rax*4]
	add	ecx, ecx
$LN97@generate_p:
; Line 57
	movsxd	rax, DWORD PTR [rbp]
	add	ecx, 2000000				; 001e8480H
	add	ecx, edx
	mov	DWORD PTR [rdi+rax*8+4], ecx
; Line 58
	inc	DWORD PTR [rbp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	cmp	bl, 255					; 000000ffH
	je	SHORT $LN147@generate_p
	movzx	r8d, bl
	and	r8b, 7
	jmp	SHORT $LN148@generate_p
$LN147@generate_p:
	xor	r8b, r8b
$LN148@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], r9b
	mov	edx, esi
	mov	BYTE PTR [rsp+40], 4
	mov	ecx, r14d
	mov	BYTE PTR [rsp+32], r9b
	mov	DWORD PTR $T7[rsp+4], r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 88
	lea	rdx, QWORD PTR $T7[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T7[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 88
	mov	rcx, rdi
	call	?add_promotion_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z ; S_MOVELIST::add_promotion_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	cmp	bl, 255					; 000000ffH
	je	SHORT $LN155@generate_p
	movzx	r8d, bl
	and	r8b, 7
	jmp	SHORT $LN156@generate_p
$LN155@generate_p:
	xor	r8b, r8b
$LN156@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], 0
	xor	r9d, r9d
	mov	BYTE PTR [rsp+40], 3
	mov	edx, esi
	mov	ecx, r14d
	mov	BYTE PTR [rsp+32], 0
	mov	DWORD PTR $T8[rsp+4], 0
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 48
	movsxd	rdx, DWORD PTR [rbp]
	mov	r8d, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T8[rsp], eax
	mov	r9d, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 48
	mov	rcx, QWORD PTR $T8[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	mov	ebp, 0
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 48
	sar	r8d, 20
	mov	QWORD PTR [rdi+rdx*8], rcx
	and	r8b, 15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	movzx	ecx, r8b
	and	cl, 7
	test	r8b, r8b
	movzx	edx, cl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 51
	lea	r8, OFFSET FLAT:__ImageBase
; Line 52
	mov	ecx, ebp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	cmove	edx, ebp
	movzx	eax, dl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 51
	imul	edx, DWORD PTR ?PIECE_VALUES_MG@@3V?$array@H$06@std@@B[r8+rax*4], 100 ; 00000064H
; Line 52
	mov	eax, r9d
	sar	eax, 14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 67
	and	al, 15
; Line 88
	jne	SHORT $LN189@generate_p
; Line 71
	bt	r9d, 18
; Line 88
	jae	SHORT $LN166@generate_p
$LN189@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 125
	test	al, al
	je	SHORT $LN206@generate_p
; Line 119
	and	al, 7
$LN206@generate_p:
; Line 152
	movzx	eax, al
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 55
	mov	eax, DWORD PTR ?PIECE_VALUES_MG@@3V?$array@H$06@std@@B[r8+rax*4]
	lea	ecx, DWORD PTR [rax+rax*4]
	add	ecx, ecx
$LN166@generate_p:
; Line 57
	movsxd	rax, DWORD PTR [rdi+2048]
	add	ecx, 2000000				; 001e8480H
	add	ecx, edx
	mov	DWORD PTR [rdi+rax*8+4], ecx
; Line 58
	inc	DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	cmp	bl, 255					; 000000ffH
	je	SHORT $LN216@generate_p
	and	bl, 7
	jmp	SHORT $LN217@generate_p
$LN216@generate_p:
	xor	bl, bl
$LN217@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], bpl
	xor	r9d, r9d
	mov	BYTE PTR [rsp+40], 2
	movzx	r8d, bl
	mov	edx, esi
	mov	BYTE PTR [rsp+32], bpl
	mov	ecx, r14d
	mov	DWORD PTR $T9[rsp+4], ebp
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 90
	lea	rdx, QWORD PTR $T9[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T9[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 90
	mov	rcx, rdi
	call	?add_promotion_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z ; S_MOVELIST::add_promotion_move
; Line 91
	jmp	$LN5@generate_p
$LN17@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	cmp	bl, 255					; 000000ffH
	je	SHORT $LN228@generate_p
	and	bl, 7
	jmp	SHORT $LN229@generate_p
$LN228@generate_p:
	xor	bl, bl
$LN229@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	BYTE PTR [rsp+48], 0
	xor	r9d, r9d
	mov	BYTE PTR [rsp+40], 0
	movzx	r8d, bl
	mov	edx, esi
	mov	BYTE PTR [rsp+32], 0
	mov	ecx, r14d
	mov	DWORD PTR $T10[rsp+4], ebp
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 92
	mov	r8, r12
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T10[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 92
	lea	rdx, QWORD PTR $T10[rsp]
	mov	rcx, rdi
	call	?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ; S_MOVELIST::add_capture_move
; Line 93
	jmp	SHORT $LN5@generate_p
$LN508@generate_p:
; Line 94
	cmp	esi, DWORD PTR [r12+124]
	jne	SHORT $LN5@generate_p
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	r9b, 1
	mov	BYTE PTR [rsp+48], 0
	movzx	r8d, r9b
	mov	BYTE PTR [rsp+40], 0
	mov	edx, esi
	mov	DWORD PTR $T11[rsp+4], ebp
	mov	ecx, r14d
	mov	BYTE PTR [rsp+32], 0
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 42
	movsxd	rcx, DWORD PTR [rdi+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 49
	mov	DWORD PTR $T11[rsp], eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 42
	mov	rax, QWORD PTR $T11[rsp]
	mov	QWORD PTR [rdi+rcx*8], rax
; Line 43
	movsxd	rax, DWORD PTR [rdi+2048]
	mov	DWORD PTR [rdi+rax*8+4], 1000105	; 000f42a9H
; Line 44
	inc	DWORD PTR [rdi+2048]
$LN5@generate_p:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 78
	mov	edx, DWORD PTR tv2239[rsp]
	lea	rax, QWORD PTR $S2$1[rsp+8]
	add	r15, 4
	lea	r8, OFFSET FLAT:__ImageBase
	cmp	r15, rax
	jne	$LL7@generate_p
	mov	rcx, QWORD PTR $T12[rsp]
	lea	r8, OFFSET FLAT:__ImageBase
	mov	rdx, QWORD PTR tv2072[rsp]
	xor	r15d, r15d
	mov	r9d, 10
	mov	r10d, 1
	mov	r11d, 7
$LN2@generate_p:
; Line 46
	mov	rax, QWORD PTR $T13[rsp]
	inc	rax
	mov	QWORD PTR $T13[rsp], rax
	cmp	rax, rcx
	jl	$LL4@generate_p
	mov	r15, QWORD PTR [rsp+176]
	mov	r14, QWORD PTR [rsp+184]
	mov	rsi, QWORD PTR [rsp+192]
	mov	rbp, QWORD PTR [rsp+200]
	mov	rbx, QWORD PTR [rsp+248]
$LN3@generate_p:
; Line 101
	add	rsp, 208				; 000000d0H
	pop	r13
	pop	r12
	pop	rdi
	ret	0
?generate_pawn_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ENDP ; generate_pawn_moves
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?generate_all_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@@Z
_TEXT	SEGMENT
pos$ = 48
list$ = 56
?generate_all_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@@Z PROC ; generate_all_moves, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 13
$LN6:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 14
	mov	DWORD PTR [rdx+2048], 0
	mov	rdi, rdx
; Line 16
	movzx	ebx, BYTE PTR [rcx+120]
	mov	rsi, rcx
; Line 20
	movzx	r8d, bl
	call	?generate_pawn_moves_optimized@PawnOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; PawnOptimizations::generate_pawn_moves_optimized
; Line 21
	movzx	r8d, bl
	mov	rdx, rdi
	mov	rcx, rsi
	call	?generate_knight_moves_template@KnightOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; KnightOptimizations::generate_knight_moves_template
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\sliding_piece_optimizations.hpp
; Line 209
	movzx	r8d, bl
	mov	rdx, rdi
	mov	rcx, rsi
	call	?generate_bishop_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; SlidingPieceOptimizations::generate_bishop_moves_optimized
; Line 212
	movzx	r8d, bl
	mov	rdx, rdi
	mov	rcx, rsi
	call	?generate_rook_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; SlidingPieceOptimizations::generate_rook_moves_optimized
; Line 215
	movzx	r8d, bl
	mov	rdx, rdi
	mov	rcx, rsi
	call	?generate_queen_moves_optimized@SlidingPieceOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; SlidingPieceOptimizations::generate_queen_moves_optimized
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.cpp
; Line 24
	movzx	r8d, bl
	mov	rdx, rdi
	mov	rcx, rsi
; Line 25
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
; Line 24
	jmp	?generate_king_moves_optimized@KingOptimizations@@YAXAEBVPosition@@AEAUS_MOVELIST@@W4Color@@@Z ; KingOptimizations::generate_king_moves_optimized
?generate_all_moves@@YAXAEBVPosition@@AEAUS_MOVELIST@@@Z ENDP ; generate_all_moves
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?size@S_MOVELIST@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?size@S_MOVELIST@@QEBAHXZ PROC				; S_MOVELIST::size, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 79
	mov	eax, DWORD PTR [rcx+2048]
	ret	0
?size@S_MOVELIST@@QEBAHXZ ENDP				; S_MOVELIST::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??AS_MOVELIST@@QEAAAEAUS_MOVE@@H@Z
_TEXT	SEGMENT
this$ = 8
index$ = 16
??AS_MOVELIST@@QEAAAEAUS_MOVE@@H@Z PROC			; S_MOVELIST::operator[], COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 75
	movsxd	rax, edx
	lea	rax, QWORD PTR [rcx+rax*8]
	ret	0
??AS_MOVELIST@@QEAAAEAUS_MOVE@@H@Z ENDP			; S_MOVELIST::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?add_castle_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z
_TEXT	SEGMENT
this$ = 8
move$ = 16
?add_castle_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z PROC	; S_MOVELIST::add_castle_move, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 62
	mov	rax, QWORD PTR [rdx]
	movsxd	r8, DWORD PTR [rcx+2048]
	mov	QWORD PTR [rcx+r8*8], rax
; Line 63
	movsxd	rax, DWORD PTR [rcx+2048]
	mov	DWORD PTR [rcx+rax*8+4], 50000		; 0000c350H
; Line 64
	inc	DWORD PTR [rcx+2048]
; Line 65
	ret	0
?add_castle_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z ENDP	; S_MOVELIST::add_castle_move
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?add_promotion_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z
_TEXT	SEGMENT
this$ = 8
move$ = 16
?add_promotion_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z PROC ; S_MOVELIST::add_promotion_move, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 47
$LN54:
	mov	QWORD PTR [rsp+8], rbx
; Line 48
	mov	rax, QWORD PTR [rdx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rbx, OFFSET FLAT:?PIECE_VALUES_MG@@3V?$array@H$06@std@@B
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 48
	movsxd	r8, DWORD PTR [rcx+2048]
	mov	r9, rcx
	mov	QWORD PTR [rcx+r8*8], rax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	xor	r8d, r8d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 79
	mov	r10d, DWORD PTR [rdx]
	mov	edx, r10d
	sar	edx, 20
	and	dl, 15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	movzx	eax, dl
	and	al, 7
	test	dl, dl
	movzx	ecx, al
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 67
	mov	edx, r10d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	cmove	ecx, r8d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 67
	sar	edx, 14
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	movzx	eax, cl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 51
	imul	r11d, DWORD PTR [rbx+rax*4], 100	; 00000064H
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 67
	and	dl, 15
; Line 88
	jne	SHORT $LN25@add_promot
; Line 71
	bt	r10d, 18
; Line 88
	jae	SHORT $LN2@add_promot
$LN25@add_promot:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	movzx	eax, dl
	and	al, 7
	movzx	ecx, al
	test	dl, dl
	cmove	ecx, r8d
	movzx	eax, cl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 55
	mov	eax, DWORD PTR [rbx+rax*4]
	lea	r8d, DWORD PTR [rax+rax*4]
	add	r8d, r8d
$LN2@add_promot:
; Line 57
	movsxd	rax, DWORD PTR [r9+2048]
	lea	ecx, DWORD PTR [r11+2000000]
; Line 59
	mov	rbx, QWORD PTR [rsp+8]
	add	ecx, r8d
	mov	DWORD PTR [r9+rax*8+4], ecx
	inc	DWORD PTR [r9+2048]
	ret	0
?add_promotion_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z ENDP ; S_MOVELIST::add_promotion_move
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?add_en_passant_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z
_TEXT	SEGMENT
this$ = 8
move$ = 16
?add_en_passant_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z PROC ; S_MOVELIST::add_en_passant_move, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 42
	mov	rax, QWORD PTR [rdx]
	movsxd	r8, DWORD PTR [rcx+2048]
	mov	QWORD PTR [rcx+r8*8], rax
; Line 43
	movsxd	rax, DWORD PTR [rcx+2048]
	mov	DWORD PTR [rcx+rax*8+4], 1000105	; 000f42a9H
; Line 44
	inc	DWORD PTR [rcx+2048]
; Line 45
	ret	0
?add_en_passant_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z ENDP ; S_MOVELIST::add_en_passant_move
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z
_TEXT	SEGMENT
this$ = 8
move$ = 16
pos$ = 24
?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z PROC ; S_MOVELIST::add_capture_move, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 33
	movsxd	r9, DWORD PTR [rcx+2048]
	mov	r10, rcx
	mov	rax, QWORD PTR [rdx]
	mov	r11, r8
	mov	QWORD PTR [rcx+r9*8], rax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	xor	r9d, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 67
	mov	eax, DWORD PTR [rdx]
	mov	ecx, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 35
	movzx	r8d, BYTE PTR [r8+120]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 67
	sar	ecx, 14
	and	cl, 15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	test	r8b, r8b
	jne	SHORT $LN7@add_captur
	mov	dl, 1
	jmp	SHORT $LN48@add_captur
$LN7@add_captur:
	cmp	r8b, 1
	mov	edx, 2
	cmove	edx, r9d
; Line 125
	jne	SHORT $LN11@add_captur
$LN48@add_captur:
	test	cl, cl
	je	SHORT $LN11@add_captur
; Line 126
	shl	dl, 3
	or	dl, cl
	jmp	SHORT $LN9@add_captur
$LN11@add_captur:
; Line 125
	xor	dl, dl
$LN9@add_captur:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 59
	and	eax, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	cmp	eax, 120				; 00000078H
	jae	SHORT $LN17@add_captur
	movzx	r8d, BYTE PTR [rax+r11]
	jmp	SHORT $LN18@add_captur
$LN17@add_captur:
	mov	r8b, 255				; 000000ffH
$LN18@add_captur:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	movzx	eax, dl
	and	al, 7
	movzx	ecx, al
	test	dl, dl
	cmove	ecx, r9d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	r9, OFFSET FLAT:?PIECE_VALUES_MG@@3V?$array@H$06@std@@B
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	movzx	eax, cl
	mov	ecx, DWORD PTR [r9+rax*4]
; Line 119
	lea	eax, DWORD PTR [r8-1]
	cmp	al, 253					; 000000fdH
	ja	SHORT $LN39@add_captur
	and	r8b, 7
	jmp	SHORT $LN40@add_captur
$LN39@add_captur:
	xor	r8b, r8b
$LN40@add_captur:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 37
	lea	eax, DWORD PTR [rcx+100000]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	movzx	edx, r8b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 37
	lea	ecx, DWORD PTR [rax+rax*4]
	movsxd	rax, DWORD PTR [r10+2048]
	add	ecx, ecx
	sub	ecx, DWORD PTR [r9+rdx*4]
	mov	DWORD PTR [r10+rax*8+4], ecx
; Line 38
	inc	DWORD PTR [r10+2048]
; Line 39
	ret	0
?add_capture_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@AEBVPosition@@@Z ENDP ; S_MOVELIST::add_capture_move
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?add_quiet_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z
_TEXT	SEGMENT
this$ = 8
move$ = 16
?add_quiet_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z PROC	; S_MOVELIST::add_quiet_move, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 27
	mov	rax, QWORD PTR [rdx]
	movsxd	r8, DWORD PTR [rcx+2048]
	mov	QWORD PTR [rcx+r8*8], rax
; Line 28
	movsxd	rax, DWORD PTR [rcx+2048]
	mov	DWORD PTR [rcx+rax*8+4], 0
; Line 29
	inc	DWORD PTR [rcx+2048]
; Line 30
	ret	0
?add_quiet_move@S_MOVELIST@@QEAAXAEBUS_MOVE@@@Z ENDP	; S_MOVELIST::add_quiet_move
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0S_MOVELIST@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0S_MOVELIST@@QEAA@XZ PROC				; S_MOVELIST::S_MOVELIST, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 20
	mov	rax, rcx
	mov	edx, 256				; 00000100H
	xor	r8d, r8d
	npad	5
$LL15@S_MOVELIST:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	mov	QWORD PTR [rax], r8
	lea	rax, QWORD PTR [rax+8]
	sub	rdx, 1
	jne	SHORT $LL15@S_MOVELIST
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 20
	mov	DWORD PTR [rcx+2048], r8d
	mov	rax, rcx
	ret	0
??0S_MOVELIST@@QEAA@XZ ENDP				; S_MOVELIST::S_MOVELIST
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
$T1 = 32
_Ostr$ = 64
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 1012
$LN24:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, rcx
; Line 1013
	mov	rax, QWORD PTR [rcx]
	movsxd	rdx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 268
	mov	rax, QWORD PTR [rdx+rcx+64]
	mov	rdi, QWORD PTR [rax+8]
	mov	QWORD PTR $T1[rsp+8], rdi
; Line 269
	mov	rax, QWORD PTR [rdi]
	mov	rcx, rdi
	call	QWORD PTR [rax+8]
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 113
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2755
	mov	rdx, QWORD PTR [rax]
	mov	r8, QWORD PTR [rdx+64]
	mov	dl, 10
	mov	rcx, rax
	call	r8
	movzx	esi, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 113
	test	rdi, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 354
	je	SHORT $LN19@endl
; Line 355
	mov	rdx, QWORD PTR [rdi]
	mov	rcx, rdi
	call	QWORD PTR [rdx+16]
	test	rax, rax
	je	SHORT $LN19@endl
	mov	rcx, QWORD PTR [rax]
	mov	r8, QWORD PTR [rcx]
	mov	edx, 1
	mov	rcx, rax
	call	r8
$LN19@endl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 1013
	movzx	edx, sil
	mov	rcx, rbx
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
; Line 1014
	mov	rcx, rbx
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
; Line 1015
	mov	rax, rbx
; Line 1016
	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ostr$ = 64
?dtor$0@?0???$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z@4HA PROC ; `std::endl<char,std::char_traits<char> >'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1locale@std@@QEAA@XZ			; std::locale::~locale
?dtor$0@?0???$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z@4HA ENDP ; `std::endl<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_Ok$ = 32
$T1 = 48
$T2 = 64
_Ostr$ = 160
_Val$ = 168
_State$ = 176
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 768
$LN150:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+32], rsi
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 112				; 00000070H
	mov	r12, rdx
	mov	rsi, rcx
; Line 773
	xor	r13d, r13d
	mov	edi, r13d
	mov	DWORD PTR _State$[rsp], r13d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 456
	mov	rcx, rdx
	call	strlen
	mov	r14, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 775
	mov	r8, QWORD PTR [rsi]
	movsxd	r9, DWORD PTR [r8+4]
	mov	rbx, QWORD PTR [r9+rsi+40]
	test	rbx, rbx
	jle	SHORT $LN17@operator
	cmp	rbx, rax
	jle	SHORT $LN17@operator
	sub	rbx, rax
	jmp	SHORT $LN18@operator
$LN17@operator:
	mov	rbx, r13
$LN18@operator:
; Line 69
	mov	r15, rsi
	mov	QWORD PTR _Ok$[rsp], rsi
; Line 70
	mov	rcx, QWORD PTR [r9+rsi+72]
; Line 71
	test	rcx, rcx
	je	SHORT $LN108@operator
; Line 72
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	npad	1
$LN108@operator:
; Line 91
	mov	rcx, QWORD PTR [rsi]
	movsxd	rax, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax+rsi+16], 0
	je	SHORT $LN102@operator
; Line 92
	mov	BYTE PTR _Ok$[rsp+8], 0
	xor	al, al
; Line 93
	jmp	SHORT $LN101@operator
$LN102@operator:
; Line 96
	mov	rax, QWORD PTR [rax+rsi+80]
; Line 97
	test	rax, rax
	je	SHORT $LN104@operator
	cmp	rax, rsi
	je	SHORT $LN104@operator
; Line 102
	mov	rcx, rax
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
; Line 103
	mov	rcx, QWORD PTR [rsi]
	movsxd	rax, DWORD PTR [rcx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 206
	cmp	DWORD PTR [rax+rsi+16], 0
	sete	al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 103
	mov	BYTE PTR _Ok$[rsp+8], al
	jmp	SHORT $LN101@operator
$LN104@operator:
; Line 98
	mov	BYTE PTR _Ok$[rsp+8], 1
	mov	al, 1
$LN101@operator:
; Line 778
	test	al, al
	jne	SHORT $LN8@operator
; Line 779
	mov	edx, 4
	mov	edi, edx
; Line 780
	jmp	$LN22@operator
$LN8@operator:
; Line 782
	movsxd	rax, DWORD PTR [rcx+4]
	mov	ecx, DWORD PTR [rax+rsi+24]
	and	ecx, 448				; 000001c0H
	cmp	ecx, 64					; 00000040H
	je	SHORT $LN138@operator
	npad	1
$LL4@operator:
; Line 783
	test	rbx, rbx
	jle	SHORT $LN138@operator
; Line 784
	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	r8, QWORD PTR [rcx+rsi+72]
	movzx	r9d, BYTE PTR [rcx+rsi+88]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [r8+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN77@operator
	mov	rcx, QWORD PTR [r8+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN77@operator
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [r8+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r9b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r9d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN78@operator
$LN77@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r9d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [r8]
	mov	rcx, r8
	call	QWORD PTR [rax+24]
$LN78@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 784
	cmp	eax, -1
	jne	SHORT $LN2@operator
; Line 785
	mov	edx, 4
	mov	edi, edx
	mov	DWORD PTR _State$[rsp], edx
; Line 786
	jmp	$LN6@operator
$LN2@operator:
; Line 783
	dec	rbx
	jmp	SHORT $LL4@operator
$LN138@operator:
; Line 791
	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [rcx+rsi+72]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 171
	mov	rax, QWORD PTR [rcx]
	mov	r8, r14
	mov	rdx, r12
	call	QWORD PTR [rax+72]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 791
	cmp	rax, r14
	je	SHORT $LL7@operator
; Line 792
	mov	edx, 4
	mov	edi, edx
	mov	DWORD PTR _State$[rsp], edx
; Line 795
	jmp	SHORT $LN6@operator
	npad	5
$LL7@operator:
; Line 796
	test	rbx, rbx
	jle	SHORT $LN144@operator
; Line 797
	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	r8, QWORD PTR [rcx+rsi+72]
	movzx	r9d, BYTE PTR [rcx+rsi+88]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [r8+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN56@operator
	mov	rcx, QWORD PTR [r8+88]
	mov	eax, DWORD PTR [rcx]
; Line 166
	test	eax, eax
	jle	SHORT $LN56@operator
; Line 256
	dec	eax
	mov	DWORD PTR [rcx], eax
; Line 257
	mov	rcx, QWORD PTR [r8+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], r9b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	eax, r9d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	jmp	SHORT $LN57@operator
$LN56@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	mov	edx, r9d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 166
	mov	rax, QWORD PTR [r8]
	mov	rcx, r8
	call	QWORD PTR [rax+24]
$LN57@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 797
	cmp	eax, -1
	jne	SHORT $LN5@operator
; Line 798
	mov	edx, 4
	mov	edi, edx
	mov	DWORD PTR _State$[rsp], edx
; Line 799
	jmp	SHORT $LN6@operator
$LN5@operator:
; Line 796
	dec	rbx
	jmp	SHORT $LL7@operator
$LN144@operator:
	mov	edx, 4
$LN6@operator:
; Line 804
	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 284
	mov	QWORD PTR [rcx+rsi+40], r13
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
	jmp	SHORT $LN22@operator
$LN23@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
	xor	r13d, r13d
	mov	edx, 4
	mov	rsi, QWORD PTR _Ostr$[rsp]
	mov	edi, DWORD PTR _State$[rsp]
	mov	r15, QWORD PTR _Ok$[rsp]
$LN22@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 808
	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 40
	cmp	QWORD PTR [rcx+rsi+72], 0
	cmovne	edx, r13d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 155
	or	edx, DWORD PTR [rcx+rsi+16]
	or	edx, edi
	and	edx, 23
; Line 156
	mov	DWORD PTR [rcx+rsi+16], edx
; Line 157
	and	edx, DWORD PTR [rcx+rsi+20]
; Line 158
	jne	SHORT $LN149@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 111
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
; Line 116
	test	al, al
	jne	SHORT $LN40@operator
; Line 117
	mov	rcx, r15
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
	npad	1
$LN40@operator:
; Line 77
	mov	rax, QWORD PTR [r15]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [rcx+r15+72]
; Line 78
	test	rcx, rcx
	je	SHORT $LN46@operator
; Line 79
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN46@operator:
; Line 809
	mov	rax, rsi
; Line 810
	lea	r11, QWORD PTR [rsp+112]
	mov	rbx, QWORD PTR [r11+56]
	mov	rsi, QWORD PTR [r11+72]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
$LN149@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 164
	test	dl, 4
	je	SHORT $LN31@operator
; Line 165
	lea	rbx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@
	jmp	SHORT $LN33@operator
$LN31@operator:
; Line 166
	test	dl, 2
	lea	rbx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@
	lea	rax, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@
	cmove	rbx, rax
$LN33@operator:
; Line 172
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
	mov	r8, rax
	mov	rdx, rbx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
	lea	rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
	lea	rcx, QWORD PTR $T2[rsp]
	call	_CxxThrowException
	int	3
$LN146@operator:
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ok$ = 32
$T1 = 48
$T2 = 64
_Ostr$ = 160
_Val$ = 168
_State$ = 176
?dtor$3@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$3
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$3@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ok$ = 32
$T1 = 48
$T2 = 64
_Ostr$ = 160
_Val$ = 168
_State$ = 176
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ok$ = 32
$T1 = 48
$T2 = 64
_Ostr$ = 160
_Val$ = 168
_State$ = 176
?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 805
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 40
	mov	eax, 4
	xor	r8d, r8d
	cmp	QWORD PTR [rcx+rdx+72], r8
	cmovne	eax, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 155
	or	eax, DWORD PTR [rcx+rdx+16]
	and	eax, 19
	or	eax, 4
; Line 156
	mov	DWORD PTR [rcx+rdx+16], eax
; Line 157
	test	DWORD PTR [rcx+rdx+20], eax
; Line 158
	je	SHORT $LN121@catch$4
; Line 160
	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
$LN121@catch$4:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 805
	mov	rax, 0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
_TEXT	SEGMENT
_Ok$1 = 32
$T2 = 48
$T3 = 64
this$ = 128
_State$4 = 136
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::flush, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 562
$LN98:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H
	mov	rbx, rcx
; Line 563
	mov	rax, QWORD PTR [rcx]
	movsxd	rdx, DWORD PTR [rax+4]
	mov	rsi, QWORD PTR [rdx+rcx+72]
; Line 564
	test	rsi, rsi
	je	$LN90@flush
; Line 565
	mov	rdx, rcx
	lea	rcx, QWORD PTR _Ok$1[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1
; Line 567
	cmp	BYTE PTR _Ok$1[rsp+8], 0
	je	SHORT $LN73@flush
; Line 568
	xor	edi, edi
	mov	DWORD PTR _State$4[rsp], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 121
	mov	rax, QWORD PTR [rsi]
	mov	rcx, rsi
	call	QWORD PTR [rax+104]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 570
	mov	r8d, edi
	mov	edx, 4
	cmp	eax, -1
	cmove	r8d, edx
	mov	DWORD PTR _State$4[rsp], r8d
	jmp	SHORT $LN10@flush
$LN11@flush:
	xor	edi, edi
	mov	edx, 4
	mov	rbx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR _State$4[rsp]
$LN10@flush:
; Line 574
	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 40
	cmp	QWORD PTR [rcx+rbx+72], 0
	cmovne	edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 155
	or	edx, DWORD PTR [rcx+rbx+16]
	or	edx, r8d
	and	edx, 23
; Line 156
	mov	DWORD PTR [rcx+rbx+16], edx
; Line 157
	and	edx, DWORD PTR [rcx+rbx+20]
; Line 158
	jne	SHORT $LN97@flush
$LN73@flush:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 111
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
; Line 116
	test	al, al
	jne	SHORT $LN83@flush
; Line 117
	mov	rcx, QWORD PTR _Ok$1[rsp]
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
	npad	1
$LN83@flush:
; Line 77
	mov	rdx, QWORD PTR _Ok$1[rsp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [rcx+rdx+72]
; Line 78
	test	rcx, rcx
	je	SHORT $LN89@flush
; Line 79
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN89@flush:
$LN90@flush:
; Line 577
	mov	rax, rbx
; Line 578
	lea	r11, QWORD PTR [rsp+112]
	mov	rbx, QWORD PTR [r11+32]
	mov	rsi, QWORD PTR [r11+40]
	mov	rsp, r11
	pop	rdi
	ret	0
$LN97@flush:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 164
	test	dl, 4
	je	SHORT $LN75@flush
; Line 165
	lea	rbx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@
	jmp	SHORT $LN77@flush
$LN75@flush:
; Line 166
	test	dl, 2
	lea	rbx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@
	lea	rax, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@
	cmove	rbx, rax
$LN77@flush:
; Line 172
	mov	edx, 1
	lea	rcx, QWORD PTR $T2[rsp]
	call	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
	mov	r8, rax
	mov	rdx, rbx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
	lea	rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
	lea	rcx, QWORD PTR $T3[rsp]
	call	_CxxThrowException
	int	3
$LN94@flush:
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::flush
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ok$1 = 32
$T2 = 48
$T3 = 64
this$ = 128
_State$4 = 136
?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$1[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ok$1 = 32
$T2 = 48
$T3 = 64
this$ = 128
_State$4 = 136
?catch$10@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::catch$10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 573
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ$0:
	mov	rdx, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 40
	mov	eax, 4
	xor	r8d, r8d
	cmp	QWORD PTR [rcx+rdx+72], r8
	cmovne	eax, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 155
	or	eax, DWORD PTR [rcx+rdx+16]
	and	eax, 19
	or	eax, 4
; Line 156
	mov	DWORD PTR [rcx+rdx+16], eax
; Line 157
	test	DWORD PTR [rcx+rdx+20], eax
; Line 158
	je	SHORT $LN58@catch$10
; Line 160
	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
$LN58@catch$10:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 573
	mov	rax, 0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$10@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::catch$10
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
_TEXT	SEGMENT
_Ok$ = 32
$T1 = 48
$T2 = 64
this$ = 128
_Ch$ = 136
_State$ = 144
?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::put, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 525
$LN93:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+32], rsi
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H
	movzx	esi, dl
	mov	rbx, rcx
; Line 526
	xor	edi, edi
	mov	DWORD PTR _State$[rsp], edi
; Line 69
	mov	QWORD PTR _Ok$[rsp], rcx
; Line 70
	mov	rax, QWORD PTR [rcx]
	movsxd	r8, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [r8+rcx+72]
; Line 71
	test	rcx, rcx
	je	SHORT $LN19@put
; Line 72
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	npad	1
$LN19@put:
; Line 91
	mov	rcx, QWORD PTR [rbx]
	movsxd	rax, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax+rbx+16], 0
	je	SHORT $LN13@put
; Line 92
	mov	BYTE PTR _Ok$[rsp+8], 0
	xor	al, al
; Line 93
	jmp	SHORT $LN12@put
$LN13@put:
; Line 96
	mov	rax, QWORD PTR [rax+rbx+80]
; Line 97
	test	rax, rax
	je	SHORT $LN15@put
	cmp	rax, rbx
	je	SHORT $LN15@put
; Line 102
	mov	rcx, rax
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
; Line 103
	mov	rcx, QWORD PTR [rbx]
	movsxd	rax, DWORD PTR [rcx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 206
	cmp	DWORD PTR [rax+rbx+16], 0
	sete	al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 103
	mov	BYTE PTR _Ok$[rsp+8], al
	jmp	SHORT $LN12@put
$LN15@put:
; Line 98
	mov	BYTE PTR _Ok$[rsp+8], 1
	mov	al, 1
$LN12@put:
; Line 529
	test	al, al
	jne	SHORT $LN2@put
; Line 530
	mov	edx, 4
	mov	r8d, edx
; Line 531
	jmp	SHORT $LN10@put
$LN2@put:
; Line 533
	movsxd	rax, DWORD PTR [rcx+4]
	mov	rcx, QWORD PTR [rax+rbx+72]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 261
	mov	rax, QWORD PTR [rcx+64]
	mov	r9d, esi
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN29@put
	mov	rax, QWORD PTR [rcx+88]
; Line 166
	cmp	DWORD PTR [rax], 0
	jle	SHORT $LN29@put
; Line 256
	dec	DWORD PTR [rax]
; Line 257
	mov	rcx, QWORD PTR [rcx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; Line 166
	mov	BYTE PTR [rdx], sil
	jmp	SHORT $LN30@put
$LN29@put:
	mov	rax, QWORD PTR [rcx]
	mov	edx, r9d
	call	QWORD PTR [rax+24]
	mov	r9d, eax
$LN30@put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 533
	mov	r8d, edi
	mov	edx, 4
	cmp	r9d, -1
	cmove	r8d, edx
	mov	DWORD PTR _State$[rsp], r8d
	jmp	SHORT $LN10@put
$LN11@put:
	xor	edi, edi
	mov	edx, 4
	mov	rbx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR _State$[rsp]
$LN10@put:
; Line 539
	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 40
	cmp	QWORD PTR [rcx+rbx+72], 0
	cmovne	edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 155
	or	edx, DWORD PTR [rcx+rbx+16]
	or	edx, r8d
	and	edx, 23
; Line 156
	mov	DWORD PTR [rcx+rbx+16], edx
; Line 157
	and	edx, DWORD PTR [rcx+rbx+20]
; Line 158
	jne	SHORT $LN92@put
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 111
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
; Line 116
	test	al, al
	jne	SHORT $LN78@put
; Line 117
	mov	rcx, rbx
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
	npad	1
$LN78@put:
; Line 77
	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [rcx+rbx+72]
; Line 78
	test	rcx, rcx
	je	SHORT $LN84@put
; Line 79
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN84@put:
; Line 540
	mov	rax, rbx
; Line 541
	lea	r11, QWORD PTR [rsp+112]
	mov	rbx, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+40]
	mov	rsp, r11
	pop	rdi
	ret	0
$LN92@put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 164
	test	dl, 4
	je	SHORT $LN70@put
; Line 165
	lea	rbx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@
	jmp	SHORT $LN72@put
$LN70@put:
; Line 166
	test	dl, 2
	lea	rbx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@
	lea	rax, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@
	cmove	rbx, rax
$LN72@put:
; Line 172
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
	mov	r8, rax
	mov	rdx, rbx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
	lea	rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
	lea	rcx, QWORD PTR $T2[rsp]
	call	_CxxThrowException
	int	3
$LN89@put:
?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::put
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ok$ = 32
$T1 = 48
$T2 = 64
this$ = 128
_Ch$ = 136
_State$ = 144
?dtor$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$1
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ok$ = 32
$T1 = 48
$T2 = 64
this$ = 128
_Ch$ = 136
_State$ = 144
?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ok$ = 32
$T1 = 48
$T2 = 64
this$ = 128
_Ch$ = 136
_State$ = 144
?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::catch$4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 536
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z$0:
	mov	rdx, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 40
	mov	eax, 4
	xor	r8d, r8d
	cmp	QWORD PTR [rcx+rdx+72], r8
	cmovne	eax, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 155
	or	eax, DWORD PTR [rcx+rdx+16]
	and	eax, 19
	or	eax, 4
; Line 156
	mov	DWORD PTR [rcx+rdx+16], eax
; Line 157
	test	DWORD PTR [rcx+rdx+20], eax
; Line 158
	je	SHORT $LN53@catch$4
; Line 160
	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
$LN53@catch$4:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 536
	mov	rax, 0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::catch$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
_TEXT	SEGMENT
_Lock$1 = 48
$T2 = 64
$T3 = 64
_Psave$4 = 64
_Ok$ = 80
$T5 = 96
$T6 = 96
$T7 = 96
$T8 = 112
this$ = 224
_Val$ = 232
_State$ = 240
_Psave_guard$9 = 248
_Lock$10 = 248
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::operator<<, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 277
$LN141:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 160				; 000000a0H
	mov	rbx, rcx
; Line 278
	xor	edi, edi
	mov	esi, edi
	mov	DWORD PTR _State$[rsp], edi
; Line 69
	mov	QWORD PTR _Ok$[rsp], rcx
; Line 70
	mov	rax, QWORD PTR [rcx]
	movsxd	r8, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [r8+rcx+72]
; Line 71
	test	rcx, rcx
	je	SHORT $LN22@operator
; Line 72
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	npad	1
$LN22@operator:
; Line 91
	mov	rcx, QWORD PTR [rbx]
	movsxd	rax, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax+rbx+16], 0
	je	SHORT $LN16@operator
; Line 92
	mov	BYTE PTR _Ok$[rsp+8], 0
	xor	al, al
; Line 93
	jmp	SHORT $LN15@operator
$LN16@operator:
; Line 96
	mov	rax, QWORD PTR [rax+rbx+80]
; Line 97
	test	rax, rax
	je	SHORT $LN18@operator
	cmp	rax, rbx
	je	SHORT $LN18@operator
; Line 102
	mov	rcx, rax
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
; Line 103
	mov	rcx, QWORD PTR [rbx]
	movsxd	rax, DWORD PTR [rcx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 206
	cmp	DWORD PTR [rax+rbx+16], 0
	sete	al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 103
	mov	BYTE PTR _Ok$[rsp+8], al
	jmp	SHORT $LN15@operator
$LN18@operator:
; Line 98
	mov	BYTE PTR _Ok$[rsp+8], 1
	mov	al, 1
$LN15@operator:
; Line 281
	test	al, al
	je	$LN134@operator
; Line 282
	movsxd	rax, DWORD PTR [rcx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 268
	mov	rcx, QWORD PTR [rax+rbx+64]
	mov	r14, QWORD PTR [rcx+8]
	mov	QWORD PTR $T5[rsp+8], r14
; Line 269
	mov	rax, QWORD PTR [r14]
	mov	rcx, r14
	call	QWORD PTR [rax+8]
	npad	1
; Line 436
	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$1[rsp]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
	npad	1
; Line 437
	mov	r13, QWORD PTR ?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave
	mov	QWORD PTR _Psave$4[rsp], r13
; Line 91
	mov	r15, QWORD PTR ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
	test	r15, r15
	jne	SHORT $LN48@operator
; Line 92
	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$10[rsp]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
; Line 93
	cmp	QWORD PTR ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A, r15 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
	jne	SHORT $LN49@operator
; Line 94
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	cdqe
	mov	QWORD PTR ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A, rax ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
$LN49@operator:
; Line 96
	lea	rcx, QWORD PTR _Lock$10[rsp]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
	mov	r15, QWORD PTR ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
$LN48@operator:
; Line 377
	lea	r12, QWORD PTR [r15*8]
	cmp	r15, QWORD PTR [r14+24]
	jae	SHORT $LN56@operator
	mov	rax, QWORD PTR [r14+16]
	mov	rdi, QWORD PTR [r12+rax]
; Line 378
	test	rdi, rdi
	jne	SHORT $LN76@operator
$LN56@operator:
	cmp	BYTE PTR [r14+36], 0
	je	SHORT $LN51@operator
; Line 383
	call	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale
; Line 384
	cmp	r15, QWORD PTR [rax+24]
	jae	SHORT $LN132@operator
; Line 385
	mov	rax, QWORD PTR [rax+16]
	mov	rdi, QWORD PTR [r12+rax]
$LN51@operator:
; Line 442
	test	rdi, rdi
	jne	SHORT $LN76@operator
$LN132@operator:
; Line 443
	test	r13, r13
	je	SHORT $LN40@operator
; Line 444
	mov	rdi, r13
	jmp	SHORT $LN76@operator
$LN40@operator:
; Line 445
	lea	rdx, QWORD PTR $T5[rsp]
	lea	rcx, QWORD PTR _Psave$4[rsp]
	call	?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat
	cmp	rax, -1
	je	$LN139@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1531
	mov	rdi, QWORD PTR _Psave$4[rsp]
	mov	QWORD PTR _Psave_guard$9[rsp], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 458
	mov	rcx, rdi
	call	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register
; Line 461
	mov	rax, QWORD PTR [rdi]
	mov	rcx, rdi
	call	QWORD PTR [rax+8]
; Line 462
	mov	QWORD PTR ?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB, rdi ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave
$LN76@operator:
; Line 469
	lea	rcx, QWORD PTR _Lock$1[rsp]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
	npad	1
; Line 355
	mov	rax, QWORD PTR [r14]
	mov	rcx, r14
	call	QWORD PTR [rax+16]
	test	rax, rax
	je	SHORT $LN83@operator
	mov	rcx, QWORD PTR [rax]
	mov	r8, QWORD PTR [rcx]
	mov	edx, 1
	mov	rcx, rax
	call	r8
$LN83@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 283
	mov	rax, QWORD PTR [rbx]
	movsxd	r9, DWORD PTR [rax+4]
	add	r9, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\iterator
; Line 550
	mov	BYTE PTR $T2[rsp], 0
; Line 521
	mov	rax, QWORD PTR [r9+72]
	mov	QWORD PTR $T2[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocnum
; Line 1249
	movaps	xmm0, XMMWORD PTR $T2[rsp]
	movdqa	XMMWORD PTR $T6[rsp], xmm0
	mov	rax, QWORD PTR [rdi]
	mov	r10, QWORD PTR [rax+72]
	mov	eax, DWORD PTR _Val$[rsp]
	mov	DWORD PTR [rsp+40], eax
	movzx	eax, BYTE PTR [r9+88]
	mov	BYTE PTR [rsp+32], al
	lea	r8, QWORD PTR $T6[rsp]
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, rdi
	call	r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 293
	mov	edx, 4
	cmp	BYTE PTR $T3[rsp], 0
	cmovne	esi, edx
	mov	DWORD PTR _State$[rsp], esi
	xor	edi, edi
	jmp	SHORT $LN13@operator
$LN14@operator:
; Line 281
	xor	edi, edi
	mov	rbx, QWORD PTR this$[rsp]
	mov	esi, DWORD PTR _State$[rsp]
$LN134@operator:
; Line 299
	mov	edx, 4
$LN13@operator:
	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 40
	cmp	QWORD PTR [rcx+rbx+72], 0
	cmovne	edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 155
	or	edx, esi
	or	edx, DWORD PTR [rcx+rbx+16]
	and	edx, 23
; Line 156
	mov	DWORD PTR [rcx+rbx+16], edx
; Line 157
	and	edx, DWORD PTR [rcx+rbx+20]
; Line 158
	jne	SHORT $LN140@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 111
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
; Line 116
	test	al, al
	jne	SHORT $LN120@operator
; Line 117
	mov	rcx, rbx
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
	npad	1
$LN120@operator:
; Line 77
	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [rcx+rbx+72]
; Line 78
	test	rcx, rcx
	je	SHORT $LN126@operator
; Line 79
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN126@operator:
; Line 300
	mov	rax, rbx
; Line 301
	add	rsp, 160				; 000000a0H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
$LN139@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 447
	call	?_Throw_bad_cast@std@@YAXXZ		; std::_Throw_bad_cast
	npad	1
$LN140@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 164
	test	dl, 4
	je	SHORT $LN112@operator
; Line 165
	lea	rbx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@
	jmp	SHORT $LN114@operator
$LN112@operator:
; Line 166
	test	dl, 2
	lea	rbx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@
	lea	rax, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@
	cmove	rbx, rax
$LN114@operator:
; Line 172
	mov	edx, 1
	lea	rcx, QWORD PTR $T7[rsp]
	call	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
	mov	r8, rax
	mov	rdx, rbx
	lea	rcx, QWORD PTR $T8[rsp]
	call	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
	lea	rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
	lea	rcx, QWORD PTR $T8[rsp]
	call	_CxxThrowException
	int	3
$LN135@operator:
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::operator<<
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Lock$1 = 48
$T2 = 64
$T3 = 64
_Psave$4 = 64
_Ok$ = 80
$T5 = 96
$T6 = 96
$T7 = 96
$T8 = 112
this$ = 224
_Val$ = 232
_State$ = 240
_Psave_guard$9 = 248
_Lock$10 = 248
?dtor$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$2
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Lock$1 = 48
$T2 = 64
$T3 = 64
_Psave$4 = 64
_Ok$ = 80
$T5 = 96
$T6 = 96
$T7 = 96
$T8 = 112
this$ = 224
_Val$ = 232
_State$ = 240
_Psave_guard$9 = 248
_Lock$10 = 248
?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Lock$1 = 48
$T2 = 64
$T3 = 64
_Psave$4 = 64
_Ok$ = 80
$T5 = 96
$T6 = 96
$T7 = 96
$T8 = 112
this$ = 224
_Val$ = 232
_State$ = 240
_Psave_guard$9 = 248
_Lock$10 = 248
?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$1
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1locale@std@@QEAA@XZ			; std::locale::~locale
?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Lock$1 = 48
$T2 = 64
$T3 = 64
_Psave$4 = 64
_Ok$ = 80
$T5 = 96
$T6 = 96
$T7 = 96
$T8 = 112
this$ = 224
_Val$ = 232
_State$ = 240
_Psave_guard$9 = 248
_Lock$10 = 248
?dtor$4@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$4
	lea	rcx, QWORD PTR _Lock$1[rdx]
	jmp	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
?dtor$4@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Lock$1 = 48
$T2 = 64
$T3 = 64
_Psave$4 = 64
_Ok$ = 80
$T5 = 96
$T6 = 96
$T7 = 96
$T8 = 112
this$ = 224
_Val$ = 232
_State$ = 240
_Psave_guard$9 = 248
_Lock$10 = 248
?dtor$5@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$5
	lea	rcx, QWORD PTR _Psave_guard$9[rdx]
	jmp	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
?dtor$5@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Lock$1 = 48
$T2 = 64
$T3 = 64
_Psave$4 = 64
_Ok$ = 80
$T5 = 96
$T6 = 96
$T7 = 96
$T8 = 112
this$ = 224
_Val$ = 232
_State$ = 240
_Psave_guard$9 = 248
_Lock$10 = 248
?catch$8@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::catch$8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 296
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 48					; 00000030H
	mov	rbp, rdx
__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z$0:
	mov	rdx, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 40
	mov	eax, 4
	xor	r8d, r8d
	cmp	QWORD PTR [rcx+rdx+72], r8
	cmovne	eax, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 155
	or	eax, DWORD PTR [rcx+rdx+16]
	and	eax, 19
	or	eax, 4
; Line 156
	mov	DWORD PTR [rcx+rdx+16], eax
; Line 157
	test	DWORD PTR [rcx+rdx+20], eax
; Line 158
	je	SHORT $LN96@catch$8
; Line 160
	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
$LN96@catch$8:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 296
	mov	rax, 0
	add	rsp, 48					; 00000030H
	pop	rbp
	ret	0
	int	3
?catch$8@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::catch$8
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
_TEXT	SEGMENT
this$ = 8
_Pfn$ = 16
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::operator<<, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 191
	rex_jmp	rdx
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::operator<<
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 112
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Osfx, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 159
$LN35:
	push	rbx
	sub	rsp, 96					; 00000060H
	mov	rbx, rcx
; Line 161
	mov	rax, QWORD PTR [rcx]
	movsxd	rdx, DWORD PTR [rax+4]
	cmp	DWORD PTR [rdx+rcx+16], 0
	jne	SHORT $LN21@Osfx
	test	BYTE PTR [rdx+rcx+24], 2
	je	SHORT $LN21@Osfx
; Line 162
	mov	rcx, QWORD PTR [rdx+rcx+72]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\streambuf
; Line 121
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+104]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 162
	cmp	eax, -1
	jne	SHORT $LN21@Osfx
; Line 163
	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 40
	mov	eax, 4
	xor	edx, edx
	cmp	QWORD PTR [rcx+rbx+72], rdx
	cmovne	eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 155
	or	eax, DWORD PTR [rcx+rbx+16]
	and	eax, 19
	or	eax, 4
; Line 156
	mov	DWORD PTR [rcx+rbx+16], eax
; Line 157
	and	eax, DWORD PTR [rcx+rbx+20]
; Line 158
	jne	SHORT $LN34@Osfx
$LN21@Osfx:
$LN10@Osfx:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 168
	add	rsp, 96					; 00000060H
	pop	rbx
	ret	0
$LN34@Osfx:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 164
	test	al, 4
	je	SHORT $LN23@Osfx
; Line 165
	lea	rbx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@
	jmp	SHORT $LN25@Osfx
$LN23@Osfx:
; Line 166
	test	al, 2
	lea	rbx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@
	lea	rax, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@
	cmove	rbx, rax
$LN25@Osfx:
; Line 172
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
	mov	r8, rax
	mov	rdx, rbx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
	lea	rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
	lea	rcx, QWORD PTR $T2[rsp]
	call	_CxxThrowException
	int	3
$LN31@Osfx:
	int	3
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
this$ = 112
?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 166
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ$0:
; Line 167
	mov	rax, 0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Byte$ = 72
?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z PROC ; std::basic_ios<char,std::char_traits<char> >::widen, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 112
$LN24:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	movzx	ebx, dl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 268
	mov	rax, QWORD PTR [rcx+64]
	mov	rdi, QWORD PTR [rax+8]
	mov	QWORD PTR $T1[rsp+8], rdi
; Line 269
	mov	rax, QWORD PTR [rdi]
	mov	rcx, rdi
	call	QWORD PTR [rax+8]
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 113
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2755
	mov	rdx, QWORD PTR [rax]
	mov	r8, QWORD PTR [rdx+64]
	movzx	edx, bl
	mov	rcx, rax
	call	r8
	movzx	ebx, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 113
	test	rdi, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 354
	je	SHORT $LN17@widen
; Line 355
	mov	rdx, QWORD PTR [rdi]
	mov	rcx, rdi
	call	QWORD PTR [rdx+16]
	test	rax, rax
	je	SHORT $LN20@widen
	mov	rcx, QWORD PTR [rax]
	mov	r8, QWORD PTR [rcx]
	mov	edx, 1
	mov	rcx, rax
	call	r8
$LN20@widen:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 114
	movzx	eax, bl
$LN17@widen:
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Byte$ = 72
?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA PROC ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1locale@std@@QEAA@XZ			; std::locale::~locale
?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA ENDP ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
_TEXT	SEGMENT
this$ = 8
?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ PROC ; std::basic_ios<char,std::char_traits<char> >::fill, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 99
	movzx	eax, BYTE PTR [rcx+88]
; Line 100
	ret	0
?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ENDP ; std::basic_ios<char,std::char_traits<char> >::fill
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ PROC ; std::basic_ios<char,std::char_traits<char> >::rdbuf, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 78
	mov	rax, QWORD PTR [rcx+72]
; Line 79
	ret	0
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ENDP ; std::basic_ios<char,std::char_traits<char> >::rdbuf
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ PROC ; std::basic_ios<char,std::char_traits<char> >::tie, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 68
	mov	rax, QWORD PTR [rcx+80]
; Line 69
	ret	0
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ENDP ; std::basic_ios<char,std::char_traits<char> >::tie
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
_TEXT	SEGMENT
this$ = 8
_State$ = 16
_Reraise$ = 24
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::setstate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 49
	mov	eax, edx
; Line 40
	xor	r9d, r9d
	cmp	QWORD PTR [rcx+72], r9
	mov	edx, 4
	cmovne	edx, r9d
	or	edx, DWORD PTR [rcx+16]
	or	edx, eax
	jmp	?clear@ios_base@std@@QEAAXH_N@Z		; std::ios_base::clear
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::setstate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
_TEXT	SEGMENT
this$ = 8
_State$ = 16
_Reraise$ = 24
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::clear, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\ios
; Line 38
	mov	eax, edx
; Line 40
	xor	r9d, r9d
	cmp	QWORD PTR [rcx+72], r9
	mov	edx, 4
	cmovne	edx, r9d
	or	edx, eax
	jmp	?clear@ios_base@std@@QEAAXH_N@Z		; std::ios_base::clear
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?undo_move@Position@@QEAA_NXZ
_TEXT	SEGMENT
this$ = 80
?undo_move@Position@@QEAA_NXZ PROC			; Position::undo_move, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 494
$LN301:
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rcx
; Line 505
	movsxd	rcx, DWORD PTR [rcx+856]
	test	ecx, ecx
	jne	SHORT $LN2@undo_move
	xor	al, al
; Line 607
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
$LN2@undo_move:
; Line 517
	movzx	edx, BYTE PTR [rdi+120]
	lea	eax, DWORD PTR [rcx-1]
	mov	QWORD PTR [rsp+88], rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1934
	imul	rcx, rcx, 728				; 000002d8H
	mov	QWORD PTR [rsp+96], rsi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 508
	mov	DWORD PTR [rdi+856], eax
; Line 509
	mov	rsi, QWORD PTR [rdi+832]
	add	rsi, -728				; fffffffffffffd28H
	mov	QWORD PTR [rsp+56], r14
	add	rsi, rcx
	mov	QWORD PTR [rsp+48], r15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 59
	mov	ecx, DWORD PTR [rsi]
; Line 63
	mov	ebp, ecx
; Line 59
	mov	r15d, ecx
; Line 63
	sar	ebp, 7
; Line 79
	sar	ecx, 20
; Line 63
	and	ebp, 127				; 0000007fH
; Line 59
	and	r15d, 127				; 0000007fH
; Line 79
	and	cl, 15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	test	dl, dl
	jne	SHORT $LN31@undo_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 518
	mov	eax, 65535				; 0000ffffH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	mov	BYTE PTR [rdi+120], 1
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 518
	add	WORD PTR [rdi+132], ax
	jmp	SHORT $LN3@undo_move
$LN31@undo_move:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	xor	r8d, r8d
	mov	eax, 2
	cmp	dl, 1
	cmove	eax, r8d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 517
	mov	BYTE PTR [rdi+120], al
$LN3@undo_move:
	mov	QWORD PTR [rsp+80], rbx
; Line 178
	cmp	ebp, 120				; 00000078H
	jae	SHORT $LN35@undo_move
	movzx	ebx, BYTE PTR [rbp+rdi]
	jmp	SHORT $LN36@undo_move
$LN35@undo_move:
	mov	bl, 255					; 000000ffH
$LN36@undo_move:
; Line 524
	lea	eax, DWORD PTR [rbx-1]
	test	cl, cl
	je	$LN4@undo_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	cmp	al, 253					; 000000fdH
	ja	SHORT $LN61@undo_move
	movzx	r8d, bl
	and	r8b, 7
	jmp	SHORT $LN261@undo_move
$LN61@undo_move:
; Line 122
	test	bl, bl
	je	SHORT $LN69@undo_move
	xor	r8d, r8d
	cmp	bl, 255					; 000000ffH
	je	SHORT $LN69@undo_move
$LN261@undo_move:
	shr	bl, 3
	mov	r9d, ebp
	movzx	edx, bl
	mov	rcx, rdi
	and	dl, 1
	movzx	r14d, bl
	call	?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z ; Position::remove_piece_from_list
	jmp	SHORT $LN260@undo_move
$LN69@undo_move:
	movzx	r14d, bl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 526
	mov	r9d, ebp
	xor	r8d, r8d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	shr	r14b, 3
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 526
	mov	dl, 2
	mov	rcx, rdi
	call	?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z ; Position::remove_piece_from_list
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	test	bl, bl
	je	SHORT $LN85@undo_move
	cmp	bl, 255					; 000000ffH
	je	SHORT $LN85@undo_move
$LN260@undo_move:
	movzx	ebx, r14b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 528
	mov	r9d, r15d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	and	bl, 1
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 528
	mov	r8b, 1
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 126
	shl	bl, 3
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 528
	mov	rcx, rdi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 126
	or	bl, 1
; Line 122
	movzx	edx, bl
	shr	dl, 3
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 528
	call	?add_piece_to_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z ; Position::add_piece_to_list
; Line 529
	jmp	SHORT $LN5@undo_move
$LN85@undo_move:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 125
	xor	bl, bl
; Line 122
	mov	dl, 2
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 528
	mov	r9d, r15d
	mov	r8b, 1
	mov	rcx, rdi
	call	?add_piece_to_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z ; Position::add_piece_to_list
; Line 529
	jmp	SHORT $LN5@undo_move
$LN4@undo_move:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	cmp	al, 253					; 000000fdH
	ja	SHORT $LN97@undo_move
	movzx	r8d, bl
; Line 122
	movzx	edx, bl
; Line 119
	and	r8b, 7
; Line 122
	shr	dl, 3
	and	dl, 1
	jmp	SHORT $LN106@undo_move
$LN97@undo_move:
	test	bl, bl
	je	SHORT $LN105@undo_move
	xor	r8b, r8b
	cmp	bl, 255					; 000000ffH
	je	SHORT $LN105@undo_move
	movzx	edx, bl
	shr	dl, 3
	and	dl, 1
	jmp	SHORT $LN106@undo_move
$LN105@undo_move:
	mov	dl, 2
	xor	r8b, r8b
$LN106@undo_move:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 531
	mov	r9d, ebp
	mov	DWORD PTR [rsp+32], r15d
	mov	rcx, rdi
	call	?move_piece_in_list@Position@@QEAAXW4Color@@W4PieceType@@HH@Z ; Position::move_piece_in_list
$LN5@undo_move:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 91
	lea	r14, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
	cmp	r15d, 120				; 00000078H
	jae	SHORT $LN45@undo_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 180
	cmp	BYTE PTR [r15+r14+240], 0
	je	SHORT $LN45@undo_move
	mov	BYTE PTR [r15+rdi], bl
$LN45@undo_move:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 83
	test	DWORD PTR [rsi], 16777216		; 01000000H
	mov	r15, QWORD PTR [rsp+48]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 538
	je	$LN6@undo_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	lea	eax, DWORD PTR [rbx-1]
	cmp	al, 253					; 000000fdH
	ja	SHORT $LN253@undo_move
	movzx	edx, bl
	shr	dl, 3
	and	dl, 1
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 542
	jne	SHORT $LN7@undo_move
; Line 550
	cmp	ebp, 27
	mov	ecx, 21
	mov	eax, 28
	mov	r9d, 26
	cmovne	eax, ecx
	mov	ecx, 24
	cmovne	r9d, ecx
	jmp	SHORT $LN12@undo_move
$LN253@undo_move:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	mov	dl, 2
$LN7@undo_move:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 551
	cmp	ebp, 97					; 00000061H
	jne	SHORT $LN11@undo_move
; Line 552
	mov	eax, 98					; 00000062H
; Line 553
	mov	r9d, 96					; 00000060H
; Line 554
	jmp	SHORT $LN12@undo_move
$LN11@undo_move:
; Line 555
	mov	eax, 91					; 0000005bH
; Line 556
	mov	r9d, 94					; 0000005eH
$LN12@undo_move:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 92
	mov	ecx, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	mov	r8d, r9d
; Line 180
	cmp	BYTE PTR [rcx+r14+240], 0
; Line 178
	movzx	r10d, BYTE PTR [r8+rdi]
; Line 180
	je	SHORT $LN155@undo_move
	mov	BYTE PTR [rcx+rdi], r10b
$LN155@undo_move:
	cmp	BYTE PTR [r8+r14+240], 0
	je	SHORT $LN168@undo_move
	mov	BYTE PTR [r8+rdi], 0
$LN168@undo_move:
; Line 564
	mov	r8b, 4
	mov	DWORD PTR [rsp+32], eax
	mov	rcx, rdi
	call	?move_piece_in_list@Position@@QEAAXW4Color@@W4PieceType@@HH@Z ; Position::move_piece_in_list
$LN6@undo_move:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 71
	test	DWORD PTR [rsi], 262144			; 00040000H
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 568
	je	SHORT $LN13@undo_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	lea	eax, DWORD PTR [rbx-1]
	cmp	al, 253					; 000000fdH
	ja	SHORT $LN182@undo_move
	shr	bl, 3
	and	bl, 1
	jmp	SHORT $LN183@undo_move
$LN182@undo_move:
	mov	bl, 2
$LN183@undo_move:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 581
	test	bl, bl
	mov	ecx, 10
	mov	r9d, -10
	cmovne	r9d, ecx
	movzx	ecx, BYTE PTR [rsi+32]
	add	r9d, ebp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 91
	cmp	r9d, -1
	je	SHORT $LN135@undo_move
	cmp	r9d, 119				; 00000077H
	ja	SHORT $LN135@undo_move
; Line 92
	movsxd	rax, r9d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 180
	cmp	BYTE PTR [rax+r14+240], 0
	je	SHORT $LN135@undo_move
	mov	BYTE PTR [rax+rdi], cl
$LN135@undo_move:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 91
	cmp	ebp, 120				; 00000078H
	jae	SHORT $LN189@undo_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 180
	cmp	BYTE PTR [rbp+r14+240], 0
	je	SHORT $LN189@undo_move
	mov	BYTE PTR [rbp+rdi], 0
$LN189@undo_move:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 115
	movzx	edx, BYTE PTR [rsi+32]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 585
	test	dl, dl
	je	SHORT $LN18@undo_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	dl, 255					; 000000ffH
	je	SHORT $LN209@undo_move
	shr	dl, 3
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 586
	mov	r8b, 1
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	and	dl, 1
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 588
	jmp	SHORT $LN298@undo_move
$LN209@undo_move:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	mov	dl, 2
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 586
	mov	r8b, 1
; Line 588
	jmp	SHORT $LN298@undo_move
$LN13@undo_move:
; Line 589
	movzx	ecx, BYTE PTR [rsi+32]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 91
	cmp	ebp, 120				; 00000078H
	jae	SHORT $LN122@undo_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 180
	cmp	BYTE PTR [rbp+r14+240], 0
	je	SHORT $LN122@undo_move
	mov	BYTE PTR [rbp+rdi], cl
$LN122@undo_move:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 115
	movzx	edx, BYTE PTR [rsi+32]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 592
	test	dl, dl
	je	SHORT $LN18@undo_move
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	cmp	dl, 255					; 000000ffH
	je	SHORT $LN217@undo_move
	movzx	r8d, dl
; Line 122
	shr	dl, 3
; Line 119
	and	r8b, 7
; Line 122
	and	dl, 1
	jmp	SHORT $LN226@undo_move
$LN217@undo_move:
; Line 119
	xor	r8b, r8b
; Line 122
	mov	dl, 2
$LN226@undo_move:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 593
	mov	r9d, ebp
$LN298@undo_move:
; Line 598
	mov	rcx, rdi
	call	?add_piece_to_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z ; Position::add_piece_to_list
$LN18@undo_move:
	movzx	eax, BYTE PTR [rsi+8]
; Line 105
	lea	rcx, QWORD PTR [rsi+108]
	mov	r14, QWORD PTR [rsp+56]
	mov	edx, 4
	mov	rbp, QWORD PTR [rsp+88]
	mov	rbx, QWORD PTR [rsp+80]
; Line 598
	mov	BYTE PTR [rdi+128], al
; Line 599
	mov	eax, DWORD PTR [rsi+12]
	mov	DWORD PTR [rdi+124], eax
; Line 600
	movzx	eax, WORD PTR [rsi+16]
	mov	WORD PTR [rdi+130], ax
; Line 601
	mov	rax, QWORD PTR [rsi+24]
	mov	QWORD PTR [rdi+200], rax
; Line 100
	mov	rax, QWORD PTR [rsi+36]
	mov	QWORD PTR [rdi+136], rax
; Line 101
	movups	xmm0, XMMWORD PTR [rsi+48]
	movups	XMMWORD PTR [rdi+144], xmm0
; Line 102
	mov	rax, QWORD PTR [rsi+64]
	mov	QWORD PTR [rdi+160], rax
; Line 103
	movups	xmm0, XMMWORD PTR [rsi+72]
	movups	XMMWORD PTR [rdi+168], xmm0
	movsd	xmm1, QWORD PTR [rsi+88]
	movsd	QWORD PTR [rdi+184], xmm1
	mov	eax, DWORD PTR [rsi+96]
	mov	DWORD PTR [rdi+192], eax
; Line 104
	mov	rax, QWORD PTR [rsi+100]
	mov	QWORD PTR [rdi+208], rax
; Line 105
	lea	rax, QWORD PTR [rdi+216]
$LL266@undo_move:
	lea	rax, QWORD PTR [rax+128]
	movups	xmm0, XMMWORD PTR [rcx]
	lea	rcx, QWORD PTR [rcx+128]
	movups	XMMWORD PTR [rax-128], xmm0
	movups	xmm1, XMMWORD PTR [rcx-112]
	movups	XMMWORD PTR [rax-112], xmm1
	movups	xmm0, XMMWORD PTR [rcx-96]
	movups	XMMWORD PTR [rax-96], xmm0
	movups	xmm1, XMMWORD PTR [rcx-80]
	movups	XMMWORD PTR [rax-80], xmm1
	movups	xmm0, XMMWORD PTR [rcx-64]
	movups	XMMWORD PTR [rax-64], xmm0
	movups	xmm1, XMMWORD PTR [rcx-48]
	movups	XMMWORD PTR [rax-48], xmm1
	movups	xmm0, XMMWORD PTR [rcx-32]
	movups	XMMWORD PTR [rax-32], xmm0
	movups	xmm1, XMMWORD PTR [rcx-16]
	movups	XMMWORD PTR [rax-16], xmm1
	sub	rdx, 1
	jne	SHORT $LL266@undo_move
	movups	xmm0, XMMWORD PTR [rcx]
	movups	XMMWORD PTR [rax], xmm0
	movups	xmm1, XMMWORD PTR [rcx+16]
	movups	XMMWORD PTR [rax+16], xmm1
	movups	xmm0, XMMWORD PTR [rcx+32]
	movups	XMMWORD PTR [rax+32], xmm0
; Line 606
	mov	al, 1
; Line 106
	movups	xmm0, XMMWORD PTR [rsi+668]
	movups	XMMWORD PTR [rdi+776], xmm0
	movups	xmm1, XMMWORD PTR [rsi+684]
	movups	XMMWORD PTR [rdi+792], xmm1
	movups	xmm0, XMMWORD PTR [rsi+700]
	movups	XMMWORD PTR [rdi+808], xmm0
	movsd	xmm1, QWORD PTR [rsi+716]
; Line 606
	mov	rsi, QWORD PTR [rsp+96]
; Line 106
	movsd	QWORD PTR [rdi+824], xmm1
; Line 607
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?undo_move@Position@@QEAA_NXZ ENDP			; Position::undo_move
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z
_TEXT	SEGMENT
this$ = 96
m$ = 104
$T1 = 104
tv1613 = 104
$T2 = 104
?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z PROC	; Position::make_move_with_undo, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 235
$LN651:
	push	rbx
	push	rdi
	push	r13
	sub	rsp, 64					; 00000040H
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 59
	mov	eax, DWORD PTR [rdx]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 235
	mov	rbx, rcx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 59
	mov	ecx, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 235
	mov	rdi, rdx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 59
	and	ecx, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 91
	cmp	ecx, 120				; 00000078H
	jae	$LN544@make_move_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	r13, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 237
	cmp	BYTE PTR [rcx+r13+240], 0
	je	$LN544@make_move_
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 63
	sar	eax, 7
	and	eax, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 91
	cmp	eax, 120				; 00000078H
	jae	$LN545@make_move_
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 238
	cmp	BYTE PTR [rax+r13+240], 0
	je	$LN545@make_move_
; Line 241
	cmp	BYTE PTR [rcx+rbx], 0
	je	$LN1@make_move_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1915
	mov	rcx, QWORD PTR [rbx+840]
	mov	rax, 3243383573399481603		; 2d02d02d02d02d03H
	sub	rcx, QWORD PTR [rbx+832]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 246
	mov	r8d, DWORD PTR [rbx+856]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1915
	imul	rcx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 241
	mov	QWORD PTR [rsp+112], rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1915
	sar	rdx, 7
	mov	rax, rdx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 241
	mov	QWORD PTR [rsp+120], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1915
	shr	rax, 63					; 0000003fH
	add	rdx, rax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 241
	mov	QWORD PTR [rsp+56], r14
; Line 246
	cmp	r8d, edx
	jl	SHORT $LN11@make_move_
; Line 247
	lea	eax, DWORD PTR [r8+1]
	movsxd	rdx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1630
	lea	r8, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR [rbx+832]
	call	??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Resize<std::_Value_init_tag>
$LN11@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 250
	movsxd	rax, DWORD PTR [rbx+856]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1934
	imul	r12, rax, 728				; 000002d8H
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 251
	mov	rax, QWORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1934
	add	r12, QWORD PTR [rbx+832]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 251
	mov	QWORD PTR [r12], rax
; Line 252
	movzx	eax, BYTE PTR [rbx+128]
	mov	BYTE PTR [r12+8], al
; Line 253
	mov	eax, DWORD PTR [rbx+124]
	mov	DWORD PTR [r12+12], eax
; Line 254
	movzx	eax, WORD PTR [rbx+130]
	mov	WORD PTR [r12+16], ax
; Line 255
	mov	rax, QWORD PTR [rbx+200]
	mov	QWORD PTR [r12+24], rax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 63
	mov	eax, DWORD PTR [rdi]
	sar	eax, 7
	and	eax, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	cmp	eax, 120				; 00000078H
	jae	SHORT $LN102@make_move_
	movzx	ecx, BYTE PTR [rax+rbx]
	jmp	SHORT $LN103@make_move_
$LN102@make_move_:
	mov	cl, 255					; 000000ffH
$LN103@make_move_:
; Line 256
	mov	BYTE PTR [r12+32], cl
; Line 259
	mov	rdx, r12
	mov	rcx, rbx
	call	?save_derived_state@Position@@QEAAXAEAUS_UNDO@@@Z ; Position::save_derived_state
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 59
	mov	eax, DWORD PTR [rdi]
	and	eax, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	cmp	eax, 120				; 00000078H
	jae	SHORT $LN14@make_move_
	movzx	ecx, BYTE PTR [rax+rbx]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	lea	eax, DWORD PTR [rcx-1]
	cmp	al, 253					; 000000fdH
	ja	SHORT $LN14@make_move_
	movzx	eax, cl
	and	al, 7
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 274
	cmp	al, 6
	jne	SHORT $LN14@make_move_
; Line 275
	movzx	eax, BYTE PTR [rbx+128]
	test	cl, 8
	jne	SHORT $LN13@make_move_
; Line 279
	and	al, 252					; 000000fcH
; Line 280
	jmp	SHORT $LN647@make_move_
$LN13@make_move_:
; Line 284
	and	al, 243					; 000000f3H
$LN647@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 59
	mov	BYTE PTR [rbx+128], al
$LN14@make_move_:
	mov	ecx, DWORD PTR [rdi]
	and	ecx, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	cmp	ecx, 120				; 00000078H
	jae	SHORT $LN21@make_move_
	movzx	edx, BYTE PTR [rcx+rbx]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	lea	eax, DWORD PTR [rdx-1]
	cmp	al, 253					; 000000fdH
	ja	SHORT $LN21@make_move_
	movzx	eax, dl
	and	al, 7
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 288
	cmp	al, 4
	jne	SHORT $LN21@make_move_
; Line 289
	test	dl, 8
	jne	SHORT $LN16@make_move_
; Line 290
	cmp	ecx, 21
	jne	SHORT $LN551@make_move_
; Line 294
	and	BYTE PTR [rbx+128], 253			; 000000fdH
$LN551@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 59
	mov	eax, DWORD PTR [rdi]
	and	eax, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 296
	cmp	al, 28
	jne	SHORT $LN21@make_move_
; Line 300
	and	BYTE PTR [rbx+128], 254			; 000000feH
	jmp	SHORT $LN21@make_move_
$LN16@make_move_:
; Line 303
	cmp	ecx, 91					; 0000005bH
	jne	SHORT $LN552@make_move_
; Line 307
	and	BYTE PTR [rbx+128], 247			; 000000f7H
$LN552@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 59
	mov	eax, DWORD PTR [rdi]
	and	eax, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 309
	cmp	al, 98					; 00000062H
	jne	SHORT $LN21@make_move_
; Line 313
	and	BYTE PTR [rbx+128], 251			; 000000fbH
$LN21@make_move_:
; Line 318
	movzx	ecx, BYTE PTR [r12+32]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	test	cl, cl
	je	SHORT $LN28@make_move_
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN28@make_move_
	movzx	eax, cl
	and	al, 7
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 318
	cmp	al, 4
	jne	SHORT $LN28@make_move_
; Line 319
	mov	eax, DWORD PTR [rdi]
	and	eax, 16256				; 00003f80H
	test	cl, 8
	jne	SHORT $LN23@make_move_
; Line 320
	cmp	eax, 2688				; 00000a80H
	jne	SHORT $LN554@make_move_
; Line 324
	and	BYTE PTR [rbx+128], 253			; 000000fdH
$LN554@make_move_:
; Line 326
	mov	eax, DWORD PTR [rdi]
	and	eax, 16256				; 00003f80H
	cmp	eax, 3584				; 00000e00H
	jne	SHORT $LN28@make_move_
; Line 330
	and	BYTE PTR [rbx+128], 254			; 000000feH
	jmp	SHORT $LN28@make_move_
$LN23@make_move_:
; Line 333
	cmp	eax, 11648				; 00002d80H
	jne	SHORT $LN555@make_move_
; Line 337
	and	BYTE PTR [rbx+128], 247			; 000000f7H
$LN555@make_move_:
; Line 339
	mov	eax, DWORD PTR [rdi]
	and	eax, 16256				; 00003f80H
	cmp	eax, 12544				; 00003100H
	jne	SHORT $LN28@make_move_
; Line 343
	and	BYTE PTR [rbx+128], 251			; 000000fbH
$LN28@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 83
	mov	eax, DWORD PTR [rdi]
	bt	eax, 24
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 348
	jae	SHORT $LN31@make_move_
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 59
	and	eax, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	cmp	eax, 120				; 00000078H
	jae	SHORT $LN532@make_move_
	movzx	ecx, BYTE PTR [rax+rbx]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	lea	eax, DWORD PTR [rcx+1]
	test	al, 254					; 000000feH
	je	SHORT $LN532@make_move_
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 352
	movzx	eax, BYTE PTR [rbx+128]
	test	cl, 8
	jne	SHORT $LN30@make_move_
; Line 353
	and	al, 252					; 000000fcH
; Line 354
	jmp	SHORT $LN648@make_move_
$LN532@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	movzx	eax, BYTE PTR [rbx+128]
$LN30@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 355
	and	al, 243					; 000000f3H
$LN648@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 59
	mov	BYTE PTR [rbx+128], al
$LN31@make_move_:
	mov	eax, DWORD PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	xor	r8d, r8d
	movzx	r14d, BYTE PTR [r12+32]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 59
	and	eax, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	cmp	eax, 120				; 00000078H
	jae	SHORT $LN196@make_move_
	movzx	esi, BYTE PTR [rax+rbx]
; Line 372
	movzx	ecx, sil
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	test	sil, sil
	je	SHORT $LN549@make_move_
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN549@make_move_
	movzx	eax, cl
	and	al, 7
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 374
	cmp	al, 1
	jne	SHORT $LN549@make_move_
$LN34@make_move_:
; Line 375
	mov	WORD PTR [rbx+130], r8w
$LN33@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	lea	eax, DWORD PTR [rsi-1]
	mov	QWORD PTR [rsp+96], rbp
	cmp	al, 253					; 000000fdH
	ja	SHORT $LN178@make_move_
	movzx	ebp, sil
; Line 119
	movzx	eax, sil
; Line 122
	shr	bpl, 3
	and	bpl, 1
; Line 119
	and	al, 7
	mov	BYTE PTR $T2[rsp], al
	jmp	SHORT $LN187@make_move_
$LN196@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	mov	sil, 255				; 000000ffH
$LN549@make_move_:
; Line 374
	test	r14b, r14b
	jne	SHORT $LN34@make_move_
; Line 377
	inc	WORD PTR [rbx+130]
	jmp	SHORT $LN33@make_move_
$LN178@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	lea	eax, DWORD PTR [rsi-1]
; Line 122
	mov	bpl, 2
; Line 119
	cmp	al, 253					; 000000fdH
	ja	SHORT $LN186@make_move_
	movzx	eax, sil
	and	al, 7
	mov	BYTE PTR $T2[rsp], al
	jmp	SHORT $LN187@make_move_
$LN186@make_move_:
	mov	BYTE PTR $T2[rsp], r8b
$LN187@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 385
	test	r14b, r14b
	je	SHORT $LN35@make_move_
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 63
	mov	r9d, DWORD PTR [rdi]
	sar	r9d, 7
	and	r9d, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	cmp	r14b, 255				; 000000ffH
	je	SHORT $LN327@make_move_
	movzx	r8d, r14b
; Line 122
	movzx	edx, r14b
; Line 119
	and	r8b, 7
; Line 122
	shr	dl, 3
	and	dl, 1
	jmp	SHORT $LN336@make_move_
$LN327@make_move_:
	mov	dl, 2
$LN336@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 386
	mov	rcx, rbx
	call	?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z ; Position::remove_piece_from_list
$LN35@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 71
	mov	ecx, DWORD PTR [rdi]
	mov	QWORD PTR [rsp+48], r15
	bt	ecx, 18
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 390
	jae	$LN39@make_move_
; Line 393
	sar	ecx, 7
; Line 178
	mov	edx, 10
; Line 393
	and	ecx, 127				; 0000007fH
; Line 178
	mov	r15d, -10
	test	bpl, bpl
	cmovne	r15d, edx
	add	r15d, ecx
	js	SHORT $LN345@make_move_
	cmp	r15d, 120				; 00000078H
	jge	SHORT $LN345@make_move_
	movsxd	rax, r15d
	movzx	edx, BYTE PTR [rax+rbx]
; Line 402
	test	dl, dl
	je	SHORT $LN39@make_move_
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	movzx	r13d, dl
	cmp	dl, 255					; 000000ffH
	je	SHORT $LN416@make_move_
	shr	dl, 3
	mov	r9d, r15d
	and	dl, 1
	mov	r8b, 1
	mov	rcx, rbx
	call	?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z ; Position::remove_piece_from_list
	jmp	SHORT $LN560@make_move_
$LN345@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	mov	r13b, 255				; 000000ffH
$LN416@make_move_:
; Line 404
	mov	r9d, r15d
	mov	r8b, 1
	mov	dl, 2
	mov	rcx, rbx
	call	?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z ; Position::remove_piece_from_list
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 91
	cmp	r15d, -1
	je	SHORT $LN431@make_move_
$LN560@make_move_:
	cmp	r15d, 119				; 00000077H
	ja	SHORT $LN431@make_move_
; Line 92
	movsxd	rax, r15d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 180
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
	cmp	BYTE PTR [rax+rcx+240], 0
	je	SHORT $LN431@make_move_
	mov	BYTE PTR [rax+rbx], 0
$LN431@make_move_:
; Line 408
	mov	BYTE PTR [r12+32], r13b
	lea	r13, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
$LN39@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 79
	mov	ecx, DWORD PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 413
	movzx	edx, bpl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 79
	mov	r9d, ecx
	mov	eax, ecx
	and	r9d, 127				; 0000007fH
	sar	eax, 20
	test	al, 15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 413
	je	SHORT $LN40@make_move_
; Line 414
	mov	r8b, 1
	mov	rcx, rbx
	call	?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z ; Position::remove_piece_from_list
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 63
	mov	r8d, DWORD PTR [rdi]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 415
	movzx	edx, bpl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 63
	mov	r9d, r8d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 415
	mov	rcx, rbx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 63
	sar	r9d, 7
; Line 79
	sar	r8d, 20
; Line 63
	and	r9d, 127				; 0000007fH
; Line 79
	and	r8b, 15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 415
	call	?add_piece_to_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z ; Position::add_piece_to_list
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 79
	mov	eax, DWORD PTR [rdi]
	mov	ecx, eax
	sar	ecx, 20
	and	cl, 15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 125
	cmp	bpl, 2
	je	SHORT $LN362@make_move_
	test	cl, cl
	je	SHORT $LN362@make_move_
; Line 126
	shl	bpl, 3
	or	bpl, cl
	jmp	SHORT $LN360@make_move_
$LN362@make_move_:
; Line 125
	xor	bpl, bpl
$LN360@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 63
	sar	eax, 7
	and	eax, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 91
	cmp	eax, 120				; 00000078H
	jae	SHORT $LN269@make_move_
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 180
	cmp	BYTE PTR [rax+r13+240], 0
	je	SHORT $LN269@make_move_
	mov	BYTE PTR [rax+rbx], bpl
; Line 417
	jmp	SHORT $LN269@make_move_
$LN40@make_move_:
; Line 419
	movzx	r8d, BYTE PTR $T2[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 63
	sar	ecx, 7
	and	ecx, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 419
	mov	DWORD PTR [rsp+32], ecx
	mov	rcx, rbx
	call	?move_piece_in_list@Position@@QEAAXW4Color@@W4PieceType@@HH@Z ; Position::move_piece_in_list
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 63
	mov	eax, DWORD PTR [rdi]
	sar	eax, 7
	and	eax, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 91
	cmp	eax, 120				; 00000078H
	jae	SHORT $LN269@make_move_
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 180
	cmp	BYTE PTR [rax+r13+240], 0
	je	SHORT $LN269@make_move_
	mov	BYTE PTR [rax+rbx], sil
$LN269@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 59
	mov	eax, DWORD PTR [rdi]
	and	eax, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 91
	cmp	eax, 120				; 00000078H
	jae	SHORT $LN154@make_move_
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 180
	cmp	BYTE PTR [rax+r13+240], 0
	je	SHORT $LN154@make_move_
	mov	BYTE PTR [rax+rbx], 0
$LN154@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 83
	mov	ecx, DWORD PTR [rdi]
	bt	ecx, 24
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 426
	jae	$LN42@make_move_
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	lea	eax, DWORD PTR [rsi-1]
	and	ecx, 16256				; 00003f80H
	cmp	al, 253					; 000000fdH
	ja	SHORT $LN283@make_move_
	movzx	edx, sil
	shr	dl, 3
	and	dl, 1
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 430
	jne	SHORT $LN43@make_move_
; Line 438
	cmp	ecx, 3456				; 00000d80H
	mov	eax, 21
	mov	ebp, 28
	mov	r8d, 26
	cmovne	ebp, eax
	mov	eax, 24
	cmovne	r8d, eax
	jmp	SHORT $LN48@make_move_
$LN283@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	mov	dl, 2
$LN43@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 439
	cmp	ecx, 12416				; 00003080H
	jne	SHORT $LN47@make_move_
; Line 440
	mov	ebp, 98					; 00000062H
; Line 441
	mov	r8d, 96					; 00000060H
; Line 442
	jmp	SHORT $LN48@make_move_
$LN47@make_move_:
; Line 443
	mov	ebp, 91					; 0000005bH
; Line 444
	mov	r8d, 94					; 0000005eH
$LN48@make_move_:
; Line 178
	mov	eax, ebp
	movzx	r15d, BYTE PTR [rax+rbx]
; Line 450
	test	r15b, r15b
	je	$LN50@make_move_
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	cmp	r15b, 255				; 000000ffH
	je	$LN50@make_move_
	movzx	eax, r15b
	and	al, 7
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 450
	cmp	al, 4
	jne	$LN50@make_move_
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	movzx	eax, r15b
	shr	al, 3
	and	al, 1
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 450
	cmp	al, dl
	jne	SHORT $LN50@make_move_
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 92
	mov	eax, r8d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 180
	cmp	BYTE PTR [rax+r13+240], 0
	je	SHORT $LN497@make_move_
	mov	BYTE PTR [rax+rbx], r15b
$LN497@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 92
	mov	eax, ebp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 180
	cmp	BYTE PTR [rax+r13+240], 0
	je	SHORT $LN510@make_move_
	mov	eax, ebp
	mov	BYTE PTR [rax+rbx], 0
$LN510@make_move_:
; Line 460
	mov	DWORD PTR [rsp+32], r8d
	mov	r9d, ebp
	mov	r8b, 4
	mov	rcx, rbx
	call	?move_piece_in_list@Position@@QEAAXW4Color@@W4PieceType@@HH@Z ; Position::move_piece_in_list
$LN42@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	lea	eax, DWORD PTR [rsi-1]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 463
	mov	DWORD PTR [rbx+124], -1
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	cmp	al, 253					; 000000fdH
	ja	$LN52@make_move_
	movzx	eax, sil
	and	al, 7
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 466
	cmp	al, 1
	jne	$LN52@make_move_
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 59
	mov	ecx, DWORD PTR [rdi]
	mov	eax, ecx
	and	eax, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 85
	cmp	eax, 120				; 00000078H
	jae	$LN381@make_move_
; Line 86
	movzx	r9d, BYTE PTR [rax+r13+120]
	jmp	$LN379@make_move_
$LN50@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 452
	test	dl, dl
	lea	rax, OFFSET FLAT:??_C@_05PMAELIEO@white@
	lea	rbx, OFFSET FLAT:??_C@_05BIMBDNDC@black@
	lea	rdx, OFFSET FLAT:??_C@_0BK@LOLBDCGO@CASTLING?5ERROR?3?5Expected?5@
	cmove	rbx, rax
	lea	rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	mov	rdx, rbx
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0BB@BMFLINMC@?5rook?5at?5square?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	edx, ebp
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0BC@KKDIGLCF@?5but?5found?5piece?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	edx, r15d
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_ostream.hpp
; Line 191
	call	??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
$LN645@make_move_:
	mov	r15, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+96]
	mov	rsi, QWORD PTR [rsp+112]
	mov	r12, QWORD PTR [rsp+120]
	mov	r14, QWORD PTR [rsp+56]
$LN1@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 491
	add	rsp, 64					; 00000040H
	pop	r13
	pop	rdi
	pop	rbx
	ret	0
$LN381@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 85
	mov	r9b, 255				; 000000ffH
$LN379@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 63
	sar	ecx, 7
	and	ecx, 127				; 0000007fH
	mov	edx, ecx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 85
	mov	r8d, edx
	cmp	ecx, 120				; 00000078H
	jae	SHORT $LN374@make_move_
; Line 86
	movzx	eax, BYTE PTR [rcx+r13+120]
	jmp	SHORT $LN372@make_move_
$LN374@make_move_:
; Line 85
	mov	al, 255					; 000000ffH
$LN372@make_move_:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 467
	movzx	r10d, r9b
; Line 468
	movzx	r9d, al
; Line 469
	mov	ecx, r9d
	sub	ecx, r10d
	mov	eax, ecx
	neg	eax
	cmovs	eax, ecx
; Line 472
	cmp	eax, 2
	jne	SHORT $LN52@make_move_
; Line 474
	lea	eax, DWORD PTR [r9+r10]
	shr	eax, 1
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 81
	cmp	edx, 120				; 00000078H
	jae	SHORT $LN465@make_move_
; Line 82
	movzx	edx, BYTE PTR [r8+r13]
	jmp	SHORT $LN463@make_move_
$LN465@make_move_:
; Line 81
	mov	dl, 255					; 000000ffH
$LN463@make_move_:
; Line 49
	lea	ecx, DWORD PTR [rax+rax*4]
	movzx	eax, dl
	lea	ecx, DWORD PTR [rcx*2+21]
	add	ecx, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 476
	mov	DWORD PTR [rbx+124], ecx
$LN52@make_move_:
; Line 480
	movzx	ecx, BYTE PTR [rbx+120]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	test	cl, cl
	jne	SHORT $LN211@make_move_
	mov	BYTE PTR [rbx+120], 1
	jmp	SHORT $LN53@make_move_
$LN211@make_move_:
	cmp	cl, 1
	mov	eax, 2
	mov	edx, 0
	cmove	eax, edx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 480
	mov	BYTE PTR [rbx+120], al
; Line 481
	jne	SHORT $LN53@make_move_
	inc	WORD PTR [rbx+132]
$LN53@make_move_:
; Line 484
	movzx	r9d, r14b
	movzx	r8d, sil
	mov	rdx, rdi
	mov	rcx, rbx
	call	?update_derived_state_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1@Z ; Position::update_derived_state_for_move
; Line 487
	mov	eax, DWORD PTR [r12+12]
	movzx	r9d, r14b
	mov	DWORD PTR [rsp+40], eax
	movzx	r8d, sil
	movzx	eax, BYTE PTR [r12+8]
	mov	rdx, rdi
	mov	rcx, rbx
	mov	BYTE PTR [rsp+32], al
	call	?update_zobrist_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1EH@Z ; Position::update_zobrist_for_move
; Line 490
	inc	DWORD PTR [rbx+856]
	jmp	$LN645@make_move_
$LN545@make_move_:
; Line 238
	lea	rdx, OFFSET FLAT:??_C@_0BD@POIAKKDB@ASSERTION?5FAILED?3?5@
	lea	rcx, OFFSET FLAT:?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0CJ@LCBDJEPI@Move?5destination?5square?5must?5be@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09JELCCAPN@?6?5?5File?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0DN@KBGLLII@C?3?2Users?2m_lad?2source?2repos?2MTD@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09EKACCMND@?6?5?5Line?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	edx, 238				; 000000eeH
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0O@PIFLCCFC@?6?5?5Function?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0BO@LNOOKDOM@Position?3?3make_move_with_undo@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0P@PPNCGEME@?6?5?5Condition?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0BI@MKMFONOJ@is_playable?$CIm?4get_to?$CI?$CJ?$CJ@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	call	abort
	int	3
$LN544@make_move_:
; Line 237
	lea	rdx, OFFSET FLAT:??_C@_0BD@POIAKKDB@ASSERTION?5FAILED?3?5@
	lea	rcx, OFFSET FLAT:?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0CE@NPCAPDGH@Move?5source?5square?5must?5be?5play@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09JELCCAPN@?6?5?5File?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0DN@KBGLLII@C?3?2Users?2m_lad?2source?2repos?2MTD@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09EKACCMND@?6?5?5Line?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	edx, 237				; 000000edH
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0O@PIFLCCFC@?6?5?5Function?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0BO@LNOOKDOM@Position?3?3make_move_with_undo@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0P@PPNCGEME@?6?5?5Condition?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0BK@BNNIJGEB@is_playable?$CIm?4get_from?$CI?$CJ?$CJ@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	call	abort
	int	3
$LN646@make_move_:
?make_move_with_undo@Position@@QEAAXAEBUS_MOVE@@@Z ENDP	; Position::make_move_with_undo
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?move_piece_in_list@Position@@QEAAXW4Color@@W4PieceType@@HH@Z
_TEXT	SEGMENT
this$ = 48
c$ = 56
pt$ = 64
from_square$ = 72
to_square$ = 80
?move_piece_in_list@Position@@QEAAXW4Color@@W4PieceType@@HH@Z PROC ; Position::move_piece_in_list, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 216
$LN76:
	push	rbx
	sub	rsp, 32					; 00000020H
	movsxd	r11, DWORD PTR to_square$[rsp]
	mov	rbx, rcx
	movzx	r10d, dl
; Line 217
	cmp	r10b, 2
	je	$LN12@move_piece
	test	r8b, r8b
	je	$LN12@move_piece
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 91
	cmp	r9d, -1
	je	$LN61@move_piece
	cmp	r9d, 119				; 00000077H
	ja	$LN61@move_piece
; Line 92
	movsxd	rax, r9d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 218
	cmp	BYTE PTR [rax+rcx+240], 0
	je	$LN61@move_piece
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 91
	cmp	r11d, -1
	je	SHORT $LN62@move_piece
	cmp	r11d, 119				; 00000077H
	ja	SHORT $LN62@move_piece
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 219
	cmp	BYTE PTR [r11+rcx+240], 0
	je	SHORT $LN62@move_piece
; Line 223
	imul	r10, r10, 7
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	movzx	eax, r8b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 223
	xor	edx, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	add	r10, rax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 223
	movsxd	r8, DWORD PTR [rbx+r10*4+776]
	test	r8, r8
	jle	SHORT $LN12@move_piece
	lea	rax, QWORD PTR [r10*4+27]
	mov	ecx, edx
	add	rax, r10
	lea	rax, QWORD PTR [rbx+rax*8]
$LL10@move_piece:
; Line 224
	cmp	DWORD PTR [rax], r9d
	je	SHORT $LN56@move_piece
; Line 223
	inc	edx
	inc	rcx
	add	rax, 4
	cmp	rcx, r8
	jl	SHORT $LL10@move_piece
$LN12@move_piece:
; Line 232
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN56@move_piece:
; Line 225
	movsxd	rax, edx
	lea	rcx, QWORD PTR [r10+r10*4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	lea	rcx, QWORD PTR [rax+rcx*2]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 225
	mov	DWORD PTR [rbx+rcx*4+216], r11d
; Line 232
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN62@move_piece:
; Line 219
	lea	rdx, OFFSET FLAT:??_C@_0BD@POIAKKDB@ASSERTION?5FAILED?3?5@
	lea	rcx, OFFSET FLAT:?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0CK@IABJNNHF@Invalid?5destination?5square?5for?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09JELCCAPN@?6?5?5File?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0DN@KBGLLII@C?3?2Users?2m_lad?2source?2repos?2MTD@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09EKACCMND@?6?5?5Line?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	edx, 219				; 000000dbH
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0O@PIFLCCFC@?6?5?5Function?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0BN@EOFLAMKG@Position?3?3move_piece_in_list@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0P@PPNCGEME@?6?5?5Condition?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0BH@DAFNLHPP@is_playable?$CIto_square?$CJ@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	call	abort
	int	3
$LN61@move_piece:
; Line 218
	lea	rdx, OFFSET FLAT:??_C@_0BD@POIAKKDB@ASSERTION?5FAILED?3?5@
	lea	rcx, OFFSET FLAT:?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0CF@LHMGNHND@Invalid?5source?5square?5for?5piece@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09JELCCAPN@?6?5?5File?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0DN@KBGLLII@C?3?2Users?2m_lad?2source?2repos?2MTD@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09EKACCMND@?6?5?5Line?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	edx, 218				; 000000daH
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0O@PIFLCCFC@?6?5?5Function?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0BN@EOFLAMKG@Position?3?3move_piece_in_list@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0P@PPNCGEME@?6?5?5Condition?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0BJ@IEJBKKEH@is_playable?$CIfrom_square?$CJ@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	call	abort
	int	3
$LN73@move_piece:
?move_piece_in_list@Position@@QEAAXW4Color@@W4PieceType@@HH@Z ENDP ; Position::move_piece_in_list
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z
_TEXT	SEGMENT
this$ = 48
c$ = 56
pt$ = 64
square$ = 72
?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z PROC ; Position::remove_piece_from_list, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 196
$LN115:
	sub	rsp, 40					; 00000028H
	mov	r11, rcx
; Line 197
	cmp	dl, 2
	je	$LN12@remove_pie
	test	r8b, r8b
	je	$LN12@remove_pie
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 91
	cmp	r9d, -1
	je	$LN100@remove_pie
	cmp	r9d, 119				; 00000077H
	ja	$LN100@remove_pie
; Line 92
	movsxd	rax, r9d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 198
	cmp	BYTE PTR [rax+rcx], 0
	je	$LN100@remove_pie
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	movzx	eax, dl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 201
	imul	rdx, rax, 7
	mov	QWORD PTR [rsp+48], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	movzx	eax, r8b
	add	rdx, rax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 198
	mov	QWORD PTR [rsp+32], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	lea	rdi, QWORD PTR [r11+rdx*4]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 201
	movsxd	rbx, DWORD PTR [rdi+776]
	test	ebx, ebx
	jle	$LN113@remove_pie
; Line 204
	xor	r8d, r8d
	test	ebx, ebx
	jle	$LN13@remove_pie
	lea	rax, QWORD PTR [rdx*4+27]
	mov	ecx, r8d
	add	rax, rdx
	lea	rax, QWORD PTR [r11+rax*8]
	npad	7
$LL10@remove_pie:
; Line 205
	cmp	DWORD PTR [rax], r9d
	je	SHORT $LN95@remove_pie
; Line 204
	inc	r8d
	inc	rcx
	add	rax, 4
	cmp	rcx, rbx
	jge	$LN13@remove_pie
	jmp	SHORT $LL10@remove_pie
$LN95@remove_pie:
; Line 207
	lea	eax, DWORD PTR [rbx-1]
; Line 208
	movsxd	rcx, r8d
	mov	DWORD PTR [rdi+776], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	lea	rax, QWORD PTR [rdx+rdx*4]
	lea	rdx, QWORD PTR [rax+rax]
	lea	rax, QWORD PTR [rdx+rbx]
	add	rcx, rdx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 208
	mov	eax, DWORD PTR [r11+rax*4+212]
	mov	rbx, QWORD PTR [rsp+48]
	mov	DWORD PTR [r11+rcx*4+216], eax
; Line 209
	movsxd	rax, DWORD PTR [rdi+776]
	mov	rdi, QWORD PTR [rsp+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	add	rax, rdx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 209
	mov	DWORD PTR [r11+rax*4+216], -1
$LN12@remove_pie:
; Line 214
	add	rsp, 40					; 00000028H
	ret	0
$LN113@remove_pie:
; Line 201
	lea	rdx, OFFSET FLAT:??_C@_0BD@POIAKKDB@ASSERTION?5FAILED?3?5@
	lea	rcx, OFFSET FLAT:?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0CK@PIOMOIAC@Cannot?5remove?5piece?5from?5empty?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09JELCCAPN@?6?5?5File?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0DN@KBGLLII@C?3?2Users?2m_lad?2source?2repos?2MTD@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09EKACCMND@?6?5?5Line?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	edx, 202				; 000000caH
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0O@PIFLCCFC@?6?5?5Function?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0CB@EGEAGGNG@Position?3?3remove_piece_from_lis@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0P@PPNCGEME@?6?5?5Condition?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0CA@LILOMOJN@pCount?$FLcolor_idx?$FN?$FLtype_idx?$FN?5?$DO?50@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	call	abort
	int	3
$LN13@remove_pie:
; Line 213
	lea	rdx, OFFSET FLAT:??_C@_0BD@POIAKKDB@ASSERTION?5FAILED?3?5@
	lea	rcx, OFFSET FLAT:?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0CN@JFKCPLIP@Piece?5not?5found?5in?5piece?5list?5d@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09JELCCAPN@?6?5?5File?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0DN@KBGLLII@C?3?2Users?2m_lad?2source?2repos?2MTD@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09EKACCMND@?6?5?5Line?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	edx, 213				; 000000d5H
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0O@PIFLCCFC@?6?5?5Function?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0CB@EGEAGGNG@Position?3?3remove_piece_from_lis@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0P@PPNCGEME@?6?5?5Condition?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_05LAPONLG@false@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	call	abort
	int	3
$LN100@remove_pie:
; Line 198
	lea	rdx, OFFSET FLAT:??_C@_0BD@POIAKKDB@ASSERTION?5FAILED?3?5@
	lea	rcx, OFFSET FLAT:?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0CI@PFOHCAPB@Cannot?5remove?5piece?5from?5invali@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09JELCCAPN@?6?5?5File?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0DN@KBGLLII@C?3?2Users?2m_lad?2source?2repos?2MTD@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09EKACCMND@?6?5?5Line?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	edx, 198				; 000000c6H
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0O@PIFLCCFC@?6?5?5Function?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0CB@EGEAGGNG@Position?3?3remove_piece_from_lis@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0P@PPNCGEME@?6?5?5Condition?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0BE@MEEEPPEO@is_playable?$CIsquare?$CJ@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	call	abort
	int	3
$LN111@remove_pie:
?remove_piece_from_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z ENDP ; Position::remove_piece_from_list
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?add_piece_to_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z
_TEXT	SEGMENT
this$ = 48
c$ = 56
pt$ = 64
square$ = 72
?add_piece_to_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z PROC ; Position::add_piece_to_list, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 183
$LN60:
	sub	rsp, 40					; 00000028H
	mov	r10, rcx
; Line 184
	cmp	dl, 2
	je	SHORT $LN9@add_piece_
	test	r8b, r8b
	je	SHORT $LN9@add_piece_
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 91
	cmp	r9d, -1
	je	$LN55@add_piece_
	cmp	r9d, 119				; 00000077H
	ja	$LN55@add_piece_
; Line 92
	movsxd	rax, r9d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 185
	cmp	BYTE PTR [rax+rcx], 0
	je	$LN55@add_piece_
; Line 188
	movzx	eax, dl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	imul	rdx, rax, 7
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 188
	movzx	eax, r8b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	add	rdx, rax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 188
	movsxd	rax, DWORD PTR [r10+rdx*4+776]
	cmp	eax, 10
	jge	SHORT $LN58@add_piece_
; Line 191
	lea	rcx, QWORD PTR [rdx+rdx*4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	lea	rcx, QWORD PTR [rax+rcx*2]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 191
	mov	DWORD PTR [r10+rcx*4+216], r9d
; Line 192
	inc	DWORD PTR [r10+rdx*4+776]
$LN9@add_piece_:
; Line 194
	add	rsp, 40					; 00000028H
	ret	0
$LN58@add_piece_:
; Line 188
	lea	rdx, OFFSET FLAT:??_C@_0BD@POIAKKDB@ASSERTION?5FAILED?3?5@
	lea	rcx, OFFSET FLAT:?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0CK@LHFJFDDN@Too?5many?5pieces?5of?5this?5type?5on@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09JELCCAPN@?6?5?5File?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0DN@KBGLLII@C?3?2Users?2m_lad?2source?2repos?2MTD@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09EKACCMND@?6?5?5Line?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	edx, 189				; 000000bdH
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0O@PIFLCCFC@?6?5?5Function?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0BM@BPCCCNAP@Position?3?3add_piece_to_list@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0P@PPNCGEME@?6?5?5Condition?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0DC@KHBHEAPL@pCount?$FLcolor_idx?$FN?$FLtype_idx?$FN?5?$DM?5M@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	call	abort
	int	3
$LN55@add_piece_:
; Line 185
	lea	rdx, OFFSET FLAT:??_C@_0BD@POIAKKDB@ASSERTION?5FAILED?3?5@
	lea	rcx, OFFSET FLAT:?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0CD@DGKNEBEB@Cannot?5add?5piece?5to?5invalid?5squ@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09JELCCAPN@?6?5?5File?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0DN@KBGLLII@C?3?2Users?2m_lad?2source?2repos?2MTD@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_09EKACCMND@?6?5?5Line?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	edx, 185				; 000000b9H
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0O@PIFLCCFC@?6?5?5Function?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0BM@BPCCCNAP@Position?3?3add_piece_to_list@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0P@PPNCGEME@?6?5?5Condition?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0BE@MEEEPPEO@is_playable?$CIsquare?$CJ@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	call	abort
	int	3
$LN56@add_piece_:
?add_piece_to_list@Position@@QEAAXW4Color@@W4PieceType@@H@Z ENDP ; Position::add_piece_to_list
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?set@Position@@QEAAXHW4Piece@@@Z
_TEXT	SEGMENT
this$ = 8
s$ = 16
p$ = 24
?set@Position@@QEAAXHW4Piece@@@Z PROC			; Position::set, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 91
	cmp	edx, -1
	je	SHORT $LN2@set
	cmp	edx, 119				; 00000077H
	ja	SHORT $LN2@set
; Line 92
	movsxd	rax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rdx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 180
	cmp	BYTE PTR [rax+rdx], 0
	je	SHORT $LN2@set
	mov	BYTE PTR [rax+rcx], r8b
$LN2@set:
	ret	0
?set@Position@@QEAAXHW4Piece@@@Z ENDP			; Position::set
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?at@Position@@QEBA?AW4Piece@@H@Z
_TEXT	SEGMENT
this$ = 8
s$ = 16
?at@Position@@QEBA?AW4Piece@@H@Z PROC			; Position::at, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 178
	cmp	edx, 119				; 00000077H
	ja	SHORT $LN3@at
	movsxd	rax, edx
	movzx	eax, BYTE PTR [rax+rcx]
; Line 179
	ret	0
$LN3@at:
; Line 178
	mov	al, 255					; 000000ffH
; Line 179
	ret	0
?at@Position@@QEBA?AW4Piece@@H@Z ENDP			; Position::at
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?update_derived_state_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1@Z
_TEXT	SEGMENT
this$ = 24
m$ = 32
moving$ = 40
captured$ = 48
?update_derived_state_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1@Z PROC ; Position::update_derived_state_for_move, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 110
$LN214:
	mov	QWORD PTR [rsp+32], rbx
	push	r14
	push	r15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	lea	eax, DWORD PTR [r8-1]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 110
	mov	rbx, rdx
	mov	r11, rcx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	cmp	al, 253					; 000000fdH
	ja	SHORT $LN15@update_der
	movzx	r10d, r8b
	shr	r10b, 3
	and	r10b, 1
	movzx	edx, r10b
; Line 119
	and	r8b, 7
	jmp	SHORT $LN24@update_der
$LN15@update_der:
	test	r8b, r8b
	je	SHORT $LN23@update_der
	mov	r10b, 2
	movzx	edx, r10b
	cmp	r8b, 255				; 000000ffH
	je	SHORT $LN23@update_der
	and	r8b, 7
	jmp	SHORT $LN24@update_der
$LN23@update_der:
	mov	r10b, 2
	xor	r8b, r8b
	movzx	edx, r10b
$LN24@update_der:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 115
	lea	r14, OFFSET FLAT:__ImageBase
	lea	r15, OFFSET FLAT:?PIECE_VALUES_MG@@3V?$array@H$06@std@@B
	test	r9b, r9b
	je	$LN5@update_der
	mov	QWORD PTR [rsp+24], rbp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	movzx	ecx, r9b
	and	cl, 7
	mov	QWORD PTR [rsp+32], rsi
	mov	QWORD PTR [rsp+40], rdi
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN37@update_der
	movzx	eax, cl
	dec	DWORD PTR [r11+rax*4+168]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 119
	cmp	cl, 6
	je	SHORT $LN186@update_der
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	movzx	eax, cl
	mov	edi, DWORD PTR [r15+rax*4]
; Line 122
	movzx	eax, r9b
	shr	al, 3
	and	al, 1
	jmp	SHORT $LN133@update_der
$LN37@update_der:
; Line 119
	dec	DWORD PTR [r11+168]
; Line 122
	mov	al, 2
; Line 119
	mov	edi, DWORD PTR ?PIECE_VALUES_MG@@3V?$array@H$06@std@@B
$LN133@update_der:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 120
	movzx	eax, al
	sub	DWORD PTR [r11+rax*4+208], edi
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	cmp	r9b, 255				; 000000ffH
	je	SHORT $LN210@update_der
$LN186@update_der:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 124
	cmp	cl, 1
	jne	SHORT $LN210@update_der
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 63
	mov	eax, DWORD PTR [rbx]
	sar	rax, 7
	and	eax, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 125
	movsxd	rcx, DWORD PTR ?MAILBOX_MAPS@@3UMailboxMaps@@B[r14+rax*4+256]
; Line 126
	test	ecx, ecx
	js	SHORT $LN210@update_der
; Line 127
	mov	rcx, QWORD PTR ?CLEAR_MASK@@3QB_KB[r14+rcx*8]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	shr	r9b, 3
	and	r9b, 1
	movzx	eax, r9b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 127
	and	QWORD PTR [r11+rax*8+144], rcx
; Line 128
	and	QWORD PTR [r11+160], rcx
$LN210@update_der:
	mov	rsi, QWORD PTR [rsp+32]
	mov	rbp, QWORD PTR [rsp+24]
	mov	rdi, QWORD PTR [rsp+40]
$LN5@update_der:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 79
	movsxd	rcx, DWORD PTR [rbx]
	mov	eax, ecx
	sar	eax, 20
	test	al, 15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 134
	je	$LN6@update_der
; Line 136
	dec	DWORD PTR [r11+172]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 79
	mov	eax, DWORD PTR [rbx]
	sar	eax, 20
	and	eax, 15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 137
	inc	DWORD PTR [r11+rax*4+168]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 125
	cmp	r10b, 2
	je	SHORT $LN183@update_der
; Line 126
	movzx	edx, r10b
; Line 119
	lea	rax, OFFSET FLAT:?PIECE_VALUES_MG@@3V?$array@H$06@std@@B+4
	jmp	SHORT $LN211@update_der
$LN183@update_der:
	mov	rax, r15
$LN211@update_der:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 140
	movzx	r8d, r10b
	shl	dl, 3
	mov	ecx, DWORD PTR [r11+r8*4+208]
	sub	ecx, DWORD PTR [rax]
	mov	DWORD PTR [r11+r8*4+208], ecx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 79
	mov	eax, DWORD PTR [rbx]
	sar	eax, 20
	and	al, 15
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 125
	cmp	r10b, 2
	je	SHORT $LN184@update_der
	test	al, al
	je	SHORT $LN184@update_der
; Line 126
	or	dl, al
; Line 119
	and	dl, 7
	jmp	SHORT $LN76@update_der
$LN184@update_der:
	xor	dl, dl
$LN76@update_der:
; Line 152
	movzx	eax, dl
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 141
	add	ecx, DWORD PTR [r15+rax*4]
	mov	DWORD PTR [r11+r8*4+208], ecx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 63
	mov	eax, DWORD PTR [rbx]
	sar	rax, 7
	and	eax, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 144
	movsxd	rcx, DWORD PTR ?MAILBOX_MAPS@@3UMailboxMaps@@B[r14+rax*4+256]
; Line 145
	test	ecx, ecx
	js	$LN11@update_der
; Line 146
	mov	rcx, QWORD PTR ?CLEAR_MASK@@3QB_KB[r14+rcx*8]
	and	QWORD PTR [r11+r8*8+144], rcx
; Line 147
	and	QWORD PTR [r11+160], rcx
; Line 168
	mov	rbx, QWORD PTR [rsp+48]
	pop	r15
	pop	r14
	ret	0
$LN6@update_der:
; Line 151
	cmp	r8b, 1
	jne	SHORT $LN10@update_der
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 59
	mov	rax, rcx
; Line 63
	sar	rcx, 7
; Line 59
	and	eax, 127				; 0000007fH
; Line 63
	and	ecx, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 153
	movsxd	r8, DWORD PTR ?MAILBOX_MAPS@@3UMailboxMaps@@B[r14+rax*4+256]
; Line 154
	movsxd	r9, DWORD PTR ?MAILBOX_MAPS@@3UMailboxMaps@@B[r14+rcx*4+256]
; Line 155
	test	r8d, r8d
	js	SHORT $LN11@update_der
	test	r9d, r9d
	js	SHORT $LN11@update_der
; Line 156
	mov	r8, QWORD PTR ?CLEAR_MASK@@3QB_KB[r14+r8*8]
; Line 157
	mov	rcx, QWORD PTR ?BIT_MASK@@3QB_KB[r14+r9*8]
	movzx	eax, r10b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	lea	rdx, QWORD PTR [r11+rax*8]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 156
	mov	rax, r8
	and	rax, QWORD PTR [rdx+144]
; Line 157
	or	rax, rcx
	mov	QWORD PTR [rdx+144], rax
; Line 158
	and	r8, QWORD PTR [r11+160]
; Line 159
	or	r8, rcx
	mov	QWORD PTR [r11+160], r8
; Line 168
	mov	rbx, QWORD PTR [rsp+48]
	pop	r15
	pop	r14
	ret	0
$LN10@update_der:
; Line 163
	cmp	r8b, 6
	jne	SHORT $LN11@update_der
; Line 165
	movzx	eax, r10b
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 63
	sar	ecx, 7
	and	ecx, 127				; 0000007fH
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 165
	mov	DWORD PTR [r11+rax*4+136], ecx
$LN11@update_der:
; Line 168
	mov	rbx, QWORD PTR [rsp+48]
	pop	r15
	pop	r14
	ret	0
?update_derived_state_for_move@Position@@QEAAXAEBUS_MOVE@@W4Piece@@1@Z ENDP ; Position::update_derived_state_for_move
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?restore_derived_state@Position@@QEAAXAEBUS_UNDO@@@Z
_TEXT	SEGMENT
this$ = 8
undo$ = 16
?restore_derived_state@Position@@QEAAXAEBUS_UNDO@@@Z PROC ; Position::restore_derived_state, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 100
	mov	rax, QWORD PTR [rdx+36]
	mov	r8, rdx
	mov	QWORD PTR [rcx+136], rax
	mov	r9, rcx
; Line 101
	movups	xmm0, XMMWORD PTR [rdx+48]
	movups	XMMWORD PTR [rcx+144], xmm0
; Line 102
	mov	rax, QWORD PTR [rdx+64]
	mov	QWORD PTR [rcx+160], rax
; Line 103
	movups	xmm0, XMMWORD PTR [rdx+72]
	movups	XMMWORD PTR [rcx+168], xmm0
	movsd	xmm1, QWORD PTR [rdx+88]
	movsd	QWORD PTR [rcx+184], xmm1
	mov	eax, DWORD PTR [rdx+96]
	mov	DWORD PTR [rcx+192], eax
; Line 104
	mov	rax, QWORD PTR [rdx+100]
	mov	QWORD PTR [rcx+208], rax
; Line 105
	lea	rax, QWORD PTR [rdx+108]
	mov	edx, 4
	add	rcx, 216				; 000000d8H
$LL3@restore_de:
	lea	rcx, QWORD PTR [rcx+128]
	movups	xmm0, XMMWORD PTR [rax]
	lea	rax, QWORD PTR [rax+128]
	movups	XMMWORD PTR [rcx-128], xmm0
	movups	xmm1, XMMWORD PTR [rax-112]
	movups	XMMWORD PTR [rcx-112], xmm1
	movups	xmm0, XMMWORD PTR [rax-96]
	movups	XMMWORD PTR [rcx-96], xmm0
	movups	xmm1, XMMWORD PTR [rax-80]
	movups	XMMWORD PTR [rcx-80], xmm1
	movups	xmm0, XMMWORD PTR [rax-64]
	movups	XMMWORD PTR [rcx-64], xmm0
	movups	xmm1, XMMWORD PTR [rax-48]
	movups	XMMWORD PTR [rcx-48], xmm1
	movups	xmm0, XMMWORD PTR [rax-32]
	movups	XMMWORD PTR [rcx-32], xmm0
	movups	xmm1, XMMWORD PTR [rax-16]
	movups	XMMWORD PTR [rcx-16], xmm1
	sub	rdx, 1
	jne	SHORT $LL3@restore_de
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR [rcx+16], xmm1
	movups	xmm0, XMMWORD PTR [rax+32]
	movups	XMMWORD PTR [rcx+32], xmm0
; Line 106
	movups	xmm0, XMMWORD PTR [r8+668]
	movups	XMMWORD PTR [r9+776], xmm0
	movups	xmm1, XMMWORD PTR [r8+684]
	movups	XMMWORD PTR [r9+792], xmm1
	movups	xmm0, XMMWORD PTR [r8+700]
	movups	XMMWORD PTR [r9+808], xmm0
	movsd	xmm1, QWORD PTR [r8+716]
	movsd	QWORD PTR [r9+824], xmm1
; Line 107
	ret	0
?restore_derived_state@Position@@QEAAXAEBUS_UNDO@@@Z ENDP ; Position::restore_derived_state
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEBAAEBV?$allocator@US_UNDO@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEBAAEBV?$allocator@US_UNDO@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1>::_Get_first, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1543
	mov	rax, rcx
; Line 1544
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEBAAEBV?$allocator@US_UNDO@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEAAAEAV?$allocator@US_UNDO@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEAAAEAV?$allocator@US_UNDO@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1>::_Get_first, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1539
	mov	rax, rcx
; Line 1540
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEAAAEAV?$allocator@US_UNDO@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Getal@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEBAAEBV?$allocator@US_UNDO@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEBAAEBV?$allocator@US_UNDO@@@2@XZ PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Getal, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2231
	mov	rax, rcx
; Line 2232
	ret	0
?_Getal@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEBAAEBV?$allocator@US_UNDO@@@2@XZ ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Getal@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAAEAV?$allocator@US_UNDO@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAAEAV?$allocator@US_UNDO@@@2@XZ PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Getal, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2227
	mov	rax, rcx
; Line 2228
	ret	0
?_Getal@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAAEAV?$allocator@US_UNDO@@@2@XZ ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Orphan_range@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEBAXPEAUS_UNDO@@0@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
__formal$ = 24
?_Orphan_range@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEBAXPEAUS_UNDO@@0@Z PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Orphan_range, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2223
	ret	0
?_Orphan_range@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEBAXPEAUS_UNDO@@0@Z ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Xlength, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2183
$LN4:
	sub	rsp, 40					; 00000028H
; Line 2184
	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
	int	3
$LN3@Xlength:
?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Change_array@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXQEAUS_UNDO@@_K1@Z
_TEXT	SEGMENT
this$ = 64
_Newvec$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
?_Change_array@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXQEAUS_UNDO@@_K1@Z PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Change_array, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2059
$LN25:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, rcx
	mov	rsi, r9
; Line 2069
	mov	rcx, QWORD PTR [rcx]
	mov	rbp, r8
	mov	rdi, rdx
	test	rcx, rcx
	je	SHORT $LN10@Change_arr
; Line 2072
	mov	r10, QWORD PTR [rbx+16]
	mov	rax, 3243383573399481603		; 2d02d02d02d02d03H
	sub	r10, rcx
	imul	r10
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	imul	rdx, rdx, 728				; 000002d8H
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN15@Change_arr
; Line 205
	mov	rax, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
; Line 219
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $LN14@Change_arr
; Line 220
	mov	rcx, rax
$LN15@Change_arr:
; Line 289
	call	??3@YAXPEAX_K@Z				; operator delete
$LN10@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2076
	imul	rax, rbp, 728				; 000002d8H
; Line 2079
	mov	rbp, QWORD PTR [rsp+72]
	add	rax, rdi
	mov	QWORD PTR [rbx], rdi
	mov	QWORD PTR [rbx+8], rax
	imul	rax, rsi, 728				; 000002d8H
	mov	rsi, QWORD PTR [rsp+80]
	add	rax, rdi
	mov	QWORD PTR [rbx+16], rax
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN14@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN22@Change_arr:
?_Change_array@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXQEAUS_UNDO@@_K1@Z ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Calculate_growth@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Calculate_growth@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Calculate_growth, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2006
	mov	rax, rcx
	mov	r8, rdx
; Line 1924
	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, QWORD PTR [rax]
	mov	rax, 3243383573399481603		; 2d02d02d02d02d03H
	imul	rcx
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
; Line 2011
	mov	rax, 25338934167183450			; 005a05a05a05a05aH
	mov	r9, rdx
	mov	rcx, rax
	shr	r9, 1
	sub	rcx, r9
	cmp	rdx, rcx
	ja	SHORT $LN1@Calculate_
; Line 2015
	lea	rax, QWORD PTR [r9+rdx]
; Line 2017
	cmp	rax, r8
	cmovb	rax, r8
$LN1@Calculate_:
; Line 2022
	ret	0
?_Calculate_growth@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAAAEAUS_UNDO@@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAAAEAUS_UNDO@@_K@Z PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1934
	imul	rax, rdx, 728				; 000002d8H
	add	rax, QWORD PTR [rcx]
; Line 1935
	ret	0
??A?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAAAEAUS_UNDO@@_K@Z ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?capacity@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEBA_KXZ PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::capacity, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1924
	mov	rdx, QWORD PTR [rcx+16]
	mov	rax, 3243383573399481603		; 2d02d02d02d02d03H
	sub	rdx, QWORD PTR [rcx]
	imul	rdx
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rax, rdx
; Line 1925
	ret	0
?capacity@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEBA_KXZ PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::max_size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1919
	mov	rax, 25338934167183450			; 005a05a05a05a05aH
; Line 1920
	ret	0
?max_size@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEBA_KXZ PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1915
	mov	rdx, QWORD PTR [rcx+8]
	mov	rax, 3243383573399481603		; 2d02d02d02d02d03H
	sub	rdx, QWORD PTR [rcx]
	imul	rdx
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rax, rdx
; Line 1916
	ret	0
?size@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
$T1 = 24
?resize@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::resize, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1630
	lea	r8, QWORD PTR $T1[rsp]
	jmp	??$_Resize@U_Value_init_tag@std@@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Resize<std::_Value_init_tag>
?resize@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SA_KAEBV?$allocator@US_UNDO@@@2@@Z
_TEXT	SEGMENT
__formal$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SA_KAEBV?$allocator@US_UNDO@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::max_size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 746
	mov	rax, 25338934167183450			; 005a05a05a05a05aH
; Line 747
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SA_KAEBV?$allocator@US_UNDO@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?allocate@?$allocator@US_UNDO@@@std@@QEAAPEAUS_UNDO@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@US_UNDO@@@std@@QEAAPEAUS_UNDO@@_K@Z PROC ; std::allocator<S_UNDO>::allocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 988
$LN10:
	sub	rsp, 40					; 00000028H
; Line 117
	mov	rax, 25338934167183450			; 005a05a05a05a05aH
	cmp	rdx, rax
	ja	SHORT $LN9@allocate
; Line 122
	imul	rcx, rdx, 728				; 000002d8H
; Line 991
	add	rsp, 40					; 00000028H
; Line 990
	jmp	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
$LN9@allocate:
; Line 118
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN7@allocate:
?allocate@?$allocator@US_UNDO@@@std@@QEAAPEAUS_UNDO@@_K@Z ENDP ; std::allocator<S_UNDO>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@US_UNDO@@@std@@QEAAXQEAUS_UNDO@@_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@US_UNDO@@@std@@QEAAXQEAUS_UNDO@@_K@Z PROC ; std::allocator<S_UNDO>::deallocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 982
$LN17:
	sub	rsp, 56					; 00000038H
	mov	rax, rdx
; Line 985
	imul	rdx, r8, 728				; 000002d8H
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN11@deallocate
; Line 205
	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H
; Line 219
	sub	rax, rcx
	sub	rax, 8
	cmp	rax, 31
	ja	SHORT $LN10@deallocate
; Line 220
	mov	rax, rcx
$LN11@deallocate:
; Line 289
	mov	rcx, rax
; Line 986
	add	rsp, 56					; 00000038H
; Line 289
	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN10@deallocate:
; Line 219
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN14@deallocate:
?deallocate@?$allocator@US_UNDO@@@std@@QEAAXQEAUS_UNDO@@_K@Z ENDP ; std::allocator<S_UNDO>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@W4Piece@@$0HI@@std@@QEBAAEBW4Piece@@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@W4Piece@@$0HI@@std@@QEBAAEBW4Piece@@_K@Z PROC ; std::array<enum Piece,120>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rax, QWORD PTR [rdx+rcx]
; Line 544
	ret	0
??A?$array@W4Piece@@$0HI@@std@@QEBAAEBW4Piece@@_K@Z ENDP ; std::array<enum Piece,120>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@W4Piece@@$0HI@@std@@QEAAAEAW4Piece@@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@W4Piece@@$0HI@@std@@QEAAAEAW4Piece@@_K@Z PROC ; std::array<enum Piece,120>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	lea	rax, QWORD PTR [rdx+rcx]
; Line 535
	ret	0
??A?$array@W4Piece@@$0HI@@std@@QEAAAEAW4Piece@@_K@Z ENDP ; std::array<enum Piece,120>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0S_UNDO@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0S_UNDO@@QEAA@XZ PROC					; S_UNDO::S_UNDO, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	xor	eax, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 47
	mov	DWORD PTR [rcx+12], -1
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	mov	QWORD PTR [rcx], rax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\position.hpp
; Line 47
	mov	BYTE PTR [rcx+8], al
	mov	WORD PTR [rcx+16], ax
	mov	QWORD PTR [rcx+24], rax
	mov	BYTE PTR [rcx+32], al
	mov	rax, rcx
	ret	0
??0S_UNDO@@QEAA@XZ ENDP					; S_UNDO::S_UNDO
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@V?$array@H$06@std@@$01@std@@QEBAAEBV?$array@H$06@1@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@V?$array@H$06@std@@$01@std@@QEBAAEBV?$array@H$06@1@_K@Z PROC ; std::array<std::array<int,7>,2>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	imul	rax, rdx, 28
	add	rax, rcx
; Line 544
	ret	0
??A?$array@V?$array@H$06@std@@$01@std@@QEBAAEBV?$array@H$06@1@_K@Z ENDP ; std::array<std::array<int,7>,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@V?$array@H$06@std@@$01@std@@QEAAAEAV?$array@H$06@1@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@V?$array@H$06@std@@$01@std@@QEAAAEAV?$array@H$06@1@_K@Z PROC ; std::array<std::array<int,7>,2>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	imul	rax, rdx, 28
	add	rax, rcx
; Line 535
	ret	0
??A?$array@V?$array@H$06@std@@$01@std@@QEAAAEAV?$array@H$06@1@_K@Z ENDP ; std::array<std::array<int,7>,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@H$09@std@@QEBAAEBH_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@H$09@std@@QEBAAEBH_K@Z PROC			; std::array<int,10>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rax, QWORD PTR [rcx+rdx*4]
; Line 544
	ret	0
??A?$array@H$09@std@@QEBAAEBH_K@Z ENDP			; std::array<int,10>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@H$09@std@@QEAAAEAH_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@H$09@std@@QEAAAEAH_K@Z PROC			; std::array<int,10>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	lea	rax, QWORD PTR [rcx+rdx*4]
; Line 535
	ret	0
??A?$array@H$09@std@@QEAAAEAH_K@Z ENDP			; std::array<int,10>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@V?$array@H$09@std@@$06@std@@QEBAAEBV?$array@H$09@1@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@V?$array@H$09@std@@$06@std@@QEBAAEBV?$array@H$09@1@_K@Z PROC ; std::array<std::array<int,10>,7>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rax, QWORD PTR [rdx+rdx*4]
	lea	rax, QWORD PTR [rcx+rax*8]
; Line 544
	ret	0
??A?$array@V?$array@H$09@std@@$06@std@@QEBAAEBV?$array@H$09@1@_K@Z ENDP ; std::array<std::array<int,10>,7>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@V?$array@H$09@std@@$06@std@@QEAAAEAV?$array@H$09@1@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@V?$array@H$09@std@@$06@std@@QEAAAEAV?$array@H$09@1@_K@Z PROC ; std::array<std::array<int,10>,7>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	lea	rax, QWORD PTR [rdx+rdx*4]
	lea	rax, QWORD PTR [rcx+rax*8]
; Line 535
	ret	0
??A?$array@V?$array@H$09@std@@$06@std@@QEAAAEAV?$array@H$09@1@_K@Z ENDP ; std::array<std::array<int,10>,7>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@V?$array@V?$array@H$09@std@@$06@std@@$01@std@@QEBAAEBV?$array@V?$array@H$09@std@@$06@1@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@V?$array@V?$array@H$09@std@@$06@std@@$01@std@@QEBAAEBV?$array@V?$array@H$09@std@@$06@1@_K@Z PROC ; std::array<std::array<std::array<int,10>,7>,2>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	imul	rax, rdx, 280				; 00000118H
	add	rax, rcx
; Line 544
	ret	0
??A?$array@V?$array@V?$array@H$09@std@@$06@std@@$01@std@@QEBAAEBV?$array@V?$array@H$09@std@@$06@1@_K@Z ENDP ; std::array<std::array<std::array<int,10>,7>,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@V?$array@V?$array@H$09@std@@$06@std@@$01@std@@QEAAAEAV?$array@V?$array@H$09@std@@$06@1@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@V?$array@V?$array@H$09@std@@$06@std@@$01@std@@QEAAAEAV?$array@V?$array@H$09@std@@$06@1@_K@Z PROC ; std::array<std::array<std::array<int,10>,7>,2>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	imul	rax, rdx, 280				; 00000118H
	add	rax, rcx
; Line 535
	ret	0
??A?$array@V?$array@V?$array@H$09@std@@$06@std@@$01@std@@QEAAAEAV?$array@V?$array@H$09@std@@$06@1@_K@Z ENDP ; std::array<std::array<std::array<int,10>,7>,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@_K$01@std@@QEAAAEA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@_K$01@std@@QEAAAEA_K_K@Z PROC		; std::array<unsigned __int64,2>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	lea	rax, QWORD PTR [rcx+rdx*8]
; Line 535
	ret	0
??A?$array@_K$01@std@@QEAAAEA_K_K@Z ENDP		; std::array<unsigned __int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@H$01@std@@QEBAAEBH_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@H$01@std@@QEBAAEBH_K@Z PROC			; std::array<int,2>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rax, QWORD PTR [rcx+rdx*4]
; Line 544
	ret	0
??A?$array@H$01@std@@QEBAAEBH_K@Z ENDP			; std::array<int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@H$01@std@@QEAAAEAH_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@H$01@std@@QEAAAEAH_K@Z PROC			; std::array<int,2>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	lea	rax, QWORD PTR [rcx+rdx*4]
; Line 535
	ret	0
??A?$array@H$01@std@@QEAAAEAH_K@Z ENDP			; std::array<int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?make_castle@@YA?AUS_MOVE@@HH@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
from$ = 88
to$ = 96
?make_castle@@YA?AUS_MOVE@@HH@Z PROC			; make_castle, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 150
$LN6:
	push	rbx
	sub	rsp, 64					; 00000040H
	mov	eax, r8d
; Line 48
	mov	DWORD PTR [rcx+4], 0
; Line 150
	mov	r10d, edx
; Line 49
	mov	BYTE PTR [rsp+48], 1
; Line 150
	mov	rbx, rcx
; Line 49
	mov	BYTE PTR [rsp+40], 0
	mov	edx, eax
	mov	BYTE PTR [rsp+32], 0
	mov	ecx, r10d
	xor	r9d, r9d
	xor	r8d, r8d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
	mov	DWORD PTR [rbx], eax
; Line 151
	mov	rax, rbx
; Line 152
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
?make_castle@@YA?AUS_MOVE@@HH@Z ENDP			; make_castle
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?make_promotion@@YA?AUS_MOVE@@HHW4PieceType@@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
from$ = 88
to$ = 96
promoted$ = 104
captured$ = 112
?make_promotion@@YA?AUS_MOVE@@HHW4PieceType@@0@Z PROC	; make_promotion, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 146
$LN6:
	push	rbx
	sub	rsp, 64					; 00000040H
	mov	eax, r8d
; Line 49
	mov	BYTE PTR [rsp+48], 0
	movzx	r8d, BYTE PTR captured$[rsp]
; Line 146
	mov	r10d, edx
; Line 49
	mov	BYTE PTR [rsp+40], r9b
; Line 146
	mov	rbx, rcx
; Line 48
	mov	DWORD PTR [rcx+4], 0
; Line 49
	xor	r9d, r9d
	mov	edx, eax
	mov	BYTE PTR [rsp+32], 0
	mov	ecx, r10d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
	mov	DWORD PTR [rbx], eax
; Line 147
	mov	rax, rbx
; Line 148
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
?make_promotion@@YA?AUS_MOVE@@HHW4PieceType@@0@Z ENDP	; make_promotion
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?make_pawn_start@@YA?AUS_MOVE@@HH@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
from$ = 88
to$ = 96
?make_pawn_start@@YA?AUS_MOVE@@HH@Z PROC		; make_pawn_start, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 142
$LN6:
	push	rbx
	sub	rsp, 64					; 00000040H
	mov	eax, r8d
; Line 48
	mov	DWORD PTR [rcx+4], 0
; Line 142
	mov	r10d, edx
; Line 49
	mov	BYTE PTR [rsp+48], 0
; Line 142
	mov	rbx, rcx
; Line 49
	mov	BYTE PTR [rsp+40], 0
	mov	edx, eax
	mov	BYTE PTR [rsp+32], 1
	mov	ecx, r10d
	xor	r9d, r9d
	xor	r8d, r8d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
	mov	DWORD PTR [rbx], eax
; Line 143
	mov	rax, rbx
; Line 144
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
?make_pawn_start@@YA?AUS_MOVE@@HH@Z ENDP		; make_pawn_start
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?make_en_passant@@YA?AUS_MOVE@@HH@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
from$ = 88
to$ = 96
?make_en_passant@@YA?AUS_MOVE@@HH@Z PROC		; make_en_passant, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 138
$LN6:
	push	rbx
	sub	rsp, 64					; 00000040H
	mov	eax, r8d
; Line 48
	mov	DWORD PTR [rcx+4], 0
; Line 138
	mov	r10d, edx
; Line 49
	mov	BYTE PTR [rsp+48], 0
	mov	r9b, 1
	mov	BYTE PTR [rsp+40], 0
; Line 138
	mov	rbx, rcx
; Line 49
	mov	BYTE PTR [rsp+32], 0
	movzx	r8d, r9b
	mov	edx, eax
	mov	ecx, r10d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
	mov	DWORD PTR [rbx], eax
; Line 139
	mov	rax, rbx
; Line 140
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
?make_en_passant@@YA?AUS_MOVE@@HH@Z ENDP		; make_en_passant
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?make_capture@@YA?AUS_MOVE@@HHW4PieceType@@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
from$ = 88
to$ = 96
captured$ = 104
?make_capture@@YA?AUS_MOVE@@HHW4PieceType@@@Z PROC	; make_capture, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 134
$LN6:
	push	rbx
	sub	rsp, 64					; 00000040H
	movzx	eax, r9b
; Line 48
	mov	DWORD PTR [rcx+4], 0
; Line 134
	mov	r10d, r8d
; Line 49
	mov	BYTE PTR [rsp+48], 0
; Line 134
	mov	r11d, edx
; Line 49
	mov	BYTE PTR [rsp+40], 0
; Line 134
	mov	rbx, rcx
; Line 49
	mov	BYTE PTR [rsp+32], 0
	movzx	r8d, al
	mov	edx, r10d
	mov	ecx, r11d
	xor	r9d, r9d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
	mov	DWORD PTR [rbx], eax
; Line 135
	mov	rax, rbx
; Line 136
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
?make_capture@@YA?AUS_MOVE@@HHW4PieceType@@@Z ENDP	; make_capture
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?make_move@@YA?AUS_MOVE@@HH@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
from$ = 88
to$ = 96
?make_move@@YA?AUS_MOVE@@HH@Z PROC			; make_move, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 130
$LN6:
	push	rbx
	sub	rsp, 64					; 00000040H
	mov	eax, r8d
; Line 48
	mov	DWORD PTR [rcx+4], 0
; Line 130
	mov	r10d, edx
; Line 49
	mov	BYTE PTR [rsp+48], 0
; Line 130
	mov	rbx, rcx
; Line 49
	mov	BYTE PTR [rsp+40], 0
	mov	edx, eax
	mov	BYTE PTR [rsp+32], 0
	mov	ecx, r10d
	xor	r9d, r9d
	xor	r8d, r8d
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
	mov	DWORD PTR [rbx], eax
; Line 131
	mov	rax, rbx
; Line 132
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
?make_move@@YA?AUS_MOVE@@HH@Z ENDP			; make_move
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?is_promotion@S_MOVE@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?is_promotion@S_MOVE@@QEBA_NXZ PROC			; S_MOVE::is_promotion, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 79
	mov	eax, DWORD PTR [rcx]
	sar	eax, 20
	test	al, 15
; Line 92
	setne	al
; Line 93
	ret	0
?is_promotion@S_MOVE@@QEBA_NXZ ENDP			; S_MOVE::is_promotion
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?is_capture@S_MOVE@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?is_capture@S_MOVE@@QEBA_NXZ PROC			; S_MOVE::is_capture, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 67
	mov	edx, DWORD PTR [rcx]
	mov	eax, edx
	sar	eax, 14
	test	al, 15
; Line 88
	jne	SHORT $LN3@is_capture
; Line 71
	bt	edx, 18
; Line 88
	jb	SHORT $LN3@is_capture
	xor	al, al
; Line 89
	ret	0
$LN3@is_capture:
; Line 88
	mov	al, 1
; Line 89
	ret	0
?is_capture@S_MOVE@@QEBA_NXZ ENDP			; S_MOVE::is_capture
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?is_castle@S_MOVE@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?is_castle@S_MOVE@@QEBA_NXZ PROC			; S_MOVE::is_castle, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 83
	movzx	eax, BYTE PTR [rcx+3]
	and	al, 1
; Line 84
	ret	0
?is_castle@S_MOVE@@QEBA_NXZ ENDP			; S_MOVE::is_castle
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?get_promoted@S_MOVE@@QEBA?AW4PieceType@@XZ
_TEXT	SEGMENT
this$ = 8
?get_promoted@S_MOVE@@QEBA?AW4PieceType@@XZ PROC	; S_MOVE::get_promoted, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 79
	mov	eax, DWORD PTR [rcx]
	sar	eax, 20
	and	al, 15
; Line 80
	ret	0
?get_promoted@S_MOVE@@QEBA?AW4PieceType@@XZ ENDP	; S_MOVE::get_promoted
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?is_en_passant@S_MOVE@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?is_en_passant@S_MOVE@@QEBA_NXZ PROC			; S_MOVE::is_en_passant, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 71
	mov	eax, DWORD PTR [rcx]
	shr	eax, 18
	and	al, 1
; Line 72
	ret	0
?is_en_passant@S_MOVE@@QEBA_NXZ ENDP			; S_MOVE::is_en_passant
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?get_captured@S_MOVE@@QEBA?AW4PieceType@@XZ
_TEXT	SEGMENT
this$ = 8
?get_captured@S_MOVE@@QEBA?AW4PieceType@@XZ PROC	; S_MOVE::get_captured, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 67
	mov	eax, DWORD PTR [rcx]
	sar	eax, 14
	and	al, 15
; Line 68
	ret	0
?get_captured@S_MOVE@@QEBA?AW4PieceType@@XZ ENDP	; S_MOVE::get_captured
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?get_to@S_MOVE@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?get_to@S_MOVE@@QEBAHXZ PROC				; S_MOVE::get_to, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 63
	mov	eax, DWORD PTR [rcx]
	sar	eax, 7
	and	eax, 127				; 0000007fH
; Line 64
	ret	0
?get_to@S_MOVE@@QEBAHXZ ENDP				; S_MOVE::get_to
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?get_from@S_MOVE@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?get_from@S_MOVE@@QEBAHXZ PROC				; S_MOVE::get_from, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 59
	mov	eax, DWORD PTR [rcx]
	and	eax, 127				; 0000007fH
; Line 60
	ret	0
?get_from@S_MOVE@@QEBAHXZ ENDP				; S_MOVE::get_from
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0S_MOVE@@QEAA@HHW4PieceType@@_N101@Z
_TEXT	SEGMENT
this$ = 80
from$ = 88
to$ = 96
captured$ = 104
en_passant$ = 112
pawn_start$ = 120
promoted$ = 128
castle$ = 136
??0S_MOVE@@QEAA@HHW4PieceType@@_N101@Z PROC		; S_MOVE::S_MOVE, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 45
$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 64					; 00000040H
; Line 49
	movzx	eax, BYTE PTR castle$[rsp]
	movzx	r10d, r9b
	movzx	r9d, BYTE PTR en_passant$[rsp]
	mov	r11d, r8d
	mov	BYTE PTR [rsp+48], al
	mov	ebx, edx
	movzx	eax, BYTE PTR promoted$[rsp]
	mov	rdi, rcx
	mov	BYTE PTR [rsp+40], al
	movzx	r8d, r10b
	movzx	eax, BYTE PTR pawn_start$[rsp]
	mov	edx, r11d
	mov	DWORD PTR [rcx+4], 0
	mov	ecx, ebx
	mov	BYTE PTR [rsp+32], al
	call	?encode_move@S_MOVE@@SAHHHW4PieceType@@_N101@Z ; S_MOVE::encode_move
; Line 50
	mov	rbx, QWORD PTR [rsp+80]
	mov	DWORD PTR [rdi], eax
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??0S_MOVE@@QEAA@HHW4PieceType@@_N101@Z ENDP		; S_MOVE::S_MOVE
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0S_MOVE@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0S_MOVE@@QEAA@XZ PROC					; S_MOVE::S_MOVE, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??0S_MOVE@@QEAA@XZ ENDP					; S_MOVE::S_MOVE
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@H$0HI@@std@@QEBAAEBH_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@H$0HI@@std@@QEBAAEBH_K@Z PROC		; std::array<int,120>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rax, QWORD PTR [rcx+rdx*4]
; Line 544
	ret	0
??A?$array@H$0HI@@std@@QEBAAEBH_K@Z ENDP		; std::array<int,120>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?is_playable@@YA_NH@Z
_TEXT	SEGMENT
sq120$ = 8
?is_playable@@YA_NH@Z PROC				; is_playable, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 91
	cmp	ecx, -1
	je	SHORT $LN3@is_playabl
	cmp	ecx, 119				; 00000077H
	ja	SHORT $LN3@is_playabl
; Line 92
	movsxd	rax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+240
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 92
	movzx	eax, BYTE PTR [rax+rcx]
; Line 93
	ret	0
$LN3@is_playabl:
; Line 91
	xor	al, al
; Line 93
	ret	0
?is_playable@@YA_NH@Z ENDP				; is_playable
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?rank_of@@YA?AW4Rank@@H@Z
_TEXT	SEGMENT
sq120$ = 8
?rank_of@@YA?AW4Rank@@H@Z PROC				; rank_of, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 85
	cmp	ecx, -1
	je	SHORT $LN3@rank_of
	cmp	ecx, 119				; 00000077H
	ja	SHORT $LN3@rank_of
; Line 86
	movsxd	rax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B+120
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 86
	movzx	eax, BYTE PTR [rax+rcx]
; Line 87
	ret	0
$LN3@rank_of:
; Line 85
	mov	al, 255					; 000000ffH
; Line 87
	ret	0
?rank_of@@YA?AW4Rank@@H@Z ENDP				; rank_of
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?file_of@@YA?AW4File@@H@Z
_TEXT	SEGMENT
sq120$ = 8
?file_of@@YA?AW4File@@H@Z PROC				; file_of, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 81
	cmp	ecx, -1
	je	SHORT $LN3@file_of
	cmp	ecx, 119				; 00000077H
	ja	SHORT $LN3@file_of
; Line 82
	movsxd	rax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rcx, OFFSET FLAT:?FILE_RANK_LOOKUPS@@3UFileRankLookups@@B ; FILE_RANK_LOOKUPS
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 82
	movzx	eax, BYTE PTR [rax+rcx]
; Line 83
	ret	0
$LN3@file_of:
; Line 81
	mov	al, 255					; 000000ffH
; Line 83
	ret	0
?file_of@@YA?AW4File@@H@Z ENDP				; file_of
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@_N$0HI@@std@@QEBAAEB_N_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@_N$0HI@@std@@QEBAAEB_N_K@Z PROC		; std::array<bool,120>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rax, QWORD PTR [rdx+rcx]
; Line 544
	ret	0
??A?$array@_N$0HI@@std@@QEBAAEB_N_K@Z ENDP		; std::array<bool,120>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@W4Rank@@$0HI@@std@@QEBAAEBW4Rank@@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@W4Rank@@$0HI@@std@@QEBAAEBW4Rank@@_K@Z PROC	; std::array<enum Rank,120>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rax, QWORD PTR [rdx+rcx]
; Line 544
	ret	0
??A?$array@W4Rank@@$0HI@@std@@QEBAAEBW4Rank@@_K@Z ENDP	; std::array<enum Rank,120>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@W4File@@$0HI@@std@@QEBAAEBW4File@@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@W4File@@$0HI@@std@@QEBAAEBW4File@@_K@Z PROC	; std::array<enum File,120>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rax, QWORD PTR [rdx+rcx]
; Line 544
	ret	0
??A?$array@W4File@@$0HI@@std@@QEBAAEBW4File@@_K@Z ENDP	; std::array<enum File,120>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?sq@@YAHW4File@@W4Rank@@@Z
_TEXT	SEGMENT
f$ = 8
r$ = 16
?sq@@YAHW4File@@W4Rank@@@Z PROC				; sq, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\board120.hpp
; Line 47
	movzx	eax, dl
; Line 49
	lea	edx, DWORD PTR [rax+rax*4]
	movzx	eax, cl
	lea	eax, DWORD PTR [rax+rdx*2]
	add	eax, 21
; Line 50
	ret	0
?sq@@YAHW4File@@W4Rank@@@Z ENDP				; sq
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Unchecked_end@?$array@H$07@std@@QEBAPEBHXZ
_TEXT	SEGMENT
this$ = 8
?_Unchecked_end@?$array@H$07@std@@QEBAPEBHXZ PROC	; std::array<int,8>::_Unchecked_end, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 498
	lea	rax, QWORD PTR [rcx+32]
; Line 499
	ret	0
?_Unchecked_end@?$array@H$07@std@@QEBAPEBHXZ ENDP	; std::array<int,8>::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Unchecked_begin@?$array@H$07@std@@QEBAPEBHXZ
_TEXT	SEGMENT
this$ = 8
?_Unchecked_begin@?$array@H$07@std@@QEBAPEBHXZ PROC	; std::array<int,8>::_Unchecked_begin, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 490
	mov	rax, rcx
; Line 491
	ret	0
?_Unchecked_begin@?$array@H$07@std@@QEBAPEBHXZ ENDP	; std::array<int,8>::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?value_of@@YAHW4Piece@@@Z
_TEXT	SEGMENT
p$ = 8
?value_of@@YAHW4Piece@@@Z PROC				; value_of, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	lea	eax, DWORD PTR [rcx-1]
	cmp	al, 253					; 000000fdH
	ja	SHORT $LN5@value_of
	and	cl, 7
; Line 152
	movzx	eax, cl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rcx, OFFSET FLAT:?PIECE_VALUES_MG@@3V?$array@H$06@std@@B
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	mov	eax, DWORD PTR [rcx+rax*4]
; Line 153
	ret	0
$LN5@value_of:
; Line 119
	xor	cl, cl
; Line 152
	movzx	eax, cl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rcx, OFFSET FLAT:?PIECE_VALUES_MG@@3V?$array@H$06@std@@B
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 152
	mov	eax, DWORD PTR [rcx+rax*4]
; Line 153
	ret	0
?value_of@@YAHW4Piece@@@Z ENDP				; value_of
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@H$06@std@@QEBAAEBH_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@H$06@std@@QEBAAEBH_K@Z PROC			; std::array<int,7>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rax, QWORD PTR [rcx+rdx*4]
; Line 544
	ret	0
??A?$array@H$06@std@@QEBAAEBH_K@Z ENDP			; std::array<int,7>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@H$06@std@@QEAAAEAH_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@H$06@std@@QEAAAEAH_K@Z PROC			; std::array<int,7>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 534
	lea	rax, QWORD PTR [rcx+rdx*4]
; Line 535
	ret	0
??A?$array@H$06@std@@QEAAAEAH_K@Z ENDP			; std::array<int,7>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?make_piece@@YA?AW4Piece@@W4Color@@W4PieceType@@@Z
_TEXT	SEGMENT
c$ = 8
t$ = 16
?make_piece@@YA?AW4Piece@@W4Color@@W4PieceType@@@Z PROC	; make_piece, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 125
	cmp	cl, 2
	je	SHORT $LN3@make_piece
	test	dl, dl
	je	SHORT $LN3@make_piece
; Line 126
	shl	cl, 3
	or	cl, dl
	movzx	eax, cl
; Line 127
	ret	0
$LN3@make_piece:
; Line 125
	xor	al, al
; Line 127
	ret	0
?make_piece@@YA?AW4Piece@@W4Color@@W4PieceType@@@Z ENDP	; make_piece
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?color_of@@YA?AW4Color@@W4Piece@@@Z
_TEXT	SEGMENT
p$ = 8
?color_of@@YA?AW4Color@@W4Piece@@@Z PROC		; color_of, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 122
	lea	eax, DWORD PTR [rcx-1]
	cmp	al, 253					; 000000fdH
	ja	SHORT $LN3@color_of
	shr	cl, 3
	and	cl, 1
	movzx	eax, cl
; Line 123
	ret	0
$LN3@color_of:
; Line 122
	mov	al, 2
; Line 123
	ret	0
?color_of@@YA?AW4Color@@W4Piece@@@Z ENDP		; color_of
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?type_of@@YA?AW4PieceType@@W4Piece@@@Z
_TEXT	SEGMENT
p$ = 8
?type_of@@YA?AW4PieceType@@W4Piece@@@Z PROC		; type_of, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 119
	lea	eax, DWORD PTR [rcx-1]
	cmp	al, 253					; 000000fdH
	ja	SHORT $LN3@type_of
	and	cl, 7
	movzx	eax, cl
; Line 120
	ret	0
$LN3@type_of:
; Line 119
	xor	al, al
; Line 120
	ret	0
?type_of@@YA?AW4PieceType@@W4Piece@@@Z ENDP		; type_of
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?is_offboard@@YA_NW4Piece@@@Z
_TEXT	SEGMENT
p$ = 8
?is_offboard@@YA_NW4Piece@@@Z PROC			; is_offboard, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 116
	cmp	cl, 255					; 000000ffH
	sete	al
	ret	0
?is_offboard@@YA_NW4Piece@@@Z ENDP			; is_offboard
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?is_none@@YA_NW4Piece@@@Z
_TEXT	SEGMENT
p$ = 8
?is_none@@YA_NW4Piece@@@Z PROC				; is_none, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 115
	test	cl, cl
	sete	al
	ret	0
?is_none@@YA_NW4Piece@@@Z ENDP				; is_none
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??7@YA?AW4Color@@W40@@Z
_TEXT	SEGMENT
c$ = 8
??7@YA?AW4Color@@W40@@Z PROC				; operator!, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	test	cl, cl
	jne	SHORT $LN3@operator
	mov	al, 1
; Line 40
	ret	0
$LN3@operator:
; Line 37
	xor	edx, edx
	mov	eax, 2
	cmp	cl, 1
	cmove	eax, edx
; Line 40
	ret	0
??7@YA?AW4Color@@W40@@Z ENDP				; operator!
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?getloc@ios_base@std@@QEBA?AVlocale@2@XZ PROC		; std::ios_base::getloc, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 288
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 268
	mov	rax, QWORD PTR [rcx+64]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 288
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 268
	mov	rcx, QWORD PTR [rax+8]
	mov	QWORD PTR [rdx+8], rcx
; Line 269
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 289
	mov	rax, rbx
; Line 290
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ENDP		; std::ios_base::getloc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?width@ios_base@std@@QEAA_J_J@Z
_TEXT	SEGMENT
this$ = 8
_Newwidth$ = 16
?width@ios_base@std@@QEAA_J_J@Z PROC			; std::ios_base::width, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 283
	mov	rax, QWORD PTR [rcx+40]
; Line 284
	mov	QWORD PTR [rcx+40], rdx
; Line 286
	ret	0
?width@ios_base@std@@QEAA_J_J@Z ENDP			; std::ios_base::width
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?width@ios_base@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?width@ios_base@std@@QEBA_JXZ PROC			; std::ios_base::width, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 278
	mov	rax, QWORD PTR [rcx+40]
; Line 279
	ret	0
?width@ios_base@std@@QEBA_JXZ ENDP			; std::ios_base::width
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?precision@ios_base@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?precision@ios_base@std@@QEBA_JXZ PROC			; std::ios_base::precision, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 267
	mov	rax, QWORD PTR [rcx+32]
; Line 268
	ret	0
?precision@ios_base@std@@QEBA_JXZ ENDP			; std::ios_base::precision
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?flags@ios_base@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?flags@ios_base@std@@QEBAHXZ PROC			; std::ios_base::flags, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 237
	mov	eax, DWORD PTR [rcx+24]
; Line 238
	ret	0
?flags@ios_base@std@@QEBAHXZ ENDP			; std::ios_base::flags
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?good@ios_base@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?good@ios_base@std@@QEBA_NXZ PROC			; std::ios_base::good, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 206
	cmp	DWORD PTR [rcx+16], 0
	sete	al
; Line 207
	ret	0
?good@ios_base@std@@QEBA_NXZ ENDP			; std::ios_base::good
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?rdstate@ios_base@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?rdstate@ios_base@std@@QEBAHXZ PROC			; std::ios_base::rdstate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 187
	mov	eax, DWORD PTR [rcx+16]
; Line 188
	ret	0
?rdstate@ios_base@std@@QEBAHXZ ENDP			; std::ios_base::rdstate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@ios_base@std@@QEAAXH_N@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 112
_State$ = 120
_Reraise$ = 128
?clear@ios_base@std@@QEAAXH_N@Z PROC			; std::ios_base::clear, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 154
$LN15:
	sub	rsp, 104				; 00000068H
; Line 155
	and	edx, 23
; Line 156
	mov	DWORD PTR [rcx+16], edx
; Line 157
	and	edx, DWORD PTR [rcx+20]
; Line 158
	je	SHORT $LN2@clear
; Line 159
	test	r8b, r8b
	je	SHORT $LN3@clear
	jmp	SHORT $LN14@clear
$LN2@clear:
; Line 174
	add	rsp, 104				; 00000068H
	ret	0
$LN14@clear:
; Line 160
	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	int	3
$LN3@clear:
	mov	QWORD PTR [rsp+96], rbx
; Line 164
	test	dl, 4
	je	SHORT $LN4@clear
; Line 165
	lea	rbx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@
	jmp	SHORT $LN6@clear
$LN4@clear:
; Line 166
	test	dl, 2
	lea	rbx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@
	lea	rax, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@
	cmove	rbx, rax
$LN6@clear:
; Line 172
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
	mov	r8, rax
	lea	rcx, QWORD PTR $T2[rsp]
	mov	rdx, rbx
	call	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
	lea	rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
	lea	rcx, QWORD PTR $T2[rsp]
	call	_CxxThrowException
	mov	rbx, QWORD PTR [rsp+96]
$LN12@clear:
?clear@ios_base@std@@QEAAXH_N@Z ENDP			; std::ios_base::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gfailure@ios_base@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gfailure@ios_base@std@@UEAAPEAXI@Z PROC		; std::ios_base::failure::`scalar deleting destructor', COMDAT
$LN32:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx
; Line 91
	add	rcx, 8
	call	__std_exception_destroy
	test	bl, 1
	je	SHORT $LN28@scalar
	mov	edx, 40					; 00000028H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN28@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gfailure@ios_base@std@@UEAAPEAXI@Z ENDP		; std::ios_base::failure::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0failure@ios_base@std@@QEAA@AEBV012@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0failure@ios_base@std@@QEAA@AEBV012@@Z PROC		; std::ios_base::failure::failure, COMDAT
$LN24:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 73
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
	lea	rdx, QWORD PTR [rcx+8]
	mov	rdi, rcx
	xorps	xmm0, xmm0
; Line 72
	movups	XMMWORD PTR [rdx], xmm0
; Line 74
	lea	rcx, QWORD PTR [rbx+8]
	call	__std_exception_copy
	lea	rax, OFFSET FLAT:??_7_System_error@std@@6B@
	mov	QWORD PTR [rdi], rax
	lea	rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
	movups	xmm0, XMMWORD PTR [rbx+24]
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi], rax
	mov	rax, rdi
	movups	XMMWORD PTR [rdi+24], xmm0
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0failure@ios_base@std@@QEAA@AEBV012@@Z ENDP		; std::ios_base::failure::failure
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1failure@ios_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1failure@ios_base@std@@UEAA@XZ PROC			; std::ios_base::failure::~failure, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
; Line 91
	add	rcx, 8
	jmp	__std_exception_destroy
??1failure@ios_base@std@@UEAA@XZ ENDP			; std::ios_base::failure::~failure
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
_TEXT	SEGMENT
this$GSCopy$ = 48
$T1 = 48
$T2 = 64
__$ArrayPad$ = 96
this$ = 144
_Message$ = 152
_Errcode$ = 160
??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z PROC ; std::ios_base::failure::failure, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 116
$LN63:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 128				; 00000080H
	movaps	XMMWORD PTR [rsp+112], xmm6
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rdx
	mov	rdi, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx
; Line 117
	movups	xmm6, XMMWORD PTR [r8]
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 493
	movups	XMMWORD PTR $T2[rsp], xmm0
	xorps	xmm1, xmm1
; Line 517
	movdqu	XMMWORD PTR $T2[rsp+16], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 456
	mov	rcx, rdx
	call	strlen
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 769
	mov	r8, rax
	mov	rdx, rbx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 490
	movdqa	XMMWORD PTR $T1[rsp], xmm6
	lea	r8, QWORD PTR $T2[rsp]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rdi
	call	??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3083
	mov	rdx, QWORD PTR $T2[rsp+24]
	cmp	rdx, 15
	jbe	SHORT $LN46@failure
; Line 852
	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	mov	rcx, QWORD PTR $T2[rsp]
	mov	rax, rcx
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN51@failure
; Line 202
	add	rdx, 39					; 00000027H
; Line 205
	mov	rcx, QWORD PTR [rcx-8]
; Line 219
	sub	rax, rcx
	sub	rax, 8
	cmp	rax, 31
	ja	SHORT $LN61@failure
$LN51@failure:
; Line 289
	call	??3@YAXPEAX_K@Z				; operator delete
$LN46@failure:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xiosbase
; Line 117
	lea	rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
	mov	QWORD PTR [rdi], rax
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+168]
	movaps	xmm6, XMMWORD PTR [rsp+112]
	add	rsp, 128				; 00000080H
	pop	rdi
	ret	0
$LN61@failure:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN59@failure:
??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ENDP ; std::ios_base::failure::failure
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 48
$T1 = 48
$T2 = 64
__$ArrayPad$ = 96
this$ = 144
_Message$ = 152
_Errcode$ = 160
?dtor$1@?0???0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z@4HA PROC ; `std::ios_base::failure::failure'::`1'::dtor$1
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z@4HA ENDP ; `std::ios_base::failure::failure'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Adl_verify_range@PEADPEBD@std@@YAXAEBQEADAEBQEBD@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
??$_Adl_verify_range@PEADPEBD@std@@YAXAEBQEADAEBQEBD@Z PROC ; std::_Adl_verify_range<char *,char const *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 1361
	ret	0
??$_Adl_verify_range@PEADPEBD@std@@YAXAEBQEADAEBQEBD@Z ENDP ; std::_Adl_verify_range<char *,char const *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
_Loc$ = 80
_Psave_guard$1 = 80
_Lock$2 = 80
_Lock$3 = 88
_Psave$4 = 96
??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::ctype<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 435
$LN49:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 32					; 00000020H
	mov	rbp, rcx
; Line 436
	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$3[rsp]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
	npad	1
; Line 437
	mov	rsi, QWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::ctype<char> >::_Psave
	mov	QWORD PTR _Psave$4[rsp], rsi
; Line 91
	mov	rdi, QWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A ; std::ctype<char>::id
	test	rdi, rdi
	jne	SHORT $LN11@use_facet
; Line 92
	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$2[rsp]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
; Line 93
	cmp	QWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, rdi ; std::ctype<char>::id
	jne	SHORT $LN12@use_facet
; Line 94
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	cdqe
	mov	QWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, rax ; std::ctype<char>::id
$LN12@use_facet:
; Line 96
	lea	rcx, QWORD PTR _Lock$2[rsp]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
	mov	rdi, QWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A ; std::ctype<char>::id
$LN11@use_facet:
; Line 377
	mov	rcx, QWORD PTR [rbp+8]
	lea	r14, QWORD PTR [rdi*8]
	cmp	rdi, QWORD PTR [rcx+24]
	jae	SHORT $LN19@use_facet
	mov	rax, QWORD PTR [rcx+16]
	mov	rbx, QWORD PTR [r14+rax]
; Line 378
	test	rbx, rbx
	jne	SHORT $LN39@use_facet
	jmp	SHORT $LN42@use_facet
$LN19@use_facet:
; Line 377
	xor	ebx, ebx
$LN42@use_facet:
; Line 378
	cmp	BYTE PTR [rcx+36], 0
	je	SHORT $LN14@use_facet
; Line 383
	call	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale
; Line 384
	cmp	rdi, QWORD PTR [rax+24]
	jae	SHORT $LN43@use_facet
; Line 385
	mov	rax, QWORD PTR [rax+16]
	mov	rbx, QWORD PTR [r14+rax]
$LN14@use_facet:
; Line 442
	test	rbx, rbx
	jne	SHORT $LN39@use_facet
$LN43@use_facet:
; Line 443
	test	rsi, rsi
	je	SHORT $LN3@use_facet
; Line 444
	mov	rbx, rsi
	jmp	SHORT $LN39@use_facet
$LN3@use_facet:
; Line 445
	mov	rdx, rbp
	lea	rcx, QWORD PTR _Psave$4[rsp]
	call	?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::ctype<char>::_Getcat
	cmp	rax, -1
	je	SHORT $LN47@use_facet
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1531
	mov	rbx, QWORD PTR _Psave$4[rsp]
	mov	QWORD PTR _Psave_guard$1[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 458
	mov	rcx, rbx
	call	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register
; Line 461
	mov	rcx, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rcx+8]
	mov	rcx, rbx
	call	rdx
; Line 462
	mov	QWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB, rbx ; std::_Facetptr<std::ctype<char> >::_Psave
$LN39@use_facet:
; Line 469
	lea	rcx, QWORD PTR _Lock$3[rsp]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
	mov	rax, rbx
; Line 471
	add	rsp, 32					; 00000020H
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN47@use_facet:
; Line 447
	call	?_Throw_bad_cast@std@@YAXXZ		; std::_Throw_bad_cast
	npad	1
$LN44@use_facet:
??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::ctype<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Loc$ = 80
_Psave_guard$1 = 80
_Lock$2 = 80
_Lock$3 = 88
_Psave$4 = 96
?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::ctype<char> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Lock$3[rdx]
	jmp	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::ctype<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Loc$ = 80
_Psave_guard$1 = 80
_Lock$2 = 80
_Lock$3 = 88
_Psave$4 = 96
?dtor$1@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::ctype<char> >'::`1'::dtor$1
	lea	rcx, QWORD PTR _Psave_guard$1[rdx]
	jmp	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
?dtor$1@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::ctype<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$ctype@D@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$ctype@D@std@@MEAAPEAXI@Z PROC			; std::ctype<char>::`scalar deleting destructor', COMDAT
$LN23:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2814
	lea	rax, OFFSET FLAT:??_7?$ctype@D@std@@6B@
	mov	edi, edx
	mov	QWORD PTR [rcx], rax
	mov	rbx, rcx
; Line 2823
	mov	eax, DWORD PTR [rcx+32]
	test	eax, eax
	jle	SHORT $LN20@scalar
; Line 2824
	mov	rcx, QWORD PTR [rcx+24]
	call	free
	jmp	SHORT $LN13@scalar
$LN20@scalar:
; Line 2825
	jns	SHORT $LN13@scalar
; Line 2826
	mov	rcx, QWORD PTR [rcx+24]
	call	??_V@YAXPEAX@Z				; operator delete[]
$LN13@scalar:
; Line 2829
	mov	rcx, QWORD PTR [rbx+40]
	call	free
; Line 2816
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	QWORD PTR [rbx], rax
	test	dil, 1
	je	SHORT $LN16@scalar
	mov	edx, 48					; 00000030H
	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
$LN16@scalar:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$ctype@D@std@@MEAAPEAXI@Z ENDP			; std::ctype<char>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
__formal$ = 72
_Dest$ = 80
?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z PROC	; std::ctype<char>::do_narrow, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2876
$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 2878
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	rbx, r8
	sub	r8, rdx
	call	memcpy
; Line 2879
	mov	rax, rbx
; Line 2880
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z ENDP	; std::ctype<char>::do_narrow
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_narrow@?$ctype@D@std@@MEBADDD@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
__formal$ = 24
?do_narrow@?$ctype@D@std@@MEBADDD@Z PROC		; std::ctype<char>::do_narrow, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2872
	movzx	eax, dl
; Line 2873
	ret	0
?do_narrow@?$ctype@D@std@@MEBADDD@Z ENDP		; std::ctype<char>::do_narrow
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z PROC	; std::ctype<char>::do_widen, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2865
$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
; Line 2867
	mov	rcx, r9
	sub	r8, rdx
	call	memcpy
; Line 2868
	mov	rax, rbx
; Line 2869
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z ENDP	; std::ctype<char>::do_widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_widen@?$ctype@D@std@@MEBADD@Z
_TEXT	SEGMENT
this$ = 8
_Byte$ = 16
?do_widen@?$ctype@D@std@@MEBADD@Z PROC			; std::ctype<char>::do_widen, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2861
	movzx	eax, dl
; Line 2862
	ret	0
?do_widen@?$ctype@D@std@@MEBADD@Z ENDP			; std::ctype<char>::do_widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z PROC	; std::ctype<char>::do_toupper, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2851
$LN15:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8
	mov	rbx, rdx
; Line 2853
	cmp	rdx, r8
	je	SHORT $LN11@do_toupper
	mov	QWORD PTR [rsp+48], rsi
	lea	rsi, QWORD PTR [rcx+16]
	npad	2
$LL4@do_toupper:
; Line 2854
	movzx	ecx, BYTE PTR [rbx]
	mov	rdx, rsi
	call	_Toupper
	mov	BYTE PTR [rbx], al
	inc	rbx
	cmp	rbx, rdi
	jne	SHORT $LL4@do_toupper
; Line 2853
	mov	rsi, QWORD PTR [rsp+48]
$LN11@do_toupper:
; Line 2858
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z ENDP	; std::ctype<char>::do_toupper
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_toupper@?$ctype@D@std@@MEBADD@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
?do_toupper@?$ctype@D@std@@MEBADD@Z PROC		; std::ctype<char>::do_toupper, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2846
	movzx	eax, dl
; Line 2847
	lea	rdx, QWORD PTR [rcx+16]
	mov	ecx, eax
	jmp	_Toupper
?do_toupper@?$ctype@D@std@@MEBADD@Z ENDP		; std::ctype<char>::do_toupper
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z PROC	; std::ctype<char>::do_tolower, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2837
$LN15:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8
	mov	rbx, rdx
; Line 2839
	cmp	rdx, r8
	je	SHORT $LN11@do_tolower
	mov	QWORD PTR [rsp+48], rsi
	lea	rsi, QWORD PTR [rcx+16]
	npad	2
$LL4@do_tolower:
; Line 2840
	movzx	ecx, BYTE PTR [rbx]
	mov	rdx, rsi
	call	_Tolower
	mov	BYTE PTR [rbx], al
	inc	rbx
	cmp	rbx, rdi
	jne	SHORT $LL4@do_tolower
; Line 2839
	mov	rsi, QWORD PTR [rsp+48]
$LN11@do_tolower:
; Line 2844
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z ENDP	; std::ctype<char>::do_tolower
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?do_tolower@?$ctype@D@std@@MEBADD@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
?do_tolower@?$ctype@D@std@@MEBADD@Z PROC		; std::ctype<char>::do_tolower, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2832
	movzx	eax, dl
; Line 2833
	lea	rdx, QWORD PTR [rcx+16]
	mov	ecx, eax
	jmp	_Tolower
?do_tolower@?$ctype@D@std@@MEBADD@Z ENDP		; std::ctype<char>::do_tolower
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$ctype@D@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$ctype@D@std@@IEAAXXZ PROC			; std::ctype<char>::_Tidy, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2822
$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 2823
	mov	eax, DWORD PTR [rcx+32]
	mov	rbx, rcx
	test	eax, eax
	jle	SHORT $LN9@Tidy
; Line 2824
	mov	rcx, QWORD PTR [rcx+24]
	call	free
; Line 2829
	mov	rcx, QWORD PTR [rbx+40]
; Line 2830
	add	rsp, 32					; 00000020H
	pop	rbx
; Line 2829
	jmp	free
$LN9@Tidy:
; Line 2825
	jns	SHORT $LN4@Tidy
; Line 2826
	mov	rcx, QWORD PTR [rcx+24]
	call	??_V@YAXPEAX@Z				; operator delete[]
$LN4@Tidy:
; Line 2829
	mov	rcx, QWORD PTR [rbx+40]
; Line 2830
	add	rsp, 32					; 00000020H
	pop	rbx
; Line 2829
	jmp	free
?_Tidy@?$ctype@D@std@@IEAAXXZ ENDP			; std::ctype<char>::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 80
_Lobj$ = 88
?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z PROC	; std::ctype<char>::_Init, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2818
$LN6:
	push	rbx
	sub	rsp, 64					; 00000040H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 277
	lea	rcx, QWORD PTR $T1[rsp]
	call	_Getctype
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2819
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR [rbx+16], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR [rbx+32], xmm1
; Line 2820
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z ENDP	; std::ctype<char>::_Init
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ctype@D@std@@MEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ctype@D@std@@MEAA@XZ PROC				; std::ctype<char>::~ctype<char>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2814
$LN15:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7?$ctype@D@std@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
; Line 2823
	mov	eax, DWORD PTR [rcx+32]
	test	eax, eax
	jle	SHORT $LN12@ctype
; Line 2824
	mov	rcx, QWORD PTR [rcx+24]
	call	free
	jmp	SHORT $LN7@ctype
$LN12@ctype:
; Line 2825
	jns	SHORT $LN7@ctype
; Line 2826
	mov	rcx, QWORD PTR [rcx+24]
	call	??_V@YAXPEAX@Z				; operator delete[]
$LN7@ctype:
; Line 2829
	mov	rcx, QWORD PTR [rbx+40]
	call	free
; Line 2816
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	QWORD PTR [rbx], rax
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$ctype@D@std@@MEAA@XZ ENDP				; std::ctype<char>::~ctype<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 208
$T3 = 208
$T4 = 208
_Ploc$ = 216
?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z PROC ; std::ctype<char>::_Getcat, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2795
$LN118:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	rbp
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-71]
	sub	rsp, 176				; 000000b0H
	mov	r14, rdx
	mov	rsi, rcx
	xor	r15d, r15d
	mov	edi, r15d
	mov	DWORD PTR $T4[rbp-105], r15d
; Line 2796
	test	rcx, rcx
	je	$LN69@Getcat
	cmp	QWORD PTR [rcx], rdi
	jne	$LN69@Getcat
; Line 2797
	mov	ecx, 48					; 00000030H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax
	mov	QWORD PTR $T3[rbp-105], rax
	test	rax, rax
	je	$LN4@Getcat
; Line 373
	mov	rax, QWORD PTR [r14+8]
	test	rax, rax
	je	SHORT $LN12@Getcat
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 190
	mov	rdi, QWORD PTR [rax+40]
	test	rdi, rdi
	jne	SHORT $LN13@Getcat
	lea	rdi, QWORD PTR [rax+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 373
	jmp	SHORT $LN13@Getcat
$LN12@Getcat:
	lea	rdi, OFFSET FLAT:??_C@_00CNPNBAHC@@
$LN13@Getcat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 232
	xor	edx, edx
	lea	rcx, QWORD PTR $T1[rbp-105]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
	npad	1
; Line 140
	mov	QWORD PTR $T1[rbp-97], r15
	mov	BYTE PTR $T1[rbp-89], 0
	mov	QWORD PTR $T1[rbp-81], r15
	mov	BYTE PTR $T1[rbp-73], 0
	mov	QWORD PTR $T1[rbp-65], r15
	mov	WORD PTR $T1[rbp-57], r15w
	mov	QWORD PTR $T1[rbp-49], r15
	mov	WORD PTR $T1[rbp-41], r15w
	mov	QWORD PTR $T1[rbp-33], r15
	mov	BYTE PTR $T1[rbp-25], 0
	mov	QWORD PTR $T1[rbp-17], r15
	mov	BYTE PTR $T1[rbp-9], 0
; Line 235
	test	rdi, rdi
	je	$LN21@Getcat
; Line 236
	mov	rdx, rdi
	lea	rcx, QWORD PTR $T1[rbp-105]
	call	?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z ; std::_Locinfo::_Locinfo_ctor
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2797
	mov	edi, 1
; Line 143
	mov	DWORD PTR [rbx+8], r15d
; Line 2791
	lea	rax, OFFSET FLAT:??_7?$ctype@D@std@@6B@
	mov	QWORD PTR [rbx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 277
	lea	rcx, QWORD PTR $T2[rbp-105]
	call	_Getctype
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2819
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR [rbx+16], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR [rbx+32], xmm1
; Line 2797
	jmp	SHORT $LN5@Getcat
$LN4@Getcat:
	mov	rbx, r15
$LN5@Getcat:
	mov	QWORD PTR [rsi], rbx
	test	dil, 1
	je	SHORT $LN69@Getcat
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 257
	lea	rcx, QWORD PTR $T1[rbp-105]
	call	?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z ; std::_Locinfo::_Locinfo_dtor
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-17]
	test	rcx, rcx
	je	SHORT $LN77@Getcat
; Line 207
	call	free
$LN77@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-17], r15
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-33]
	test	rcx, rcx
	je	SHORT $LN84@Getcat
; Line 207
	call	free
$LN84@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-33], r15
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-49]
	test	rcx, rcx
	je	SHORT $LN91@Getcat
; Line 207
	call	free
$LN91@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-49], r15
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-65]
	test	rcx, rcx
	je	SHORT $LN98@Getcat
; Line 207
	call	free
$LN98@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-65], r15
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-81]
	test	rcx, rcx
	je	SHORT $LN105@Getcat
; Line 207
	call	free
$LN105@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-81], r15
; Line 203
	mov	rcx, QWORD PTR $T1[rbp-97]
	test	rcx, rcx
	je	SHORT $LN112@Getcat
; Line 207
	call	free
$LN112@Getcat:
; Line 211
	mov	QWORD PTR $T1[rbp-97], r15
; Line 258
	lea	rcx, QWORD PTR $T1[rbp-105]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
	npad	1
$LN69@Getcat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2800
	mov	eax, 2
; Line 2801
	lea	r11, QWORD PTR [rsp+176]
	mov	rbx, QWORD PTR [r11+40]
	mov	rsi, QWORD PTR [r11+48]
	mov	rdi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rbp
	ret	0
$LN21@Getcat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 240
	lea	rcx, OFFSET FLAT:??_C@_0BA@ELKIONDK@bad?5locale?5name@
	call	?_Xruntime_error@std@@YAXPEBD@Z		; std::_Xruntime_error
	int	3
$LN115@Getcat:
?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ENDP ; std::ctype<char>::_Getcat
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 208
$T3 = 208
$T4 = 208
_Ploc$ = 216
?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	edx, 48					; 00000030H
	mov	rcx, QWORD PTR $T3[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 208
$T3 = 208
$T4 = 208
_Ploc$ = 216
?dtor$2@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$2
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
?dtor$2@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 208
$T3 = 208
$T4 = 208
_Ploc$ = 216
?dtor$3@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$3
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 8
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$3@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 208
$T3 = 208
$T4 = 208
_Ploc$ = 216
?dtor$4@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$4
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 24
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$4@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 208
$T3 = 208
$T4 = 208
_Ploc$ = 216
?dtor$5@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$5
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 40					; 00000028H
	jmp	??1?$_Yarn@_W@std@@QEAA@XZ		; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$5@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 208
$T3 = 208
$T4 = 208
_Ploc$ = 216
?dtor$6@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$6
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 56					; 00000038H
	jmp	??1?$_Yarn@_W@std@@QEAA@XZ		; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$6@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 208
$T3 = 208
$T4 = 208
_Ploc$ = 216
?dtor$7@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$7
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 72					; 00000048H
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$7@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
_Ppf$ = 208
$T3 = 208
$T4 = 208
_Ploc$ = 216
?dtor$8@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$8
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 88					; 00000058H
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$8@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 80
_Lobj$ = 88
_Refs$ = 96
??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z PROC		; std::ctype<char>::ctype<char>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2791
$LN23:
	push	rbx
	sub	rsp, 64					; 00000040H
	lea	rax, OFFSET FLAT:??_7?$ctype@D@std@@6B@
; Line 143
	mov	DWORD PTR [rcx+8], r8d
; Line 2791
	mov	QWORD PTR [rcx], rax
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 277
	lea	rcx, QWORD PTR $T1[rsp]
	call	_Getctype
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2819
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR [rbx+16], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
; Line 2793
	mov	rax, rbx
; Line 2819
	movups	XMMWORD PTR [rbx+32], xmm1
; Line 2793
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z ENDP		; std::ctype<char>::ctype<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z
_TEXT	SEGMENT
this$ = 8
_First$ = 16
_Last$ = 24
_Dest$ = 32
?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z PROC		; std::ctype<char>::widen, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2760
	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+56]
?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z ENDP		; std::ctype<char>::widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?widen@?$ctype@D@std@@QEBADD@Z
_TEXT	SEGMENT
this$ = 8
_Byte$ = 16
?widen@?$ctype@D@std@@QEBADD@Z PROC			; std::ctype<char>::widen, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2755
	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+64]
?widen@?$ctype@D@std@@QEBADD@Z ENDP			; std::ctype<char>::widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gctype_base@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gctype_base@std@@UEAAPEAXI@Z PROC			; std::ctype_base::`scalar deleting destructor', COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	test	dl, 1
	je	SHORT $LN5@scalar
	mov	edx, 16
	call	??3@YAXPEAX_K@Z				; operator delete
$LN5@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_Gctype_base@std@@UEAAPEAXI@Z ENDP			; std::ctype_base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1ctype_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1ctype_base@std@@UEAA@XZ PROC				; std::ctype_base::~ctype_base, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2450
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	QWORD PTR [rcx], rax
	ret	0
??1ctype_base@std@@UEAA@XZ ENDP				; std::ctype_base::~ctype_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ctype_base@std@@QEAA@_K@Z
_TEXT	SEGMENT
this$ = 8
_Refs$ = 16
??0ctype_base@std@@QEAA@_K@Z PROC			; std::ctype_base::ctype_base, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 2448
	lea	rax, OFFSET FLAT:??_7ctype_base@std@@6B@
; Line 143
	mov	DWORD PTR [rcx+8], edx
; Line 2448
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??0ctype_base@std@@QEAA@_K@Z ENDP			; std::ctype_base::ctype_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Adl_verify_range@PEBDPEBD@std@@YAXAEBQEBD0@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
??$_Adl_verify_range@PEBDPEBD@std@@YAXAEBQEBD0@Z PROC	; std::_Adl_verify_range<char const *,char const *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 1361
	ret	0
??$_Adl_verify_range@PEBDPEBD@std@@YAXAEBQEBD0@Z ENDP	; std::_Adl_verify_range<char const *,char const *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
_TEXT	SEGMENT
this$ = 48
_Id$ = 56
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z PROC	; std::locale::_Getfacet, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 376
$LN13:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
; Line 377
	mov	rdx, QWORD PTR [rcx+8]
	lea	rdi, QWORD PTR [rbx*8]
	cmp	rbx, QWORD PTR [rdx+24]
	jae	SHORT $LN6@Getfacet
	mov	rax, QWORD PTR [rdx+16]
	mov	rax, QWORD PTR [rdi+rax]
; Line 378
	test	rax, rax
	jne	SHORT $LN3@Getfacet
	jmp	SHORT $LN8@Getfacet
$LN6@Getfacet:
; Line 377
	xor	eax, eax
$LN8@Getfacet:
; Line 378
	cmp	BYTE PTR [rdx+36], 0
	je	SHORT $LN3@Getfacet
; Line 383
	call	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale
; Line 384
	cmp	rbx, QWORD PTR [rax+24]
	jae	SHORT $LN4@Getfacet
; Line 385
	mov	rax, QWORD PTR [rax+16]
	mov	rax, QWORD PTR [rdi+rax]
; Line 389
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@Getfacet:
; Line 388
	xor	eax, eax
$LN3@Getfacet:
; Line 389
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ENDP	; std::locale::_Getfacet
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_C_str@locale@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_C_str@locale@std@@QEBAPEBDXZ PROC			; std::locale::_C_str, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 373
	mov	rdx, QWORD PTR [rcx+8]
	test	rdx, rdx
	je	SHORT $LN3@C_str
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 190
	mov	rax, QWORD PTR [rdx+40]
	test	rax, rax
	jne	SHORT $LN4@C_str
	lea	rax, QWORD PTR [rdx+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 374
	ret	0
$LN3@C_str:
; Line 373
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
$LN4@C_str:
; Line 374
	ret	0
?_C_str@locale@std@@QEBAPEBDXZ ENDP			; std::locale::_C_str
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1locale@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1locale@std@@QEAA@XZ PROC				; std::locale::~locale, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 353
$LN9:
	sub	rsp, 40					; 00000028H
; Line 354
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN4@locale
; Line 355
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	test	rax, rax
	je	SHORT $LN4@locale
	mov	rcx, QWORD PTR [rax]
	mov	edx, 1
	mov	r8, QWORD PTR [rcx]
	mov	rcx, rax
; Line 357
	add	rsp, 40					; 00000028H
; Line 355
	rex_jmp	r8
$LN4@locale:
; Line 357
	add	rsp, 40					; 00000028H
	ret	0
??1locale@std@@QEAA@XZ ENDP				; std::locale::~locale
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0locale@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0locale@std@@QEAA@AEBV01@@Z PROC			; std::locale::locale, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 268
$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rdx+8]
	mov	QWORD PTR [rbx+8], rcx
; Line 269
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
; Line 270
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0locale@std@@QEAA@AEBV01@@Z ENDP			; std::locale::locale
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gfacet@locale@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gfacet@locale@std@@MEAAPEAXI@Z PROC			; std::locale::facet::`scalar deleting destructor', COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	test	dl, 1
	je	SHORT $LN5@scalar
	mov	edx, 16
	call	??3@YAXPEAX_K@Z				; operator delete
$LN5@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_Gfacet@locale@std@@MEAAPEAXI@Z ENDP			; std::locale::facet::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1facet@locale@std@@MEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1facet@locale@std@@MEAA@XZ PROC			; std::locale::facet::~facet, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 146
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	QWORD PTR [rcx], rax
	ret	0
??1facet@locale@std@@MEAA@XZ ENDP			; std::locale::facet::~facet
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0facet@locale@std@@IEAA@_K@Z
_TEXT	SEGMENT
this$ = 8
_Initrefs$ = 16
??0facet@locale@std@@IEAA@_K@Z PROC			; std::locale::facet::facet, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 144
	lea	rax, OFFSET FLAT:??_7facet@locale@std@@6B@
; Line 143
	mov	DWORD PTR [rcx+8], edx
	mov	QWORD PTR [rcx], rax
; Line 144
	mov	rax, rcx
	ret	0
??0facet@locale@std@@IEAA@_K@Z ENDP			; std::locale::facet::facet
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
_TEXT	SEGMENT
this$ = 8
?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ PROC ; std::locale::facet::_Decref, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 131
	lock add DWORD PTR [rcx+8], -1
	mov	eax, 0
	cmove	rax, rcx
; Line 136
	ret	0
?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ENDP ; std::locale::facet::_Decref
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Incref@facet@locale@std@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Incref@facet@locale@std@@UEAAXXZ PROC			; std::locale::facet::_Incref, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 127
	lock inc DWORD PTR [rcx+8]
; Line 128
	ret	0
?_Incref@facet@locale@std@@UEAAXXZ ENDP			; std::locale::facet::_Incref
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$_Yarn@_W@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$_Yarn@_W@std@@AEAAXXZ PROC			; std::_Yarn<wchar_t>::_Tidy, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 202
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 203
	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN5@Tidy
; Line 207
	call	free
$LN5@Tidy:
; Line 212
	mov	QWORD PTR [rbx], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Tidy@?$_Yarn@_W@std@@AEAAXXZ ENDP			; std::_Yarn<wchar_t>::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Yarn@_W@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Yarn@_W@std@@QEAA@XZ PROC				; std::_Yarn<wchar_t>::~_Yarn<wchar_t>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 181
$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 203
	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN8@Yarn
; Line 207
	call	free
$LN8@Yarn:
; Line 183
	mov	QWORD PTR [rbx], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$_Yarn@_W@std@@QEAA@XZ ENDP				; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Yarn@_W@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Yarn@_W@std@@QEAA@XZ PROC				; std::_Yarn<wchar_t>::_Yarn<wchar_t>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 140
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	WORD PTR [rcx+8], ax
	mov	rax, rcx
	ret	0
??0?$_Yarn@_W@std@@QEAA@XZ ENDP				; std::_Yarn<wchar_t>::_Yarn<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$_Yarn@D@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$_Yarn@D@std@@AEAAXXZ PROC			; std::_Yarn<char>::_Tidy, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 202
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 203
	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN5@Tidy
; Line 207
	call	free
$LN5@Tidy:
; Line 212
	mov	QWORD PTR [rbx], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Tidy@?$_Yarn@D@std@@AEAAXXZ ENDP			; std::_Yarn<char>::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?c_str@?$_Yarn@D@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?c_str@?$_Yarn@D@std@@QEBAPEBDXZ PROC			; std::_Yarn<char>::c_str, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 190
	mov	rax, QWORD PTR [rcx]
	test	rax, rax
	jne	SHORT $LN4@c_str
	lea	rax, QWORD PTR [rcx+8]
$LN4@c_str:
; Line 191
	ret	0
?c_str@?$_Yarn@D@std@@QEBAPEBDXZ ENDP			; std::_Yarn<char>::c_str
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Yarn@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Yarn@D@std@@QEAA@XZ PROC				; std::_Yarn<char>::~_Yarn<char>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 181
$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 203
	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN8@Yarn
; Line 207
	call	free
$LN8@Yarn:
; Line 183
	mov	QWORD PTR [rbx], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$_Yarn@D@std@@QEAA@XZ ENDP				; std::_Yarn<char>::~_Yarn<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Yarn@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Yarn@D@std@@QEAA@XZ PROC				; std::_Yarn<char>::_Yarn<char>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 140
	mov	QWORD PTR [rcx], 0
	mov	rax, rcx
	mov	BYTE PTR [rcx+8], 0
	ret	0
??0?$_Yarn@D@std@@QEAA@XZ ENDP				; std::_Yarn<char>::_Yarn<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Gettrue@_Locinfo@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Gettrue@_Locinfo@std@@QEBAPEBDXZ PROC			; std::_Locinfo::_Gettrue, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 323
	lea	rax, OFFSET FLAT:??_C@_04LOAJBDKD@true@
; Line 324
	ret	0
?_Gettrue@_Locinfo@std@@QEBAPEBDXZ ENDP			; std::_Locinfo::_Gettrue
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Getfalse@_Locinfo@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Getfalse@_Locinfo@std@@QEBAPEBDXZ PROC		; std::_Locinfo::_Getfalse, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 319
	lea	rax, OFFSET FLAT:??_C@_05LAPONLG@false@
; Line 320
	ret	0
?_Getfalse@_Locinfo@std@@QEBAPEBDXZ ENDP		; std::_Locinfo::_Getfalse
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ
_TEXT	SEGMENT
this$ = 8
?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ PROC		; std::_Locinfo::_Getlconv, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 285
	jmp	localeconv
?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ ENDP		; std::_Locinfo::_Getlconv
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 96
__$ReturnUdt$ = 104
?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ PROC		; std::_Locinfo::_Getcvt, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 280
$LN4:
	push	rbx
	sub	rsp, 80					; 00000050H
; Line 281
	lea	rcx, QWORD PTR $T1[rsp]
	mov	rbx, rdx
	call	_Getcvt
	movups	xmm0, XMMWORD PTR [rax]
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR [rbx], xmm0
	movsd	xmm0, QWORD PTR [rax+32]
	mov	eax, DWORD PTR [rax+40]
	movups	XMMWORD PTR [rbx+16], xmm1
	movsd	QWORD PTR [rbx+32], xmm0
	mov	DWORD PTR [rbx+40], eax
	mov	rax, rbx
; Line 282
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ ENDP		; std::_Locinfo::_Getcvt
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 80
__$ReturnUdt$ = 88
?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ PROC	; std::_Locinfo::_Getctype, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 276
$LN4:
	push	rbx
	sub	rsp, 64					; 00000040H
; Line 277
	lea	rcx, QWORD PTR $T1[rsp]
	mov	rbx, rdx
	call	_Getctype
	movups	xmm0, XMMWORD PTR [rax]
	movups	xmm1, XMMWORD PTR [rax+16]
	mov	rax, rbx
	movups	XMMWORD PTR [rbx], xmm0
	movups	XMMWORD PTR [rbx+16], xmm1
; Line 278
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ ENDP	; std::_Locinfo::_Getctype
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1_Locinfo@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_Locinfo@std@@QEAA@XZ PROC				; std::_Locinfo::~_Locinfo, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 256
$LN48:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 257
	call	?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z ; std::_Locinfo::_Locinfo_dtor
; Line 203
	mov	rcx, QWORD PTR [rbx+88]
	test	rcx, rcx
	je	SHORT $LN8@Locinfo
; Line 207
	call	free
$LN8@Locinfo:
; Line 211
	xor	edi, edi
	mov	QWORD PTR [rbx+88], rdi
; Line 203
	mov	rcx, QWORD PTR [rbx+72]
	test	rcx, rcx
	je	SHORT $LN15@Locinfo
; Line 207
	call	free
$LN15@Locinfo:
; Line 211
	mov	QWORD PTR [rbx+72], rdi
; Line 203
	mov	rcx, QWORD PTR [rbx+56]
	test	rcx, rcx
	je	SHORT $LN22@Locinfo
; Line 207
	call	free
$LN22@Locinfo:
; Line 211
	mov	QWORD PTR [rbx+56], rdi
; Line 203
	mov	rcx, QWORD PTR [rbx+40]
	test	rcx, rcx
	je	SHORT $LN29@Locinfo
; Line 207
	call	free
$LN29@Locinfo:
; Line 211
	mov	QWORD PTR [rbx+40], rdi
; Line 203
	mov	rcx, QWORD PTR [rbx+24]
	test	rcx, rcx
	je	SHORT $LN36@Locinfo
; Line 207
	call	free
$LN36@Locinfo:
; Line 211
	mov	QWORD PTR [rbx+24], rdi
; Line 203
	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN43@Locinfo
; Line 207
	call	free
$LN43@Locinfo:
; Line 211
	mov	QWORD PTR [rbx+8], rdi
; Line 258
	mov	rcx, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
??1_Locinfo@std@@QEAA@XZ ENDP				; std::_Locinfo::~_Locinfo
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0_Locinfo@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
_Pch$ = 56
??0_Locinfo@std@@QEAA@PEBD@Z PROC			; std::_Locinfo::_Locinfo, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocinfo
; Line 234
$LN32:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx
	mov	rbx, rcx
; Line 232
	xor	edx, edx
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
	npad	1
; Line 140
	xor	eax, eax
	mov	QWORD PTR [rbx+8], rax
	mov	BYTE PTR [rbx+16], al
	mov	QWORD PTR [rbx+24], rax
	mov	BYTE PTR [rbx+32], al
	mov	QWORD PTR [rbx+40], rax
	mov	WORD PTR [rbx+48], ax
	mov	QWORD PTR [rbx+56], rax
	mov	WORD PTR [rbx+64], ax
	mov	QWORD PTR [rbx+72], rax
	mov	BYTE PTR [rbx+80], al
	mov	QWORD PTR [rbx+88], rax
	mov	BYTE PTR [rbx+96], al
; Line 235
	test	rdi, rdi
	je	SHORT $LN2@Locinfo
; Line 236
	mov	rdx, rdi
	mov	rcx, rbx
	call	?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z ; std::_Locinfo::_Locinfo_ctor
	npad	1
; Line 241
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Locinfo:
; Line 240
	lea	rcx, OFFSET FLAT:??_C@_0BA@ELKIONDK@bad?5locale?5name@
	call	?_Xruntime_error@std@@YAXPEBD@Z		; std::_Xruntime_error
	int	3
$LN29@Locinfo:
??0_Locinfo@std@@QEAA@PEBD@Z ENDP			; std::_Locinfo::_Locinfo
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pch$ = 56
?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pch$ = 56
?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 8
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pch$ = 56
?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$2
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 24
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pch$ = 56
?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$3
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 40					; 00000028H
	jmp	??1?$_Yarn@_W@std@@QEAA@XZ		; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pch$ = 56
?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$4
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 56					; 00000038H
	jmp	??1?$_Yarn@_W@std@@QEAA@XZ		; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pch$ = 56
?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$5
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 72					; 00000048H
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pch$ = 56
?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$6
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 88					; 00000058H
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_G_Facet_base@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_Facet_base@std@@UEAAPEAXI@Z PROC			; std::_Facet_base::`scalar deleting destructor', COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	test	dl, 1
	je	SHORT $LN5@scalar
	mov	edx, 8
	call	??3@YAXPEAX_K@Z				; operator delete
$LN5@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G_Facet_base@std@@UEAAPEAXI@Z ENDP			; std::_Facet_base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0_Facet_base@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Facet_base@std@@QEAA@XZ PROC			; std::_Facet_base::_Facet_base, COMDAT
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??0_Facet_base@std@@QEAA@XZ ENDP			; std::_Facet_base::_Facet_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1_Facet_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Facet_base@std@@UEAA@XZ PROC			; std::_Facet_base::~_Facet_base, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xfacet
; Line 25
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	QWORD PTR [rcx], rax
	ret	0
??1_Facet_base@std@@UEAA@XZ ENDP			; std::_Facet_base::~_Facet_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Throw_bad_cast@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_cast@std@@YAXXZ PROC			; std::_Throw_bad_cast, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\typeinfo
; Line 62
$LN4:
	sub	rsp, 72					; 00000048H
; Line 63
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0bad_cast@std@@QEAA@XZ		; std::bad_cast::bad_cast
	lea	rdx, OFFSET FLAT:_TI2?AVbad_cast@std@@
	lea	rcx, QWORD PTR $T1[rsp]
	call	_CxxThrowException
	int	3
$LN3@Throw_bad_:
?_Throw_bad_cast@std@@YAXXZ ENDP			; std::_Throw_bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gbad_cast@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_cast@std@@UEAAPEAXI@Z PROC			; std::bad_cast::`scalar deleting destructor', COMDAT
$LN17:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx
; Line 91
	add	rcx, 8
	call	__std_exception_destroy
	test	bl, 1
	je	SHORT $LN13@scalar
	mov	edx, 24
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN13@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_cast@std@@UEAAPEAXI@Z ENDP			; std::bad_cast::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0bad_cast@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_cast@std@@QEAA@AEBV01@@Z PROC			; std::bad_cast::bad_cast, COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 73
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	xorps	xmm0, xmm0
; Line 72
	lea	rdx, QWORD PTR [rbx+8]
; Line 73
	mov	QWORD PTR [rbx], rcx
; Line 74
	lea	rcx, QWORD PTR [rax+8]
	movups	XMMWORD PTR [rdx], xmm0
	call	__std_exception_copy
	lea	rax, OFFSET FLAT:??_7bad_cast@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0bad_cast@std@@QEAA@AEBV01@@Z ENDP			; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1bad_cast@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1bad_cast@std@@UEAA@XZ PROC				; std::bad_cast::~bad_cast, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
; Line 91
	add	rcx, 8
	jmp	__std_exception_destroy
??1bad_cast@std@@UEAA@XZ ENDP				; std::bad_cast::~bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0bad_cast@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0bad_cast@std@@QEAA@XZ PROC				; std::bad_cast::bad_cast, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_typeinfo.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 68
	lea	rax, OFFSET FLAT:??_C@_08EPJLHIJG@bad?5cast@
	mov	QWORD PTR [rcx+16], 0
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_typeinfo.h
; Line 153
	lea	rax, OFFSET FLAT:??_7bad_cast@std@@6B@
	mov	QWORD PTR [rcx], rax
; Line 154
	mov	rax, rcx
	ret	0
??0bad_cast@std@@QEAA@XZ ENDP				; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@0@XZ
_TEXT	SEGMENT
??$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@0@XZ PROC ; std::_Immortalize_memcpy_image<std::_Iostream_error_category2>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 670
	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@1@XZ@4U?$_Constexpr_immortalize_impl@V_Iostream_error_category2@std@@@1@A ; `std::_Immortalize_memcpy_image<std::_Iostream_error_category2>'::`2'::_Static
; Line 671
	ret	0
??$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@0@XZ ENDP ; std::_Immortalize_memcpy_image<std::_Iostream_error_category2>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_G_Iostream_error_category2@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_Iostream_error_category2@std@@UEAAPEAXI@Z PROC	; std::_Iostream_error_category2::`scalar deleting destructor', COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	test	dl, 1
	je	SHORT $LN5@scalar
	mov	edx, 16
	call	??3@YAXPEAX_K@Z				; operator delete
$LN5@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G_Iostream_error_category2@std@@UEAAPEAXI@Z ENDP	; std::_Iostream_error_category2::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1_Iostream_error_category2@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Iostream_error_category2@std@@UEAA@XZ PROC		; std::_Iostream_error_category2::~_Iostream_error_category2, COMDAT
	ret	0
??1_Iostream_error_category2@std@@UEAA@XZ ENDP		; std::_Iostream_error_category2::~_Iostream_error_category2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
_Errcode$ = 80
?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category2::message, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 555
$LN70:
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	xor	esi, esi
	mov	rdi, rdx
; Line 556
	cmp	r8d, 1
	jne	SHORT $LN2@message
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	mov	ecx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 493
	movups	XMMWORD PTR [rdx], xmm0
; Line 517
	mov	QWORD PTR [rdx+16], rsi
; Line 518
	mov	QWORD PTR [rdx+24], rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 913
	mov	QWORD PTR [rdi], rax
; Line 915
	mov	QWORD PTR [rdi+16], 21
; Line 916
	mov	QWORD PTR [rdi+24], 31
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	movups	xmm0, XMMWORD PTR ?_Iostream_error@?4??message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB
	movups	XMMWORD PTR [rax], xmm0
	mov	ecx, DWORD PTR ?_Iostream_error@?4??message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB+16
	mov	DWORD PTR [rax+16], ecx
	movzx	ecx, BYTE PTR ?_Iostream_error@?4??message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB+20
	mov	BYTE PTR [rax+20], cl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 922
	mov	BYTE PTR [rax+21], sil
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 563
	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN2@message:
; Line 561
	mov	ecx, r8d
	mov	QWORD PTR [rsp+64], rbx
	call	?_Syserror_map@std@@YAPEBDH@Z		; std::_Syserror_map
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 456
	mov	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 493
	movups	XMMWORD PTR [rdi], xmm0
; Line 517
	mov	QWORD PTR [rdi+16], rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 561
	mov	rbx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 518
	mov	QWORD PTR [rdi+24], rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 456
	call	strlen
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 769
	mov	r8, rax
	mov	rdx, rbx
	mov	rcx, rdi
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 561
	mov	rbx, QWORD PTR [rsp+64]
; Line 563
	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category2::message
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?name@_Iostream_error_category2@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?name@_Iostream_error_category2@std@@UEBAPEBDXZ PROC	; std::_Iostream_error_category2::name, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 552
	lea	rax, OFFSET FLAT:??_C@_08LLGCOLLL@iostream@
; Line 553
	ret	0
?name@_Iostream_error_category2@std@@UEBAPEBDXZ ENDP	; std::_Iostream_error_category2::name
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gsystem_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gsystem_error@std@@UEAAPEAXI@Z PROC			; std::system_error::`scalar deleting destructor', COMDAT
$LN27:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx
; Line 91
	add	rcx, 8
	call	__std_exception_destroy
	test	bl, 1
	je	SHORT $LN23@scalar
	mov	edx, 40					; 00000028H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN23@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gsystem_error@std@@UEAAPEAXI@Z ENDP			; std::system_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0system_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0system_error@std@@QEAA@AEBV01@@Z PROC		; std::system_error::system_error, COMDAT
$LN19:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 73
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
	lea	rdx, QWORD PTR [rcx+8]
	mov	rdi, rcx
	xorps	xmm0, xmm0
; Line 72
	movups	XMMWORD PTR [rdx], xmm0
; Line 74
	lea	rcx, QWORD PTR [rbx+8]
	call	__std_exception_copy
	lea	rax, OFFSET FLAT:??_7_System_error@std@@6B@
	mov	QWORD PTR [rdi], rax
	lea	rax, OFFSET FLAT:??_7system_error@std@@6B@
	movups	xmm0, XMMWORD PTR [rbx+24]
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi], rax
	mov	rax, rdi
	movups	XMMWORD PTR [rdi+24], xmm0
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0system_error@std@@QEAA@AEBV01@@Z ENDP		; std::system_error::system_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1system_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1system_error@std@@UEAA@XZ PROC			; std::system_error::~system_error, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
; Line 91
	add	rcx, 8
	jmp	__std_exception_destroy
??1system_error@std@@UEAA@XZ ENDP			; std::system_error::~system_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
_TEXT	SEGMENT
$T1 = 48
this$GSCopy$ = 48
$T2 = 64
__$ArrayPad$ = 96
this$ = 144
_Errcode$ = 152
_Message$ = 160
??0system_error@std@@QEAA@Verror_code@1@PEBD@Z PROC	; std::system_error::system_error, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 490
$LN59:
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 112				; 00000070H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, r8
	mov	rdi, rdx
	mov	rsi, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 493
	movups	XMMWORD PTR $T2[rsp], xmm0
	xorps	xmm1, xmm1
; Line 517
	movdqu	XMMWORD PTR $T2[rsp+16], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 456
	mov	rcx, r8
	call	strlen
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 769
	mov	r8, rax
	mov	rdx, rbx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 490
	movups	xmm0, XMMWORD PTR [rdi]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	lea	r8, QWORD PTR $T2[rsp]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rsi
	call	??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3083
	mov	rdx, QWORD PTR $T2[rsp+24]
	cmp	rdx, 15
	jbe	SHORT $LN43@system_err
; Line 852
	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	mov	rcx, QWORD PTR $T2[rsp]
	mov	rax, rcx
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN48@system_err
; Line 202
	add	rdx, 39					; 00000027H
; Line 205
	mov	rcx, QWORD PTR [rcx-8]
; Line 219
	sub	rax, rcx
	sub	rax, 8
	cmp	rax, 31
	ja	SHORT $LN57@system_err
$LN48@system_err:
; Line 289
	call	??3@YAXPEAX_K@Z				; operator delete
$LN43@system_err:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 490
	lea	rax, OFFSET FLAT:??_7system_error@std@@6B@
	mov	QWORD PTR [rsi], rax
	mov	rax, rsi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 112				; 00000070H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
$LN57@system_err:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN55@system_err:
??0system_error@std@@QEAA@Verror_code@1@PEBD@Z ENDP	; std::system_error::system_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
this$GSCopy$ = 48
$T2 = 64
__$ArrayPad$ = 96
this$ = 144
_Errcode$ = 152
_Message$ = 160
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA PROC ; `std::system_error::system_error'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA ENDP ; `std::system_error::system_error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_G_System_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_System_error@std@@UEAAPEAXI@Z PROC			; std::_System_error::`scalar deleting destructor', COMDAT
$LN22:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx
; Line 91
	add	rcx, 8
	call	__std_exception_destroy
	test	bl, 1
	je	SHORT $LN18@scalar
	mov	edx, 40					; 00000028H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN18@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G_System_error@std@@UEAAPEAXI@Z ENDP			; std::_System_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0_System_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0_System_error@std@@QEAA@AEBV01@@Z PROC		; std::_System_error::_System_error, COMDAT
$LN14:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 73
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
	lea	rdx, QWORD PTR [rcx+8]
	mov	rdi, rcx
	xorps	xmm0, xmm0
; Line 72
	movups	XMMWORD PTR [rdx], xmm0
; Line 74
	lea	rcx, QWORD PTR [rbx+8]
	call	__std_exception_copy
	lea	rax, OFFSET FLAT:??_7_System_error@std@@6B@
	mov	QWORD PTR [rdi], rax
	mov	rax, rdi
	movups	xmm0, XMMWORD PTR [rbx+24]
	mov	rbx, QWORD PTR [rsp+48]
	movups	XMMWORD PTR [rdi+24], xmm0
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0_System_error@std@@QEAA@AEBV01@@Z ENDP		; std::_System_error::_System_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1_System_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_System_error@std@@UEAA@XZ PROC			; std::_System_error::~_System_error, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
; Line 91
	add	rcx, 8
	jmp	__std_exception_destroy
??1_System_error@std@@UEAA@XZ ENDP			; std::_System_error::~_System_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T1 = 48
this$GSCopy$ = 80
$T2 = 80
_InitData$3 = 80
$T4 = 96
$T5 = 96
$T6 = 128
__$ArrayPad$ = 160
this$ = 240
_Errcode$ = 248
_Message$ = 256
??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_System_error::_System_error, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 475
$LN226:
	push	rbp
	push	rbx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-39]
	sub	rsp, 176				; 000000b0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-137], rax
	mov	rsi, r8
	mov	r15, rdx
	mov	r14, rcx
	mov	QWORD PTR this$GSCopy$[rbp-137], rcx
	xor	r12d, r12d
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 493
	movups	XMMWORD PTR $T1[rbp-137], xmm0
; Line 517
	mov	QWORD PTR $T1[rbp-121], r12
; Line 518
	mov	QWORD PTR $T1[rbp-113], r12
; Line 718
	mov	rbx, QWORD PTR [r8+16]
; Line 445
	cmp	QWORD PTR [r8+24], 15
	jbe	SHORT $LN22@System_err
; Line 446
	mov	rsi, QWORD PTR [r8]
$LN22@System_err:
; Line 881
	mov	rdi, 9223372036854775807		; 7fffffffffffffffH
	cmp	rbx, rdi
	ja	$LN222@System_err
; Line 889
	cmp	rbx, 15
	ja	SHORT $LN30@System_err
; Line 890
	mov	QWORD PTR $T1[rbp-121], rbx
; Line 891
	mov	QWORD PTR $T1[rbp-113], 15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	movups	xmm0, XMMWORD PTR [rsi]
	movups	XMMWORD PTR $T1[rbp-137], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 908
	jmp	SHORT $LN50@System_err
$LN30@System_err:
; Line 2978
	mov	rax, rbx
	or	rax, 15
	cmp	rax, rdi
; Line 2979
	ja	SHORT $LN35@System_err
; Line 2987
	mov	rdi, rax
	mov	ecx, 22
	cmp	rax, rcx
	cmovb	rdi, rcx
$LN35@System_err:
; Line 825
	lea	rcx, QWORD PTR [rdi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 913
	mov	QWORD PTR $T1[rbp-137], rax
; Line 915
	mov	QWORD PTR $T1[rbp-121], rbx
; Line 916
	mov	QWORD PTR $T1[rbp-113], rdi
; Line 924
	lea	r8, QWORD PTR [rbx+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rdx, rsi
	mov	rcx, rax
	call	memcpy
	mov	rbx, QWORD PTR $T1[rbp-121]
$LN50@System_err:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 476
	lea	rax, QWORD PTR $T1[rbp-137]
	mov	QWORD PTR $T2[rbp-137], rax
	movups	xmm1, XMMWORD PTR [r15]
	movaps	XMMWORD PTR $T5[rbp-137], xmm1
; Line 464
	test	rbx, rbx
	je	SHORT $LN55@System_err
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1534
	mov	r8d, 2
	lea	rdx, OFFSET FLAT:??_C@_02LMMGGCAJ@?3?5@
	lea	rcx, QWORD PTR $T1[rbp-137]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	movaps	xmm1, XMMWORD PTR $T5[rbp-137]
$LN55@System_err:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 207
	movdqa	xmm0, xmm1
	psrldq	xmm0, 8
	movq	rcx, xmm0
	mov	rax, QWORD PTR [rcx]
	movd	r8d, xmm1
	lea	rdx, QWORD PTR $T4[rbp-137]
	call	QWORD PTR [rax+16]
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 444
	lea	rdx, QWORD PTR $T4[rbp-137]
; Line 445
	cmp	QWORD PTR $T4[rbp-113], 15
	cmova	rdx, QWORD PTR $T4[rbp-137]
; Line 1483
	mov	r8, QWORD PTR $T4[rbp-121]
	lea	rcx, QWORD PTR $T1[rbp-137]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	npad	1
; Line 3083
	mov	rdx, QWORD PTR $T4[rbp-113]
	cmp	rdx, 15
	jbe	SHORT $LN102@System_err
; Line 852
	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	mov	rcx, QWORD PTR $T4[rbp-137]
	mov	rax, rcx
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN107@System_err
; Line 202
	add	rdx, 39					; 00000027H
; Line 205
	mov	rcx, QWORD PTR [rcx-8]
; Line 219
	sub	rax, rcx
	sub	rax, 8
	cmp	rax, 31
	ja	$LN223@System_err
$LN107@System_err:
; Line 289
	call	??3@YAXPEAX_K@Z				; operator delete
$LN102@System_err:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1286
	movups	xmm0, XMMWORD PTR $T1[rbp-137]
	movups	XMMWORD PTR $T6[rbp-137], xmm0
	movups	xmm1, XMMWORD PTR $T1[rbp-121]
	movups	XMMWORD PTR $T6[rbp-121], xmm1
; Line 3090
	mov	QWORD PTR $T1[rbp-121], r12
; Line 3091
	mov	QWORD PTR $T1[rbp-113], 15
; Line 3093
	mov	BYTE PTR $T1[rbp-137], 0
; Line 444
	lea	r8, QWORD PTR $T6[rbp-137]
; Line 445
	movq	rcx, xmm0
	psrldq	xmm1, 8
	movq	rax, xmm1
	cmp	rax, 15
	cmova	r8, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 60
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [r14], rax
; Line 59
	lea	rdx, QWORD PTR [r14+8]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [rdx], xmm0
; Line 61
	mov	QWORD PTR _InitData$3[rbp-137], r8
	mov	BYTE PTR _InitData$3[rbp-129], 1
; Line 62
	lea	rcx, QWORD PTR _InitData$3[rbp-137]
	call	__std_exception_copy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\stdexcept
; Line 104
	lea	rax, OFFSET FLAT:??_7runtime_error@std@@6B@
	mov	QWORD PTR [r14], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3083
	mov	rdx, QWORD PTR $T6[rbp-113]
	cmp	rdx, 15
	jbe	SHORT $LN209@System_err
; Line 852
	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	mov	rcx, QWORD PTR $T6[rbp-137]
	mov	rax, rcx
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN214@System_err
; Line 202
	add	rdx, 39					; 00000027H
; Line 205
	mov	rcx, QWORD PTR [rcx-8]
; Line 219
	sub	rax, rcx
	sub	rax, 8
	cmp	rax, 31
	ja	SHORT $LN224@System_err
$LN214@System_err:
; Line 289
	call	??3@YAXPEAX_K@Z				; operator delete
$LN209@System_err:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 476
	lea	rax, OFFSET FLAT:??_7_System_error@std@@6B@
	mov	QWORD PTR [r14], rax
	movups	xmm0, XMMWORD PTR [r15]
	movups	XMMWORD PTR [r14+24], xmm0
	mov	rax, r14
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-137]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 176				; 000000b0H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
$LN224@System_err:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	mov	QWORD PTR [rsp+32], r12
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN222@System_err:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 882
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN223@System_err:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	mov	QWORD PTR [rsp+32], r12
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN220@System_err:
??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_System_error::_System_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
this$GSCopy$ = 80
$T2 = 80
_InitData$3 = 80
$T4 = 96
$T5 = 96
$T6 = 128
__$ArrayPad$ = 160
this$ = 240
_Errcode$ = 248
_Message$ = 256
?dtor$5@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::_System_error::_System_error'::`1'::dtor$5
	mov	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::_System_error::_System_error'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
this$GSCopy$ = 80
$T2 = 80
_InitData$3 = 80
$T4 = 96
$T5 = 96
$T6 = 128
__$ArrayPad$ = 160
this$ = 240
_Errcode$ = 248
_Message$ = 256
?dtor$6@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::_System_error::_System_error'::`1'::dtor$6
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$6@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::_System_error::_System_error'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
_TEXT	SEGMENT
__$ReturnUdt$GSCopy$ = 56
_Message$GSCopy$ = 56
$T1 = 64
__$ArrayPad$ = 96
__$ReturnUdt$ = 144
_Errcode$ = 152
_Message$ = 160
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z PROC ; std::_System_error::_Makestr, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 463
$LN125:
	mov	QWORD PTR [rsp+32], rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 112				; 00000070H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, r8
	mov	rsi, rdx
	mov	rdi, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx
	mov	QWORD PTR _Message$GSCopy$[rsp], rbx
	xor	ebp, ebp
; Line 464
	cmp	QWORD PTR [r8+16], rbp
	je	SHORT $LN2@Makestr
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1534
	mov	r8d, 2
	lea	rdx, OFFSET FLAT:??_C@_02LMMGGCAJ@?3?5@
	mov	rcx, rbx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN2@Makestr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 207
	mov	rcx, QWORD PTR [rsi+8]
	mov	rax, QWORD PTR [rcx]
	mov	r8d, DWORD PTR [rsi]
	lea	rdx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax+16]
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 444
	lea	rdx, QWORD PTR $T1[rsp]
; Line 445
	cmp	QWORD PTR $T1[rsp+24], 15
	cmova	rdx, QWORD PTR $T1[rsp]
; Line 1483
	mov	r8, QWORD PTR $T1[rsp+16]
	mov	rcx, rbx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	npad	1
; Line 3083
	mov	rdx, QWORD PTR $T1[rsp+24]
	cmp	rdx, 15
	jbe	SHORT $LN49@Makestr
; Line 852
	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	mov	rcx, QWORD PTR $T1[rsp]
	mov	rax, rcx
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN54@Makestr
; Line 202
	add	rdx, 39					; 00000027H
; Line 205
	mov	rcx, QWORD PTR [rcx-8]
; Line 219
	sub	rax, rcx
	sub	rax, 8
	cmp	rax, 31
	ja	SHORT $LN123@Makestr
$LN54@Makestr:
; Line 289
	call	??3@YAXPEAX_K@Z				; operator delete
$LN49@Makestr:
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 493
	movups	XMMWORD PTR [rdi], xmm0
; Line 517
	mov	QWORD PTR [rdi+16], rbp
; Line 518
	mov	QWORD PTR [rdi+24], rbp
; Line 1286
	movups	xmm0, XMMWORD PTR [rbx]
	movups	XMMWORD PTR [rdi], xmm0
	movups	xmm1, XMMWORD PTR [rbx+16]
	movups	XMMWORD PTR [rdi+16], xmm1
; Line 3090
	mov	QWORD PTR [rbx+16], rbp
; Line 3091
	mov	QWORD PTR [rbx+24], 15
; Line 3093
	mov	BYTE PTR [rbx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 469
	mov	rax, rdi
; Line 470
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+168]
	add	rsp, 112				; 00000070H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN123@Makestr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	mov	QWORD PTR [rsp+32], rbp
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN121@Makestr:
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ENDP ; std::_System_error::_Makestr
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
__$ReturnUdt$GSCopy$ = 56
_Message$GSCopy$ = 56
$T1 = 64
__$ArrayPad$ = 96
__$ReturnUdt$ = 144
_Errcode$ = 152
_Message$ = 160
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$0
	mov	rcx, QWORD PTR _Message$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
__$ReturnUdt$GSCopy$ = 56
_Message$GSCopy$ = 56
$T1 = 64
__$ArrayPad$ = 96
__$ReturnUdt$ = 144
_Errcode$ = 152
_Message$ = 160
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$1
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Ec$ = 16
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z PROC ; std::make_error_code, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 171
	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@1@XZ@4U?$_Constexpr_immortalize_impl@V_Iostream_error_category2@std@@@1@A ; `std::_Immortalize_memcpy_image<std::_Iostream_error_category2>'::`2'::_Static
	mov	DWORD PTR [rcx], edx
	mov	QWORD PTR [rcx+8], rax
; Line 430
	mov	rax, rcx
; Line 431
	ret	0
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ENDP ; std::make_error_code
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??8std@@YA_NAEBVerror_condition@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??8std@@YA_NAEBVerror_condition@0@0@Z PROC		; std::operator==, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 305
	mov	rax, QWORD PTR [rdx+8]
	mov	r9, QWORD PTR [rcx+8]
	mov	r8, QWORD PTR [rax+8]
	cmp	QWORD PTR [r9+8], r8
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR [rdx]
	cmp	DWORD PTR [rcx], eax
	jne	SHORT $LN3@operator
	mov	al, 1
; Line 306
	ret	0
$LN3@operator:
; Line 305
	xor	al, al
; Line 306
	ret	0
??8std@@YA_NAEBVerror_condition@0@0@Z ENDP		; std::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?category@error_condition@std@@QEBAAEBVerror_category@2@XZ
_TEXT	SEGMENT
this$ = 8
?category@error_condition@std@@QEBAAEBVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 292
	mov	rax, QWORD PTR [rcx+8]
; Line 293
	ret	0
?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?value@error_condition@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?value@error_condition@std@@QEBAHXZ PROC		; std::error_condition::value, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 288
	mov	eax, DWORD PTR [rcx]
; Line 289
	ret	0
?value@error_condition@std@@QEBAHXZ ENDP		; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
_Cat$ = 24
??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 262
	mov	DWORD PTR [rcx], edx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::error_code::message, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 206
$LN7:
	push	rbx
	sub	rsp, 48					; 00000030H
; Line 207
	mov	r8d, DWORD PTR [rcx]
	mov	rbx, rdx
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	rax, rbx
; Line 208
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::error_code::message
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?category@error_code@std@@QEBAAEBVerror_category@2@XZ
_TEXT	SEGMENT
this$ = 8
?category@error_code@std@@QEBAAEBVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 201
	mov	rax, QWORD PTR [rcx+8]
; Line 202
	ret	0
?category@error_code@std@@QEBAAEBVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?value@error_code@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?value@error_code@std@@QEBAHXZ PROC			; std::error_code::value, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 197
	mov	eax, DWORD PTR [rcx]
; Line 198
	ret	0
?value@error_code@std@@QEBAHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0error_code@std@@QEAA@HAEBVerror_category@1@@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
_Cat$ = 24
??0error_code@std@@QEAA@HAEBVerror_category@1@@Z PROC	; std::error_code::error_code, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 171
	mov	DWORD PTR [rcx], edx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0error_code@std@@QEAA@HAEBVerror_category@1@@Z ENDP	; std::error_code::error_code
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Bit_cast@_KT_Addr_storage@error_category@std@@$0A@@std@@YA_KAEBT_Addr_storage@error_category@0@@Z
_TEXT	SEGMENT
_Val$ = 8
??$_Bit_cast@_KT_Addr_storage@error_category@std@@$0A@@std@@YA_KAEBT_Addr_storage@error_category@0@@Z PROC ; std::_Bit_cast<unsigned __int64,std::error_category::_Addr_storage,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 2457
	mov	rax, QWORD PTR [rcx]
; Line 2458
	ret	0
??$_Bit_cast@_KT_Addr_storage@error_category@std@@$0A@@std@@YA_KAEBT_Addr_storage@error_category@0@@Z ENDP ; std::_Bit_cast<unsigned __int64,std::error_category::_Addr_storage,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??8error_category@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8error_category@std@@QEBA_NAEBV01@@Z PROC		; std::error_category::operator==, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 103
	mov	rax, QWORD PTR [rdx+8]
	cmp	QWORD PTR [rcx+8], rax
	sete	al
; Line 105
	ret	0
??8error_category@std@@QEBA_NAEBV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
_TEXT	SEGMENT
this$ = 8
_Code$ = 16
_Errval$ = 24
?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 417
	mov	rax, QWORD PTR [rdx+8]
	mov	r9, QWORD PTR [rax+8]
	cmp	QWORD PTR [rcx+8], r9
	jne	SHORT $LN3@equivalent
	cmp	DWORD PTR [rdx], r8d
	jne	SHORT $LN3@equivalent
	mov	al, 1
; Line 418
	ret	0
$LN3@equivalent:
; Line 417
	xor	al, al
; Line 418
	ret	0
?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Errval$ = 72
_Cond$ = 80
?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 412
$LN16:
	push	rbx
	sub	rsp, 48					; 00000030H
; Line 413
	mov	rax, QWORD PTR [rcx]
	mov	rbx, r8
	mov	r8d, edx
	lea	rdx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax+24]
; Line 305
	mov	rcx, QWORD PTR [rbx+8]
	mov	r9, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]
	cmp	QWORD PTR [r9+8], rdx
	jne	SHORT $LN6@equivalent
	mov	ecx, DWORD PTR [rbx]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN6@equivalent
; Line 413
	mov	al, 1
; Line 414
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
$LN6@equivalent:
; Line 413
	xor	al, al
; Line 414
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_Errval$ = 24
?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 262
	mov	DWORD PTR [rdx], r8d
; Line 409
	mov	rax, rdx
; Line 262
	mov	QWORD PTR [rdx+8], rcx
; Line 410
	ret	0
?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1error_category@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1error_category@std@@UEAA@XZ PROC			; std::error_category::~error_category, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 87
	ret	0
??1error_category@std@@UEAA@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?iostream_category@std@@YAAEBVerror_category@1@XZ
_TEXT	SEGMENT
?iostream_category@std@@YAAEBVerror_category@1@XZ PROC	; std::iostream_category, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\system_error
; Line 698
	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@1@XZ@4U?$_Constexpr_immortalize_impl@V_Iostream_error_category2@std@@@1@A ; `std::_Immortalize_memcpy_image<std::_Iostream_error_category2>'::`2'::_Static
; Line 699
	ret	0
?iostream_category@std@@YAAEBVerror_category@1@XZ ENDP	; std::iostream_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gruntime_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gruntime_error@std@@UEAAPEAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
$LN17:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx
; Line 91
	add	rcx, 8
	call	__std_exception_destroy
	test	bl, 1
	je	SHORT $LN13@scalar
	mov	edx, 24
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN13@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gruntime_error@std@@UEAAPEAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0runtime_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0runtime_error@std@@QEAA@AEBV01@@Z PROC		; std::runtime_error::runtime_error, COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 73
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	xorps	xmm0, xmm0
; Line 72
	lea	rdx, QWORD PTR [rbx+8]
; Line 73
	mov	QWORD PTR [rbx], rcx
; Line 74
	lea	rcx, QWORD PTR [rax+8]
	movups	XMMWORD PTR [rdx], xmm0
	call	__std_exception_copy
	lea	rax, OFFSET FLAT:??_7runtime_error@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0runtime_error@std@@QEAA@AEBV01@@Z ENDP		; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1runtime_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1runtime_error@std@@UEAA@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
; Line 91
	add	rcx, 8
	jmp	__std_exception_destroy
??1runtime_error@std@@UEAA@XZ ENDP			; std::runtime_error::~runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_InitData$1 = 32
this$ = 64
_Message$ = 72
??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::runtime_error::runtime_error, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\stdexcept
; Line 104
$LN20:
	push	rbx
	sub	rsp, 48					; 00000030H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 445
	cmp	QWORD PTR [rdx+24], 15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\stdexcept
; Line 104
	mov	rax, rdx
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 445
	jbe	SHORT $LN8@runtime_er
; Line 446
	mov	rax, QWORD PTR [rdx]
$LN8@runtime_er:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 60
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
; Line 61
	mov	QWORD PTR _InitData$1[rsp], rax
	mov	QWORD PTR [rbx], rcx
	lea	rdx, QWORD PTR [rbx+8]
	xorps	xmm0, xmm0
	mov	BYTE PTR _InitData$1[rsp+8], 1
; Line 62
	lea	rcx, QWORD PTR _InitData$1[rsp]
	movups	XMMWORD PTR [rdx], xmm0
	call	__std_exception_copy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\stdexcept
; Line 104
	lea	rax, OFFSET FLAT:??_7runtime_error@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
	ret	0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1543
	mov	rax, rcx
; Line 1544
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1539
	mov	rax, rcx
; Line 1540
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3111
	mov	rax, rcx
; Line 3112
	ret	0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3107
	mov	rax, rcx
; Line 3108
	ret	0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3104
	ret	0
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 64
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3080
$LN32:
	push	rbx
	sub	rsp, 48					; 00000030H
; Line 453
	mov	rdx, QWORD PTR [rcx+24]
; Line 3080
	mov	rbx, rcx
; Line 3083
	cmp	rdx, 15
	jbe	SHORT $LN16@Tidy_deall
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	mov	rcx, QWORD PTR [rcx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 852
	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN21@Tidy_deall
; Line 205
	mov	rax, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
; Line 219
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $LN20@Tidy_deall
; Line 220
	mov	rcx, rax
$LN21@Tidy_deall:
; Line 289
	call	??3@YAXPEAX_K@Z				; operator delete
$LN16@Tidy_deall:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3090
	mov	QWORD PTR [rbx+16], 0
; Line 3091
	mov	QWORD PTR [rbx+24], 15
; Line 3093
	mov	BYTE PTR [rbx], 0
; Line 3094
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
$LN20@Tidy_deall:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN29@Tidy_deall:
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
_New_size$ = 16
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3076
	mov	QWORD PTR [rcx+16], rdx
; Line 436
	cmp	QWORD PTR [rcx+24], 15
	jbe	SHORT $LN11@Eos
; Line 437
	mov	rax, QWORD PTR [rcx]
; Line 3077
	mov	BYTE PTR [rax+rdx], 0
; Line 3078
	ret	0
$LN11@Eos:
; Line 3077
	mov	BYTE PTR [rcx+rdx], 0
; Line 3078
	ret	0
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Requested$ = 16
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 2978
	or	rdx, 15
	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	rdx, rax
; Line 2979
	ja	SHORT $LN4@Calculate_
; Line 2991
	mov	r9, QWORD PTR [rcx+24]
; Line 2983
	mov	rcx, rax
	mov	r8, r9
	shr	r8, 1
	sub	rcx, r8
	cmp	r9, rcx
	ja	SHORT $LN4@Calculate_
; Line 2987
	lea	rcx, QWORD PTR [r8+r9]
	cmp	rdx, rcx
	cmovb	rdx, rcx
; Line 2991
	mov	rax, rdx
$LN4@Calculate_:
; Line 2992
	ret	0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Requested$ = 8
_Old$ = 16
_Max$ = 24
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 2978
	or	rcx, 15
	cmp	rcx, r8
; Line 2979
	ja	SHORT $LN9@Calculate_
; Line 2983
	mov	r9, rdx
	mov	rax, r8
	shr	r9, 1
	sub	rax, r9
	cmp	rdx, rax
	ja	SHORT $LN9@Calculate_
; Line 2987
	lea	rax, QWORD PTR [r9+rdx]
	cmp	rcx, rax
	cmovb	rcx, rax
	mov	rax, rcx
; Line 2988
	ret	0
$LN9@Calculate_:
; Line 2984
	mov	rax, r8
; Line 2988
	ret	0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 2494
	cmp	QWORD PTR [rcx+16], 0
	sete	al
; Line 2495
	ret	0
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z
_TEXT	SEGMENT
this$ = 8
_New_size$ = 16
_Ch$ = 24
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 2388
	mov	rax, QWORD PTR [rcx+16]
; Line 2389
	cmp	rdx, rax
	ja	SHORT $LN2@resize
; Line 3076
	mov	QWORD PTR [rcx+16], rdx
; Line 436
	cmp	QWORD PTR [rcx+24], 15
	jbe	SHORT $LN9@resize
; Line 437
	mov	rcx, QWORD PTR [rcx]
$LN9@resize:
; Line 3077
	mov	BYTE PTR [rcx+rdx], 0
; Line 2394
	ret	0
$LN2@resize:
; Line 2392
	sub	rdx, rax
	jmp	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 2381
	mov	rax, 9223372036854775807		; 7fffffffffffffffH
; Line 2384
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 2374
	mov	rax, QWORD PTR [rcx+16]
; Line 2375
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 445
	cmp	QWORD PTR [rcx+24], 15
	jbe	SHORT $LN11@c_str
; Line 2356
	mov	rax, QWORD PTR [rcx]
; Line 2357
	ret	0
$LN11@c_str:
; Line 2356
	mov	rax, rcx
; Line 2357
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 445
	cmp	QWORD PTR [rcx+24], 15
	jbe	SHORT $LN11@operator
; Line 446
	mov	rax, QWORD PTR [rcx]
; Line 2281
	add	rax, rdx
; Line 2282
	ret	0
$LN11@operator:
; Line 2281
	lea	rax, QWORD PTR [rcx+rdx]
; Line 2282
	ret	0
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 436
	cmp	QWORD PTR [rcx+24], 15
	jbe	SHORT $LN11@operator
; Line 437
	mov	rax, QWORD PTR [rcx]
; Line 2272
	add	rax, rdx
; Line 2273
	ret	0
$LN11@operator:
; Line 2272
	lea	rax, QWORD PTR [rcx+rdx]
; Line 2273
	ret	0
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
_TEXT	SEGMENT
this$ = 64
_Off$ = 72
_Count$ = 80
_Ch$ = 88
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1784
$LN28:
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rsi, r8
	movsx	ebp, r9b
; Line 469
	mov	r8, QWORD PTR [rcx+16]
; Line 1784
	mov	rdi, rcx
; Line 469
	cmp	r8, rdx
	jb	$LN26@insert
; Line 1788
	mov	rcx, QWORD PTR [rcx+24]
	mov	rax, rcx
	sub	rax, r8
	cmp	rsi, rax
	ja	SHORT $LN2@insert
	mov	QWORD PTR [rsp+64], rbx
; Line 1790
	lea	rax, QWORD PTR [r8+rsi]
	mov	QWORD PTR [rdi+16], rax
; Line 435
	mov	rax, rdi
; Line 436
	cmp	rcx, 15
	jbe	SHORT $LN9@insert
; Line 437
	mov	rax, QWORD PTR [rdi]
$LN9@insert:
; Line 1792
	lea	rbx, QWORD PTR [rax+rdx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 174
	sub	r8, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1793
	inc	r8
	lea	rcx, QWORD PTR [rbx+rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 174
	mov	rdx, rbx
	call	memmove
; Line 493
	mov	edx, ebp
	mov	r8, rsi
	mov	rcx, rbx
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1795
	mov	rbx, QWORD PTR [rsp+64]
	mov	rax, rdi
; Line 1807
	mov	rbp, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN2@insert:
; Line 1798
	mov	r9, rdx
	mov	BYTE PTR [rsp+40], bpl
	mov	rdx, rsi
	mov	QWORD PTR [rsp+32], rsi
	xor	r8d, r8d
	mov	rcx, rdi
	call	??$_Reallocate_grow_by@V<lambda_b986da8d428e4af07c64af60eec09b61>@@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_b986da8d428e4af07c64af60eec09b61>@@_K2D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_b986da8d428e4af07c64af60eec09b61>,unsigned __int64,unsigned __int64,char>
; Line 1807
	mov	rbp, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN26@insert:
; Line 470
	call	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
	int	3
$LN24@insert:
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
_TEXT	SEGMENT
this$ = 96
_Count$ = 104
_Ch$ = 112
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1537
$LN86:
	mov	QWORD PTR [rsp+24], rbx
	push	rsi
	push	rdi
	push	r13
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H
; Line 1540
	mov	r15, QWORD PTR [rcx+24]
	mov	rsi, rdx
	mov	r14, QWORD PTR [rcx+16]
	mov	rax, r15
	sub	rax, r14
	movsx	r13d, r8b
	mov	rdi, rcx
	cmp	rdx, rax
	ja	SHORT $LN2@append
; Line 1542
	lea	rax, QWORD PTR [r14+rdx]
	mov	QWORD PTR [rcx+16], rax
; Line 435
	mov	rax, rcx
; Line 436
	cmp	r15, 15
	jbe	SHORT $LN5@append
; Line 437
	mov	rax, QWORD PTR [rcx]
$LN5@append:
; Line 1544
	lea	rbx, QWORD PTR [r14+rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 493
	mov	edx, r13d
	mov	rcx, rbx
	mov	r8, rsi
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1545
	mov	BYTE PTR [rbx+rsi], 0
; Line 1546
	jmp	$LN82@append
$LN2@append:
; Line 3029
	mov	rbx, 9223372036854775807		; 7fffffffffffffffH
	mov	rax, rbx
	sub	rax, r14
	cmp	rax, rsi
	jb	$LN84@append
	mov	QWORD PTR [rsp+96], rbp
	mov	QWORD PTR [rsp+104], r12
; Line 3033
	lea	r12, QWORD PTR [r14+rdx]
; Line 2978
	mov	rcx, r12
	or	rcx, 15
	cmp	rcx, rbx
; Line 2979
	ja	SHORT $LN22@append
; Line 2983
	mov	rdx, r15
	mov	rax, rbx
	shr	rdx, 1
	sub	rax, rdx
	cmp	r15, rax
	ja	SHORT $LN22@append
; Line 2987
	lea	rax, QWORD PTR [r15+rdx]
	mov	rbx, rcx
	cmp	rcx, rax
	cmovb	rbx, rax
$LN22@append:
; Line 825
	lea	rcx, QWORD PTR [rbx+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3041
	mov	QWORD PTR [rdi+16], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	mov	rbp, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3042
	mov	QWORD PTR [rdi+24], rbx
; Line 3044
	mov	r8, r14
	mov	rcx, rax
	lea	r12, QWORD PTR [r14+rax]
	cmp	r15, 15
	jbe	SHORT $LN16@append
; Line 3045
	mov	rbx, QWORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rdx, rbx
	call	memcpy
; Line 493
	mov	r8, rsi
	mov	edx, r13d
	mov	rcx, r12
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 852
	lea	rdx, QWORD PTR [r15+1]
; Line 1555
	mov	BYTE PTR [r12+rsi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN57@append
; Line 205
	mov	rax, QWORD PTR [rbx-8]
	add	rdx, 39					; 00000027H
; Line 219
	sub	rbx, rax
	sub	rbx, 8
	cmp	rbx, 31
	ja	SHORT $LN56@append
; Line 220
	mov	rbx, rax
$LN57@append:
; Line 289
	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3049
	jmp	SHORT $LN17@append
$LN16@append:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rdx, rdi
	call	memcpy
; Line 493
	mov	r8, rsi
	mov	edx, r13d
	mov	rcx, r12
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1555
	mov	BYTE PTR [r12+rsi], 0
$LN17@append:
; Line 1549
	mov	QWORD PTR [rdi], rbp
	mov	rbp, QWORD PTR [rsp+96]
	mov	r12, QWORD PTR [rsp+104]
$LN82@append:
; Line 1558
	mov	rbx, QWORD PTR [rsp+112]
	mov	rax, rdi
	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	r13
	pop	rdi
	pop	rsi
	ret	0
$LN56@append:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN84@append:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3030
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN81@append:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1533
$LN8:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 456
	mov	rcx, rdx
	call	strlen
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1534
	mov	r8, rax
	mov	rdx, rbx
	mov	rcx, rdi
; Line 1535
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
; Line 1534
	jmp	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
this$ = 96
_Ptr$ = 104
_Count$ = 112
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1510
$LN86:
	mov	QWORD PTR [rsp+24], rbx
	push	rsi
	push	rdi
	push	r13
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H
; Line 1513
	mov	r15, QWORD PTR [rcx+24]
	mov	rsi, r8
	mov	r14, QWORD PTR [rcx+16]
	mov	rax, r15
	sub	rax, r14
	mov	r13, rdx
	mov	rdi, rcx
	cmp	r8, rax
	ja	SHORT $LN2@append
; Line 1515
	lea	rax, QWORD PTR [r14+r8]
	mov	QWORD PTR [rcx+16], rax
; Line 435
	mov	rax, rcx
; Line 436
	cmp	r15, 15
	jbe	SHORT $LN5@append
; Line 437
	mov	rax, QWORD PTR [rcx]
$LN5@append:
; Line 1517
	lea	rbx, QWORD PTR [r14+rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 174
	mov	rcx, rbx
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1518
	mov	BYTE PTR [rbx+rsi], 0
; Line 1519
	jmp	$LN82@append
$LN2@append:
; Line 3029
	mov	rbx, 9223372036854775807		; 7fffffffffffffffH
	mov	rax, rbx
	sub	rax, r14
	cmp	rax, rsi
	jb	$LN84@append
	mov	QWORD PTR [rsp+96], rbp
	mov	QWORD PTR [rsp+104], r12
; Line 3033
	lea	r12, QWORD PTR [r14+r8]
; Line 2978
	mov	rcx, r12
	or	rcx, 15
	cmp	rcx, rbx
; Line 2979
	ja	SHORT $LN22@append
; Line 2983
	mov	rdx, r15
	mov	rax, rbx
	shr	rdx, 1
	sub	rax, rdx
	cmp	r15, rax
	ja	SHORT $LN22@append
; Line 2987
	lea	rax, QWORD PTR [r15+rdx]
	mov	rbx, rcx
	cmp	rcx, rax
	cmovb	rbx, rax
$LN22@append:
; Line 825
	lea	rcx, QWORD PTR [rbx+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3041
	mov	QWORD PTR [rdi+16], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	mov	rbp, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3042
	mov	QWORD PTR [rdi+24], rbx
; Line 3044
	mov	r8, r14
	mov	rcx, rax
	lea	r12, QWORD PTR [r14+rax]
	cmp	r15, 15
	jbe	SHORT $LN16@append
; Line 3045
	mov	rbx, QWORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rdx, rbx
	call	memcpy
	mov	r8, rsi
	mov	rdx, r13
	mov	rcx, r12
	call	memcpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 852
	lea	rdx, QWORD PTR [r15+1]
; Line 1528
	mov	BYTE PTR [r12+rsi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN57@append
; Line 205
	mov	rax, QWORD PTR [rbx-8]
	add	rdx, 39					; 00000027H
; Line 219
	sub	rbx, rax
	sub	rbx, 8
	cmp	rbx, 31
	ja	SHORT $LN56@append
; Line 220
	mov	rbx, rax
$LN57@append:
; Line 289
	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3049
	jmp	SHORT $LN17@append
$LN16@append:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rdx, rdi
	call	memcpy
	mov	r8, rsi
	mov	rdx, r13
	mov	rcx, r12
	call	memcpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1528
	mov	BYTE PTR [r12+rsi], 0
$LN17@append:
; Line 1522
	mov	QWORD PTR [rdi], rbp
	mov	rbp, QWORD PTR [rsp+96]
	mov	r12, QWORD PTR [rsp+104]
$LN82@append:
; Line 1531
	mov	rbx, QWORD PTR [rsp+112]
	mov	rax, rdi
	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	r13
	pop	rdi
	pop	rsi
	ret	0
$LN56@append:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN84@append:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3030
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN81@append:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 445
	cmp	QWORD PTR [rdx+24], 15
; Line 1483
	mov	r8, QWORD PTR [rdx+16]
; Line 445
	jbe	SHORT $LN4@append
; Line 446
	mov	rdx, QWORD PTR [rdx]
$LN4@append:
; Line 1483
	jmp	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1383
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1286
	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rcx+16], xmm1
; Line 1288
	mov	QWORD PTR [rdx+16], 0
; Line 1289
	mov	QWORD PTR [rdx+24], 15
; Line 1291
	mov	BYTE PTR [rdx], 0
; Line 1315
	ret	0
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z
_TEXT	SEGMENT
this$ = 64
_Right$ = 72
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1252
$LN53:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rdx
	mov	rbx, rcx
; Line 1226
	cmp	rcx, rdx
	je	SHORT $LN34@assign
; Line 453
	mov	rdx, QWORD PTR [rcx+24]
; Line 3083
	cmp	rdx, 15
	jbe	SHORT $LN23@assign
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	mov	rcx, QWORD PTR [rcx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 852
	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN28@assign
; Line 205
	mov	rax, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
; Line 219
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $LN27@assign
; Line 220
	mov	rcx, rax
$LN28@assign:
; Line 289
	call	??3@YAXPEAX_K@Z				; operator delete
$LN23@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3091
	mov	QWORD PTR [rbx+24], 15
	xor	eax, eax
	mov	QWORD PTR [rbx+16], rax
; Line 3093
	mov	BYTE PTR [rbx], al
; Line 1286
	movups	xmm0, XMMWORD PTR [rdi]
	movups	XMMWORD PTR [rbx], xmm0
	movups	xmm1, XMMWORD PTR [rdi+16]
	movups	XMMWORD PTR [rbx+16], xmm1
; Line 1288
	mov	QWORD PTR [rdi+16], rax
; Line 1289
	mov	QWORD PTR [rdi+24], 15
; Line 1291
	mov	BYTE PTR [rdi], al
$LN34@assign:
; Line 1254
	mov	rax, rbx
; Line 1255
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN27@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	xor	eax, eax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	QWORD PTR [rsp+32], rax
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN50@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 64
_Right$ = 72
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 1225
$LN50:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rdx
	mov	rbx, rcx
; Line 1226
	cmp	rcx, rdx
	je	SHORT $LN47@operator
; Line 453
	mov	rdx, QWORD PTR [rcx+24]
; Line 3083
	cmp	rdx, 15
	jbe	SHORT $LN20@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	mov	rcx, QWORD PTR [rcx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 852
	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN25@operator
; Line 205
	mov	rax, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
; Line 219
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $LN24@operator
; Line 220
	mov	rcx, rax
$LN25@operator:
; Line 289
	call	??3@YAXPEAX_K@Z				; operator delete
$LN20@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 3091
	mov	QWORD PTR [rbx+24], 15
	xor	eax, eax
	mov	QWORD PTR [rbx+16], rax
; Line 3093
	mov	BYTE PTR [rbx], al
; Line 1286
	movups	xmm0, XMMWORD PTR [rdi]
	movups	XMMWORD PTR [rbx], xmm0
	movups	xmm1, XMMWORD PTR [rdi+16]
	movups	XMMWORD PTR [rbx+16], xmm1
; Line 1288
	mov	QWORD PTR [rdi+16], rax
; Line 1289
	mov	QWORD PTR [rdi+24], 15
; Line 1291
	mov	BYTE PTR [rdi], al
$LN47@operator:
; Line 1250
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN24@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	xor	eax, eax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	QWORD PTR [rsp+32], rax
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN46@operator:
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 517
	xor	eax, eax
	xorps	xmm0, xmm0
; Line 493
	movups	XMMWORD PTR [rcx], xmm0
; Line 517
	mov	QWORD PTR [rcx+16], rax
; Line 518
	mov	QWORD PTR [rcx+24], rax
; Line 1286
	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rcx+16], xmm1
; Line 1288
	mov	QWORD PTR [rdx+16], rax
; Line 1291
	mov	BYTE PTR [rdx], al
; Line 1031
	mov	rax, rcx
; Line 1289
	mov	QWORD PTR [rdx+24], 15
; Line 1031
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Construct_empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Construct_empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_empty, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 860
	mov	QWORD PTR [rcx+16], 0
; Line 861
	mov	QWORD PTR [rcx+24], 15
; Line 865
	mov	BYTE PTR [rcx], 0
; Line 866
	ret	0
?_Construct_empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Deallocate_for_capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXAEAV?$allocator@D@2@QEAD_K@Z
_TEXT	SEGMENT
_Al$ = 64
_Old_ptr$ = 72
_Capacity$ = 80
?_Deallocate_for_capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXAEAV?$allocator@D@2@QEAD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Deallocate_for_capacity, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 850
$LN21:
	sub	rsp, 56					; 00000038H
	mov	rax, rdx
; Line 852
	lea	rdx, QWORD PTR [r8+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN14@Deallocate
; Line 205
	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H
; Line 219
	sub	rax, rcx
	sub	rax, 8
	cmp	rax, 31
	ja	SHORT $LN13@Deallocate
; Line 220
	mov	rax, rcx
$LN14@Deallocate:
; Line 289
	mov	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 853
	add	rsp, 56					; 00000038H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 289
	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN13@Deallocate:
; Line 219
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN18@Deallocate:
?_Deallocate_for_capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXAEAV?$allocator@D@2@QEAD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Deallocate_for_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
_Ch$ = 64
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 785
$LN48:
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H
; Line 517
	xor	eax, eax
; Line 785
	movsx	r14d, r8b
	xorps	xmm0, xmm0
; Line 881
	mov	rbp, 9223372036854775807		; 7fffffffffffffffH
; Line 785
	mov	rsi, rdx
	mov	rdi, rcx
; Line 493
	movups	XMMWORD PTR [rcx], xmm0
; Line 517
	mov	QWORD PTR [rcx+16], rax
; Line 518
	mov	QWORD PTR [rcx+24], rax
; Line 881
	cmp	rdx, rbp
	ja	$LN46@basic_stri
; Line 889
	cmp	rdx, 15
	ja	SHORT $LN18@basic_stri
; Line 890
	mov	QWORD PTR [rcx+16], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 493
	mov	r8, rsi
	mov	edx, r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 891
	mov	QWORD PTR [rcx+24], 15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 493
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 895
	mov	BYTE PTR [rsi+rdi], 0
; Line 908
	jmp	SHORT $LN16@basic_stri
$LN18@basic_stri:
; Line 2978
	mov	rax, rsi
	mov	QWORD PTR [rsp+48], rbx
	or	rax, 15
	cmp	rax, rbp
; Line 2979
	ja	SHORT $LN23@basic_stri
; Line 2987
	mov	ecx, 22
	mov	rbp, rax
	cmp	rax, rcx
	cmovb	rbp, rcx
$LN23@basic_stri:
; Line 825
	lea	rcx, QWORD PTR [rbp+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 493
	mov	edx, r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 913
	mov	QWORD PTR [rdi], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 493
	mov	r8, rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 915
	mov	QWORD PTR [rdi+16], rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 493
	mov	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 916
	mov	QWORD PTR [rdi+24], rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	mov	rbx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 493
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 919
	mov	BYTE PTR [rbx+rsi], 0
	mov	rbx, QWORD PTR [rsp+48]
$LN16@basic_stri:
; Line 787
	mov	rbp, QWORD PTR [rsp+56]
	mov	rax, rdi
	mov	rdi, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN46@basic_stri:
; Line 882
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN44@basic_stri:
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 768
$LN21:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 517
	xor	eax, eax
	xorps	xmm0, xmm0
; Line 493
	movups	XMMWORD PTR [rcx], xmm0
; Line 517
	mov	QWORD PTR [rcx+16], rax
; Line 768
	mov	rdi, rcx
; Line 518
	mov	QWORD PTR [rcx+24], rax
; Line 768
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 456
	mov	rcx, rdx
	call	strlen
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 769
	mov	r8, rax
	mov	rdx, rbx
	mov	rcx, rdi
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
; Line 770
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 755
$LN18:
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 517
	xor	eax, eax
	xorps	xmm0, xmm0
; Line 493
	movups	XMMWORD PTR [rcx], xmm0
; Line 517
	mov	QWORD PTR [rcx+16], rax
; Line 755
	mov	rbx, rcx
; Line 518
	mov	QWORD PTR [rcx+24], rax
; Line 756
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
; Line 757
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 717
$LN56:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	push	r14
	sub	rsp, 32					; 00000020H
; Line 517
	xor	eax, eax
	xorps	xmm0, xmm0
; Line 493
	movups	XMMWORD PTR [rcx], xmm0
; Line 517
	mov	QWORD PTR [rcx+16], rax
; Line 717
	mov	r14, rdx
; Line 518
	mov	QWORD PTR [rcx+24], rax
; Line 717
	mov	rbx, rcx
; Line 445
	cmp	QWORD PTR [rdx+24], 15
; Line 718
	mov	rsi, QWORD PTR [rdx+16]
; Line 445
	jbe	SHORT $LN17@basic_stri
; Line 446
	mov	r14, QWORD PTR [rdx]
$LN17@basic_stri:
; Line 881
	mov	rdi, 9223372036854775807		; 7fffffffffffffffH
	cmp	rsi, rdi
	ja	SHORT $LN54@basic_stri
; Line 889
	cmp	rsi, 15
	ja	SHORT $LN25@basic_stri
; Line 890
	mov	QWORD PTR [rcx+16], rsi
; Line 891
	mov	QWORD PTR [rcx+24], 15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	movups	xmm0, XMMWORD PTR [r14]
	movups	XMMWORD PTR [rcx], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 908
	jmp	SHORT $LN45@basic_stri
$LN25@basic_stri:
; Line 2978
	mov	rax, rsi
	or	rax, 15
	cmp	rax, rdi
; Line 2979
	ja	SHORT $LN30@basic_stri
; Line 2987
	mov	ecx, 22
	mov	rdi, rax
	cmp	rax, rcx
	cmovb	rdi, rcx
$LN30@basic_stri:
; Line 825
	lea	rcx, QWORD PTR [rdi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 924
	lea	r8, QWORD PTR [rsi+1]
	mov	QWORD PTR [rbx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rdx, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 915
	mov	QWORD PTR [rbx+16], rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	mov	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 916
	mov	QWORD PTR [rbx+24], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 121
	call	memcpy
$LN45@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 719
	mov	rsi, QWORD PTR [rsp+56]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	mov	rdi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN54@basic_stri:
; Line 882
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN52@basic_stri:
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 708
	xorps	xmm0, xmm0
; Line 710
	mov	rax, rcx
; Line 493
	movups	XMMWORD PTR [rcx], xmm0
; Line 860
	mov	QWORD PTR [rcx+16], 0
; Line 861
	mov	QWORD PTR [rcx+24], 15
; Line 865
	mov	BYTE PTR [rcx], 0
; Line 710
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Switch_to_buf@_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Switch_to_buf@_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Switch_to_buf, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 511
	ret	0
?_Switch_to_buf@_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Switch_to_buf
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 494
	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 493
	xorps	xmm0, xmm0
	mov	rax, rcx
	movups	XMMWORD PTR [rcx], xmm0
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Xran, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 481
$LN4:
	sub	rsp, 40					; 00000028H
; Line 482
	lea	rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position@
	call	?_Xout_of_range@std@@YAXPEBD@Z		; std::_Xout_of_range
	int	3
$LN3@Xran:
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Check_offset, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 467
$LN7:
	sub	rsp, 40					; 00000028H
; Line 469
	cmp	QWORD PTR [rcx+16], rdx
	jb	SHORT $LN6@Check_offs
; Line 472
	add	rsp, 40					; 00000028H
	ret	0
$LN6@Check_offs:
; Line 470
	call	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
	int	3
$LN4@Check_offs:
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 465
	ret	0
?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Large_mode_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?_Large_mode_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_mode_engaged, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 453
	cmp	QWORD PTR [rcx+24], 15
	seta	al
; Line 454
	ret	0
?_Large_mode_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_mode_engaged
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 445
	cmp	QWORD PTR [rcx+24], 15
	jbe	SHORT $LN8@Myptr
; Line 449
	mov	rax, QWORD PTR [rcx]
; Line 450
	ret	0
$LN8@Myptr:
; Line 449
	mov	rax, rcx
; Line 450
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 436
	cmp	QWORD PTR [rcx+24], 15
	jbe	SHORT $LN8@Myptr
; Line 440
	mov	rax, QWORD PTR [rcx]
; Line 441
	ret	0
$LN8@Myptr:
; Line 440
	mov	rax, rcx
; Line 441
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 517
	xor	eax, eax
	xorps	xmm0, xmm0
; Line 493
	movups	XMMWORD PTR [rcx], xmm0
; Line 517
	mov	QWORD PTR [rcx+16], rax
; Line 518
	mov	QWORD PTR [rcx+24], rax
	mov	rax, rcx
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Al$ = 16
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 750
	mov	rax, rcx
; Line 751
	ret	0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 746
	mov	rax, -1
; Line 747
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 8
_Count$ = 16
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	mov	rcx, rdx
	jmp	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 982
$LN17:
	sub	rsp, 56					; 00000038H
	mov	rax, rdx
; Line 284
	cmp	r8, 4096				; 00001000H
	jb	SHORT $LN11@deallocate
; Line 205
	mov	rcx, QWORD PTR [rdx-8]
	add	r8, 39					; 00000027H
; Line 219
	sub	rax, rcx
	sub	rax, 8
	cmp	rax, 31
	ja	SHORT $LN10@deallocate
; Line 220
	mov	rax, rcx
$LN11@deallocate:
; Line 289
	mov	rdx, r8
	mov	rcx, rax
; Line 986
	add	rsp, 56					; 00000038H
; Line 289
	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN10@deallocate:
; Line 219
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN14@deallocate:
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 974
	mov	rax, rcx
	ret	0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; Line 530
$LN4:
	sub	rsp, 40					; 00000028H
; Line 531
	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
	int	3
$LN3@Xlen_strin:
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Release@_Fake_proxy_ptr_impl@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Release@_Fake_proxy_ptr_impl@std@@QEAAXXZ PROC	; std::_Fake_proxy_ptr_impl::_Release, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1453
	ret	0
?_Release@_Fake_proxy_ptr_impl@std@@QEAAXXZ ENDP	; std::_Fake_proxy_ptr_impl::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0_Fake_proxy_ptr_impl@std@@QEAA@AEBU_Fake_allocator@1@AEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
__formal$ = 24
??0_Fake_proxy_ptr_impl@std@@QEAA@AEBU_Fake_allocator@1@AEBU_Container_base0@1@@Z PROC ; std::_Fake_proxy_ptr_impl::_Fake_proxy_ptr_impl, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1450
	mov	rax, rcx
	ret	0
??0_Fake_proxy_ptr_impl@std@@QEAA@AEBU_Fake_allocator@1@AEBU_Container_base0@1@@Z ENDP ; std::_Fake_proxy_ptr_impl::_Fake_proxy_ptr_impl
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Alloc_proxy@_Container_base0@std@@QEAAXAEBU_Fake_allocator@2@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?_Alloc_proxy@_Container_base0@std@@QEAAXAEBU_Fake_allocator@2@@Z PROC ; std::_Container_base0::_Alloc_proxy, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1186
	ret	0
?_Alloc_proxy@_Container_base0@std@@QEAAXAEBU_Fake_allocator@2@@Z ENDP ; std::_Container_base0::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base0@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?_Swap_proxy_and_iterators@_Container_base0@std@@QEAAXAEAU12@@Z PROC ; std::_Container_base0::_Swap_proxy_and_iterators, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1185
	ret	0
?_Swap_proxy_and_iterators@_Container_base0@std@@QEAAXAEAU12@@Z ENDP ; std::_Container_base0::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Orphan_all@_Container_base0@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Orphan_all@_Container_base0@std@@QEAAXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1184
	ret	0
?_Orphan_all@_Container_base0@std@@QEAAXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr$ = 64
_Bytes$ = 72
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 200
$LN7:
	sub	rsp, 56					; 00000038H
; Line 202
	add	QWORD PTR [rdx], 39			; 00000027H
; Line 205
	mov	rax, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax-8]
; Line 219
	sub	rax, rdx
	sub	rax, 8
	cmp	rax, 31
	ja	SHORT $LN3@Adjust_man
; Line 220
	mov	QWORD PTR [rcx], rdx
; Line 221
	add	rsp, 56					; 00000038H
	ret	0
$LN3@Adjust_man:
; Line 219
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN5@Adjust_man:
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 8
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 136
	jmp	??2@YAPEAX_K@Z				; operator new
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 107
$LN4:
	sub	rsp, 72					; 00000048H
; Line 108
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0bad_array_new_length@std@@QEAA@XZ	; std::bad_array_new_length::bad_array_new_length
	lea	rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
	lea	rcx, QWORD PTR $T1[rsp]
	call	_CxxThrowException
	int	3
$LN3@Throw_bad_:
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN22:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx
; Line 91
	add	rcx, 8
	call	__std_exception_destroy
	test	bl, 1
	je	SHORT $LN18@scalar
	mov	edx, 24
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN18@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN14:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 73
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	xorps	xmm0, xmm0
; Line 72
	lea	rdx, QWORD PTR [rbx+8]
; Line 73
	mov	QWORD PTR [rbx], rcx
; Line 74
	lea	rcx, QWORD PTR [rax+8]
	movups	XMMWORD PTR [rdx], xmm0
	call	__std_exception_copy
	lea	rax, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
; Line 91
	add	rcx, 8
	jmp	__std_exception_destroy
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 68
	lea	rax, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	QWORD PTR [rcx+16], 0
	mov	QWORD PTR [rcx+8], rax
; Line 144
	lea	rax, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rcx], rax
; Line 145
	mov	rax, rcx
	ret	0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN17:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx
; Line 91
	add	rcx, 8
	call	__std_exception_destroy
	test	bl, 1
	je	SHORT $LN13@scalar
	mov	edx, 24
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN13@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 73
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	xorps	xmm0, xmm0
; Line 72
	lea	rdx, QWORD PTR [rbx+8]
; Line 73
	mov	QWORD PTR [rbx], rcx
; Line 74
	lea	rcx, QWORD PTR [rax+8]
	movups	XMMWORD PTR [rdx], xmm0
	call	__std_exception_copy
	lea	rax, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
; Line 91
	add	rcx, 8
	jmp	__std_exception_destroy
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 8
_Message$ = 16
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 133
	lea	rax, OFFSET FLAT:??_7bad_alloc@std@@6B@
; Line 66
	mov	QWORD PTR [rcx+16], 0
; Line 133
	mov	QWORD PTR [rcx], rax
; Line 134
	mov	rax, rcx
; Line 68
	mov	QWORD PTR [rcx+8], rdx
; Line 134
	ret	0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN12:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx
; Line 91
	add	rcx, 8
	call	__std_exception_destroy
	test	bl, 1
	je	SHORT $LN8@scalar
	mov	edx, 24
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN8@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 96
	mov	rdx, QWORD PTR [rcx+8]
	lea	rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
	test	rdx, rdx
	cmovne	rax, rdx
; Line 97
	ret	0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
; Line 91
	add	rcx, 8
	jmp	__std_exception_destroy
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 73
$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rax, rdx
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	xorps	xmm0, xmm0
	lea	rdx, QWORD PTR [rbx+8]
	mov	QWORD PTR [rbx], rcx
; Line 74
	lea	rcx, QWORD PTR [rax+8]
	movups	XMMWORD PTR [rdx], xmm0
	call	__std_exception_copy
; Line 75
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 8
_Message$ = 16
__formal$ = 24
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 67
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
; Line 69
	mov	rax, rcx
	mov	QWORD PTR [rcx+16], 0
	mov	QWORD PTR [rcx+8], rdx
	ret	0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0exception@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_InitData$ = 32
this$ = 64
_Message$ = 72
??0exception@std@@QEAA@QEBD@Z PROC			; std::exception::exception, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 60
$LN6:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	rbx, rcx
; Line 61
	mov	BYTE PTR _InitData$[rsp+8], 1
	mov	rax, rdx
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	lea	rdx, QWORD PTR [rbx+8]
	mov	QWORD PTR _InitData$[rsp], rax
	xorps	xmm0, xmm0
	mov	QWORD PTR [rbx], rcx
; Line 62
	lea	rcx, QWORD PTR _InitData$[rsp]
	movups	XMMWORD PTR [rdx], xmm0
	call	__std_exception_copy
; Line 63
	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??0exception@std@@QEAA@QEBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 530
	mov	eax, -1
; Line 531
	ret	0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 522
	cmp	ecx, edx
	sete	al
; Line 523
	ret	0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHD@Z
_TEXT	SEGMENT
_Ch$ = 8
?to_int_type@?$_Narrow_char_traits@DH@std@@SAHD@Z PROC	; std::_Narrow_char_traits<char,int>::to_int_type, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 518
	movzx	eax, cl
; Line 519
	ret	0
?to_int_type@?$_Narrow_char_traits@DH@std@@SAHD@Z ENDP	; std::_Narrow_char_traits<char,int>::to_int_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 502
	movzx	eax, BYTE PTR [rdx]
	mov	BYTE PTR [rcx], al
; Line 503
	ret	0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z
_TEXT	SEGMENT
_First$ = 8
_Count$ = 16
_Ch$ = 24
?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 485
	mov	rax, rdx
; Line 493
	movsx	edx, r8b
	mov	r8, rax
	jmp	memset
?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 8
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 456
	jmp	strlen
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC	; std::_Char_traits<char,int>::move, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 136
$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 174
	call	memmove
; Line 177
	mov	rax, rbx
; Line 178
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP	; std::_Char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC	; std::_Char_traits<char,int>::copy, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\__msvc_string_view.hpp
; Line 105
$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 121
	call	memcpy
; Line 124
	mov	rax, rbx
; Line 125
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP	; std::_Char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT sprintf_s
_TEXT	SEGMENT
_Buffer$ = 96
_BufferCount$ = 104
_Format$ = 112
sprintf_s PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\stdio.h
; Line 1823
$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H
	mov	rsi, r8
; Line 1826
	lea	rbp, QWORD PTR _Format$[rsp+8]
	mov	rbx, rdx
	mov	rdi, rcx
; Line 1491
	call	__local_stdio_printf_options
	mov	QWORD PTR [rsp+40], rbp
	mov	r9, rsi
	mov	r8, rbx
	mov	QWORD PTR [rsp+32], 0
	mov	rdx, rdi
	mov	rcx, QWORD PTR [rax]
	call	__stdio_common_vsprintf_s
; Line 1495
	test	eax, eax
	mov	ecx, -1
	cmovs	eax, ecx
; Line 1830
	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
sprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _vsprintf_s_l
_TEXT	SEGMENT
_Buffer$ = 64
_BufferCount$ = 72
_Format$ = 80
_Locale$ = 88
_ArgList$ = 96
_vsprintf_s_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\stdio.h
; Line 1490
$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, r9
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbp, rcx
; Line 1491
	call	__local_stdio_printf_options
	mov	r10, QWORD PTR _ArgList$[rsp]
	mov	r9, rdi
	mov	QWORD PTR [rsp+40], r10
	mov	r8, rsi
	mov	rdx, rbp
	mov	QWORD PTR [rsp+32], rbx
	mov	rcx, QWORD PTR [rax]
	call	__stdio_common_vsprintf_s
; Line 1496
	mov	rbx, QWORD PTR [rsp+64]
	test	eax, eax
	mov	rbp, QWORD PTR [rsp+72]
	mov	ecx, -1
	mov	rsi, QWORD PTR [rsp+80]
	cmovs	eax, ecx
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
_vsprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\corecrt_stdio_config.h
; Line 92
	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT frexpl
_TEXT	SEGMENT
_X$ = 8
_Y$ = 16
frexpl	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\corecrt_math.h
; Line 903
	jmp	frexp
frexpl	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT fabsl
_TEXT	SEGMENT
_X$ = 8
fabsl	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\corecrt_math.h
; Line 882
	andps	xmm0, XMMWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
; Line 883
	ret	0
fabsl	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?fpclassify@@YAHO@Z
_TEXT	SEGMENT
_X$ = 48
?fpclassify@@YAHO@Z PROC				; fpclassify, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\corecrt_math.h
; Line 331
$LN6:
	sub	rsp, 40					; 00000028H
; Line 335
	call	_ldclass
	cwde
; Line 337
	add	rsp, 40					; 00000028H
	ret	0
?fpclassify@@YAHO@Z ENDP				; fpclassify
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?fpclassify@@YAHN@Z
_TEXT	SEGMENT
_X$ = 48
?fpclassify@@YAHN@Z PROC				; fpclassify, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\corecrt_math.h
; Line 322
$LN6:
	sub	rsp, 40					; 00000028H
; Line 326
	call	_dclass
	cwde
; Line 328
	add	rsp, 40					; 00000028H
	ret	0
?fpclassify@@YAHN@Z ENDP				; fpclassify
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 8
_Where$ = 16
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_new.h
; Line 166
	mov	rax, rdx
; Line 167
	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
__t$ = 48
__s$ = 56
__n$ = 64
__f$ = 72
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN14:
	test	r8, r8
	je	SHORT $LN12@vector
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, r9
	mov	rbx, r8
	mov	rbp, rdx
	mov	rdi, rcx
$LL2@vector:
	mov	rcx, rdi
	call	rsi
	add	rdi, rbp
	sub	rbx, 1
	jne	SHORT $LL2@vector
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN12@vector:
	ret	0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
