; Listing generated by Microsoft (R) Optimizing Compiler Version 19.44.35215.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_Avx2WmemEnabledWeakValue
;	COMDAT _Avx2WmemEnabledWeakValue
_BSS	SEGMENT
_Avx2WmemEnabledWeakValue DD 01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
?PIECE_VALUES_MG@@3V?$array@H$06@std@@B DD 00H		; PIECE_VALUES_MG
	DD	064H
	DD	0140H
	DD	014aH
	DD	01f4H
	DD	0384H
	DD	04e20H
	ORG $+4
?BIT_MASK@@3QB_KB DQ 0000000000000001H			; BIT_MASK
	DQ	0000000000000002H
	DQ	0000000000000004H
	DQ	0000000000000008H
	DQ	0000000000000010H
	DQ	0000000000000020H
	DQ	0000000000000040H
	DQ	0000000000000080H
	DQ	0000000000000100H
	DQ	0000000000000200H
	DQ	0000000000000400H
	DQ	0000000000000800H
	DQ	0000000000001000H
	DQ	0000000000002000H
	DQ	0000000000004000H
	DQ	0000000000008000H
	DQ	0000000000010000H
	DQ	0000000000020000H
	DQ	0000000000040000H
	DQ	0000000000080000H
	DQ	0000000000100000H
	DQ	0000000000200000H
	DQ	0000000000400000H
	DQ	0000000000800000H
	DQ	0000000001000000H
	DQ	0000000002000000H
	DQ	0000000004000000H
	DQ	0000000008000000H
	DQ	0000000010000000H
	DQ	0000000020000000H
	DQ	0000000040000000H
	DQ	0000000080000000H
	DQ	0000000100000000H
	DQ	0000000200000000H
	DQ	0000000400000000H
	DQ	0000000800000000H
	DQ	0000001000000000H
	DQ	0000002000000000H
	DQ	0000004000000000H
	DQ	0000008000000000H
	DQ	0000010000000000H
	DQ	0000020000000000H
	DQ	0000040000000000H
	DQ	0000080000000000H
	DQ	0000100000000000H
	DQ	0000200000000000H
	DQ	0000400000000000H
	DQ	0000800000000000H
	DQ	0001000000000000H
	DQ	0002000000000000H
	DQ	0004000000000000H
	DQ	0008000000000000H
	DQ	0010000000000000H
	DQ	0020000000000000H
	DQ	0040000000000000H
	DQ	0080000000000000H
	DQ	0100000000000000H
	DQ	0200000000000000H
	DQ	0400000000000000H
	DQ	0800000000000000H
	DQ	1000000000000000H
	DQ	2000000000000000H
	DQ	4000000000000000H
	DQ	8000000000000000H
?CLEAR_MASK@@3QB_KB DQ fffffffffffffffeH		; CLEAR_MASK
	DQ	fffffffffffffffdH
	DQ	fffffffffffffffbH
	DQ	fffffffffffffff7H
	DQ	ffffffffffffffefH
	DQ	ffffffffffffffdfH
	DQ	ffffffffffffffbfH
	DQ	ffffffffffffff7fH
	DQ	fffffffffffffeffH
	DQ	fffffffffffffdffH
	DQ	fffffffffffffbffH
	DQ	fffffffffffff7ffH
	DQ	ffffffffffffefffH
	DQ	ffffffffffffdfffH
	DQ	ffffffffffffbfffH
	DQ	ffffffffffff7fffH
	DQ	fffffffffffeffffH
	DQ	fffffffffffdffffH
	DQ	fffffffffffbffffH
	DQ	fffffffffff7ffffH
	DQ	ffffffffffefffffH
	DQ	ffffffffffdfffffH
	DQ	ffffffffffbfffffH
	DQ	ffffffffff7fffffH
	DQ	fffffffffeffffffH
	DQ	fffffffffdffffffH
	DQ	fffffffffbffffffH
	DQ	fffffffff7ffffffH
	DQ	ffffffffefffffffH
	DQ	ffffffffdfffffffH
	DQ	ffffffffbfffffffH
	DQ	ffffffff7fffffffH
	DQ	fffffffeffffffffH
	DQ	fffffffdffffffffH
	DQ	fffffffbffffffffH
	DQ	fffffff7ffffffffH
	DQ	ffffffefffffffffH
	DQ	ffffffdfffffffffH
	DQ	ffffffbfffffffffH
	DQ	ffffff7fffffffffH
	DQ	fffffeffffffffffH
	DQ	fffffdffffffffffH
	DQ	fffffbffffffffffH
	DQ	fffff7ffffffffffH
	DQ	ffffefffffffffffH
	DQ	ffffdfffffffffffH
	DQ	ffffbfffffffffffH
	DQ	ffff7fffffffffffH
	DQ	fffeffffffffffffH
	DQ	fffdffffffffffffH
	DQ	fffbffffffffffffH
	DQ	fff7ffffffffffffH
	DQ	ffefffffffffffffH
	DQ	ffdfffffffffffffH
	DQ	ffbfffffffffffffH
	DQ	ff7fffffffffffffH
	DQ	feffffffffffffffH
	DQ	fdffffffffffffffH
	DQ	fbffffffffffffffH
	DQ	f7ffffffffffffffH
	DQ	efffffffffffffffH
	DQ	dfffffffffffffffH
	DQ	bfffffffffffffffH
	DQ	7fffffffffffffffH
?SQUARE_FROM_FILE_RANK@@3QAY07$$CBHA DD 00H		; SQUARE_FROM_FILE_RANK
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	08H
	DD	09H
	DD	0aH
	DD	0bH
	DD	0cH
	DD	0dH
	DD	0eH
	DD	0fH
	DD	010H
	DD	011H
	DD	012H
	DD	013H
	DD	014H
	DD	015H
	DD	016H
	DD	017H
	DD	018H
	DD	019H
	DD	01aH
	DD	01bH
	DD	01cH
	DD	01dH
	DD	01eH
	DD	01fH
	DD	020H
	DD	021H
	DD	022H
	DD	023H
	DD	024H
	DD	025H
	DD	026H
	DD	027H
	DD	028H
	DD	029H
	DD	02aH
	DD	02bH
	DD	02cH
	DD	02dH
	DD	02eH
	DD	02fH
	DD	030H
	DD	031H
	DD	032H
	DD	033H
	DD	034H
	DD	035H
	DD	036H
	DD	037H
	DD	038H
	DD	039H
	DD	03aH
	DD	03bH
	DD	03cH
	DD	03dH
	DD	03eH
	DD	03fH
?FILE_OF_SQUARE@@3QBHB DD 00H				; FILE_OF_SQUARE
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
?RANK_OF_SQUARE@@3QBHB DD 00H				; RANK_OF_SQUARE
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	04H
	DD	04H
	DD	04H
	DD	04H
	DD	04H
	DD	04H
	DD	04H
	DD	04H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	06H
	DD	06H
	DD	06H
	DD	06H
	DD	06H
	DD	06H
	DD	06H
	DD	06H
	DD	07H
	DD	07H
	DD	07H
	DD	07H
	DD	07H
	DD	07H
	DD	07H
	DD	07H
CONST	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	?_Orphan_all@_Container_base0@std@@QEAAXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	??0_Fake_proxy_ptr_impl@std@@QEAA@AEBU_Fake_allocator@1@AEBU_Container_base0@1@@Z ; std::_Fake_proxy_ptr_impl::_Fake_proxy_ptr_impl
PUBLIC	?_Release@_Fake_proxy_ptr_impl@std@@QEAAXXZ	; std::_Fake_proxy_ptr_impl::_Release
PUBLIC	??7@YA?AW4Color@@W40@@Z				; operator!
PUBLIC	??A?$array@H$07@std@@QEBAAEBH_K@Z		; std::array<int,8>::operator[]
PUBLIC	??A?$array@H$0EA@@std@@QEBAAEBH_K@Z		; std::array<int,64>::operator[]
PUBLIC	??0S_MOVE@@QEAA@XZ				; S_MOVE::S_MOVE
PUBLIC	??A?$array@H$01@std@@QEBAAEBH_K@Z		; std::array<int,2>::operator[]
PUBLIC	??A?$array@W4Piece@@$0HI@@std@@QEBAAEBW4Piece@@_K@Z ; std::array<enum Piece,120>::operator[]
PUBLIC	?deallocate@?$allocator@US_UNDO@@@std@@QEAAXQEAUS_UNDO@@_K@Z ; std::allocator<S_UNDO>::deallocate
PUBLIC	?allocate@?$allocator@US_UNDO@@@std@@QEAAPEAUS_UNDO@@_K@Z ; std::allocator<S_UNDO>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SA_KAEBV?$allocator@US_UNDO@@@2@@Z ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SA?AV?$allocator@US_UNDO@@@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::select_on_container_copy_construction
PUBLIC	??0?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<S_UNDO,std::allocator<S_UNDO> >::vector<S_UNDO,std::allocator<S_UNDO> >
PUBLIC	??1?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::~vector<S_UNDO,std::allocator<S_UNDO> >
PUBLIC	?max_size@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEBA_KXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::max_size
PUBLIC	?_Buy_raw@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Tidy
PUBLIC	?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Xlength
PUBLIC	?_Getal@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAAEAV?$allocator@US_UNDO@@@2@XZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Getal
PUBLIC	?_Getal@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEBAAEBV?$allocator@US_UNDO@@@2@XZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<S_UNDO> >::_Vector_val<std::_Simple_types<S_UNDO> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEAAAEAV?$allocator@US_UNDO@@@2@XZ ; std::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEBAAEBV?$allocator@US_UNDO@@@2@XZ ; std::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1>::_Get_first
PUBLIC	??1Position@@QEAA@XZ				; Position::~Position
PUBLIC	??0Position@@QEAA@AEBV0@@Z			; Position::Position
PUBLIC	?evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z ; Engine3::HybridEvaluator::evaluate
PUBLIC	?get_game_phase@HybridEvaluator@Engine3@@SA?AW4GamePhase@2@AEBVPosition@@@Z ; Engine3::HybridEvaluator::get_game_phase
PUBLIC	?mirror_square@HybridEvaluator@Engine3@@SAHH@Z	; Engine3::HybridEvaluator::mirror_square
PUBLIC	?square120_to_64@HybridEvaluator@Engine3@@SAHH@Z ; Engine3::HybridEvaluator::square120_to_64
PUBLIC	?square64_to_120@HybridEvaluator@Engine3@@SAHH@Z ; Engine3::HybridEvaluator::square64_to_120
PUBLIC	?evaluate_material@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z ; Engine3::HybridEvaluator::evaluate_material
PUBLIC	?evaluate_pawn_structure@HybridEvaluator@Engine3@@CAHAEBVPosition@@@Z ; Engine3::HybridEvaluator::evaluate_pawn_structure
PUBLIC	?evaluate_piece_activity@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z ; Engine3::HybridEvaluator::evaluate_piece_activity
PUBLIC	?evaluate_king_safety@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z ; Engine3::HybridEvaluator::evaluate_king_safety
PUBLIC	?evaluate_development@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z ; Engine3::HybridEvaluator::evaluate_development
PUBLIC	?evaluate_mobility@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z ; Engine3::HybridEvaluator::evaluate_mobility
PUBLIC	?is_passed_pawn@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z ; Engine3::HybridEvaluator::is_passed_pawn
PUBLIC	?is_isolated_pawn@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z ; Engine3::HybridEvaluator::is_isolated_pawn
PUBLIC	?is_doubled_pawn@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z ; Engine3::HybridEvaluator::is_doubled_pawn
PUBLIC	?is_knight_outpost@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z ; Engine3::HybridEvaluator::is_knight_outpost
PUBLIC	?is_open_file@HybridEvaluator@Engine3@@CA_NAEBVPosition@@H@Z ; Engine3::HybridEvaluator::is_open_file
PUBLIC	?count_developed_pieces@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4Color@@@Z ; Engine3::HybridEvaluator::count_developed_pieces
PUBLIC	??0S_MOVELIST@@QEAA@XZ				; S_MOVELIST::S_MOVELIST
PUBLIC	??$max@H@std@@YAAEBHAEBH0@Z			; std::max<int>
PUBLIC	??$min@H@std@@YAAEBHAEBH0@Z			; std::min<int>
PUBLIC	??$min@_K@std@@YAAEB_KAEB_K0@Z			; std::min<unsigned __int64>
PUBLIC	??$?0V?$allocator@US_UNDO@@@std@@$$V@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@US_UNDO@@@1@@Z ; std::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1>::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1><std::allocator<S_UNDO> >
PUBLIC	??$_Construct_n@AEBQEAUS_UNDO@@AEBQEAU1@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBQEAUS_UNDO@@1@Z ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Construct_n<S_UNDO * const &,S_UNDO * const &>
PUBLIC	??$_Allocate_at_least_helper@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<S_UNDO> >
PUBLIC	??$_Destroy_range@V?$allocator@US_UNDO@@@std@@@std@@YAXPEAUS_UNDO@@QEAU1@AEAV?$allocator@US_UNDO@@@0@@Z ; std::_Destroy_range<std::allocator<S_UNDO> >
PUBLIC	??$forward@V?$allocator@US_UNDO@@@std@@@std@@YA$$QEAV?$allocator@US_UNDO@@@0@AEAV10@@Z ; std::forward<std::allocator<S_UNDO> >
PUBLIC	??1?$_Tidy_guard@V?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<S_UNDO,std::allocator<S_UNDO> > >::~_Tidy_guard<std::vector<S_UNDO,std::allocator<S_UNDO> > >
PUBLIC	??$forward@AEBQEAUS_UNDO@@@std@@YAAEBQEAUS_UNDO@@AEBQEAU1@@Z ; std::forward<S_UNDO * const &>
PUBLIC	??$_Uninitialized_copy@PEAUS_UNDO@@PEAU1@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@PEAU1@00AEAV?$allocator@US_UNDO@@@0@@Z ; std::_Uninitialized_copy<S_UNDO *,S_UNDO *,std::allocator<S_UNDO> >
PUBLIC	??$_Max_limit@_J@std@@YA_JXZ			; std::_Max_limit<__int64>
PUBLIC	??$_Unfancy@US_UNDO@@@std@@YAPEAUS_UNDO@@PEAU1@@Z ; std::_Unfancy<S_UNDO>
PUBLIC	??$_Copy_memmove@PEAUS_UNDO@@PEAU1@@std@@YAPEAUS_UNDO@@PEAU1@00@Z ; std::_Copy_memmove<S_UNDO *,S_UNDO *>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAA@PEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Uninitialized_backout_al<std::allocator<S_UNDO> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::~_Uninitialized_backout_al<std::allocator<S_UNDO> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAPEAUS_UNDO@@XZ ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Release
PUBLIC	??$move@AEAPEAUS_UNDO@@@std@@YA$$QEAPEAUS_UNDO@@AEAPEAU1@@Z ; std::move<S_UNDO * &>
PUBLIC	??$_Get_unwrapped@PEAUS_UNDO@@@std@@YA?A_T$$QEAPEAUS_UNDO@@@Z ; std::_Get_unwrapped<S_UNDO *>
PUBLIC	??$_To_address@PEAUS_UNDO@@@std@@YA?A_PAEBQEAUS_UNDO@@@Z ; std::_To_address<S_UNDO *>
PUBLIC	??$_Emplace_back@AEAUS_UNDO@@@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAXAEAUS_UNDO@@@Z ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Emplace_back<S_UNDO &>
PUBLIC	??$?0$0A@@id@locale@std@@QEAA@XZ		; std::locale::id::id<0>
PUBLIC	??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z		; std::_Deallocate<16>
PUBLIC	??$_Copy_memmove_tail@PEAUS_UNDO@@@std@@YAPEAUS_UNDO@@QEBDQEAU1@_K2@Z ; std::_Copy_memmove_tail<S_UNDO *>
PUBLIC	??$forward@AEAUS_UNDO@@@std@@YAAEAUS_UNDO@@AEAU1@@Z ; std::forward<S_UNDO &>
PUBLIC	??$construct@US_UNDO@@AEAU1@@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SAXAEAV?$allocator@US_UNDO@@@1@QEAUS_UNDO@@AEAU3@@Z ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::construct<S_UNDO,S_UNDO &>
PUBLIC	??$_Get_size_of_n@$0CNI@@std@@YA_K_K@Z		; std::_Get_size_of_n<728>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	?PAWN_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B ; Engine3::EvalParams::PAWN_TABLE
PUBLIC	?KNIGHT_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B ; Engine3::EvalParams::KNIGHT_TABLE
PUBLIC	?BISHOP_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B ; Engine3::EvalParams::BISHOP_TABLE
PUBLIC	?ROOK_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B ; Engine3::EvalParams::ROOK_TABLE
PUBLIC	?QUEEN_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B ; Engine3::EvalParams::QUEEN_TABLE
PUBLIC	?KING_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B ; Engine3::EvalParams::KING_TABLE
PUBLIC	?KING_TABLE_ENDGAME@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B ; Engine3::EvalParams::KING_TABLE_ENDGAME
PUBLIC	?PASSED_PAWN_BONUS@EvalParams@Engine3@@3V?$array@H$07@std@@B ; Engine3::EvalParams::PASSED_PAWN_BONUS
PUBLIC	?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	_invoke_watson:PROC
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z:PROC ; SqAttacked
EXTRN	?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z:PROC ; generate_legal_moves_enhanced
EXTRN	_CxxThrowException:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__chkstk:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	memmove:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
;	COMDAT ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A DQ 01H DUP (?) ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DQ 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN14
	DD	imagerel $LN14+72
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN6
	DD	imagerel $LN6+50
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+66
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN9
	DD	imagerel $LN9+60
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN17
	DD	imagerel $LN17+66
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN14
	DD	imagerel $LN14+60
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN22
	DD	imagerel $LN22+66
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+32
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN7
	DD	imagerel $LN7+61
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@US_UNDO@@@std@@QEAAXQEAUS_UNDO@@_K@Z DD imagerel $LN17
	DD	imagerel $LN17+84
	DD	imagerel $unwind$?deallocate@?$allocator@US_UNDO@@@std@@QEAAXQEAUS_UNDO@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@US_UNDO@@@std@@QEAAPEAUS_UNDO@@_K@Z DD imagerel $LN10
	DD	imagerel $LN10+41
	DD	imagerel $unwind$?allocate@?$allocator@US_UNDO@@@std@@QEAAPEAUS_UNDO@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN58
	DD	imagerel $LN58+93
	DD	imagerel $unwind$??0?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??0?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN58+93
	DD	imagerel $LN58+201
	DD	imagerel $chain$1$??0?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??0?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN58+201
	DD	imagerel $LN58+227
	DD	imagerel $chain$2$??0?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z DD imagerel $LN17
	DD	imagerel $LN17+24
	DD	imagerel $unwind$?_Buy_raw@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Buy_raw@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z DD imagerel $LN17+24
	DD	imagerel $LN17+69
	DD	imagerel $chain$0$?_Buy_raw@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Buy_raw@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z DD imagerel $LN17+69
	DD	imagerel $LN17+75
	DD	imagerel $chain$1$?_Buy_raw@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z DD imagerel $LN21
	DD	imagerel $LN21+24
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Buy_nonzero@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z DD imagerel $LN21+24
	DD	imagerel $LN21+69
	DD	imagerel $chain$0$?_Buy_nonzero@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Buy_nonzero@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z DD imagerel $LN21+69
	DD	imagerel $LN21+75
	DD	imagerel $chain$1$?_Buy_nonzero@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXXZ DD imagerel $LN25
	DD	imagerel $LN25+138
	DD	imagerel $unwind$?_Tidy@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Position@@QEAA@AEBV0@@Z DD imagerel $LN64
	DD	imagerel $LN64+527
	DD	imagerel $unwind$??0Position@@QEAA@AEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??0Position@@QEAA@AEBV0@@Z DD imagerel $LN64+527
	DD	imagerel $LN64+659
	DD	imagerel $chain$1$??0Position@@QEAA@AEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??0Position@@QEAA@AEBV0@@Z DD imagerel $LN64+659
	DD	imagerel $LN64+697
	DD	imagerel $chain$2$??0Position@@QEAA@AEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z DD imagerel $LN196
	DD	imagerel $LN196+731
	DD	imagerel $unwind$?evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?evaluate_material@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z DD imagerel $LN126
	DD	imagerel $LN126+776
	DD	imagerel $unwind$?evaluate_material@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?evaluate_pawn_structure@HybridEvaluator@Engine3@@CAHAEBVPosition@@@Z DD imagerel $LN297
	DD	imagerel $LN297+1469
	DD	imagerel $unwind$?evaluate_pawn_structure@HybridEvaluator@Engine3@@CAHAEBVPosition@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?evaluate_piece_activity@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z DD imagerel $LN100
	DD	imagerel $LN100+480
	DD	imagerel $unwind$?evaluate_piece_activity@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?evaluate_mobility@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z DD imagerel $LN37
	DD	imagerel $LN37+267
	DD	imagerel $unwind$?evaluate_mobility@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n@AEBQEAUS_UNDO@@AEBQEAU1@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBQEAUS_UNDO@@1@Z DD imagerel $LN50
	DD	imagerel $LN50+53
	DD	imagerel $unwind$??$_Construct_n@AEBQEAUS_UNDO@@AEBQEAU1@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBQEAUS_UNDO@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Construct_n@AEBQEAUS_UNDO@@AEBQEAU1@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBQEAUS_UNDO@@1@Z DD imagerel $LN50+53
	DD	imagerel $LN50+183
	DD	imagerel $chain$1$??$_Construct_n@AEBQEAUS_UNDO@@AEBQEAU1@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBQEAUS_UNDO@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Construct_n@AEBQEAUS_UNDO@@AEBQEAU1@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBQEAUS_UNDO@@1@Z DD imagerel $LN50+183
	DD	imagerel $LN50+190
	DD	imagerel $chain$2$??$_Construct_n@AEBQEAUS_UNDO@@AEBQEAU1@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBQEAUS_UNDO@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_at_least_helper@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@0@AEA_K@Z DD imagerel $LN13
	DD	imagerel $LN13+44
	DD	imagerel $unwind$??$_Allocate_at_least_helper@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@0@AEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEAUS_UNDO@@PEAU1@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@PEAU1@00AEAV?$allocator@US_UNDO@@@0@@Z DD imagerel $LN20
	DD	imagerel $LN20+81
	DD	imagerel $unwind$??$_Uninitialized_copy@PEAUS_UNDO@@PEAU1@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@PEAU1@00AEAV?$allocator@US_UNDO@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAUS_UNDO@@PEAU1@@std@@YAPEAUS_UNDO@@PEAU1@00@Z DD imagerel $LN6
	DD	imagerel $LN6+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAUS_UNDO@@PEAU1@@std@@YAPEAUS_UNDO@@PEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+71
	DD	imagerel $unwind$??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove_tail@PEAUS_UNDO@@@std@@YAPEAUS_UNDO@@QEBDQEAU1@_K2@Z DD imagerel $LN4
	DD	imagerel $LN4+42
	DD	imagerel $unwind$??$_Copy_memmove_tail@PEAUS_UNDO@@@std@@YAPEAUS_UNDO@@QEBDQEAU1@_K2@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0CNI@@std@@YA_K_K@Z DD imagerel $LN7
	DD	imagerel $LN7+37
	DD	imagerel $unwind$??$_Get_size_of_n@$0CNI@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN18
	DD	imagerel $LN18+107
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN11
	DD	imagerel $LN11+77
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ?PASSED_PAWN_BONUS@EvalParams@Engine3@@3V?$array@H$07@std@@B
CONST	SEGMENT
?PASSED_PAWN_BONUS@EvalParams@Engine3@@3V?$array@H$07@std@@B DD 00H ; Engine3::EvalParams::PASSED_PAWN_BONUS
	DD	05H
	DD	0aH
	DD	014H
	DD	023H
	DD	03cH
	DD	064H
	DD	00H
CONST	ENDS
;	COMDAT ?KING_TABLE_ENDGAME@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B
CONST	SEGMENT
?KING_TABLE_ENDGAME@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B DD 0ffffffceH ; Engine3::EvalParams::KING_TABLE_ENDGAME
	DD	0ffffffd8H
	DD	0ffffffe2H
	DD	0ffffffecH
	DD	0ffffffecH
	DD	0ffffffe2H
	DD	0ffffffd8H
	DD	0ffffffceH
	DD	0ffffffe2H
	DD	0ffffffecH
	DD	0fffffff6H
	DD	00H
	DD	00H
	DD	0fffffff6H
	DD	0ffffffecH
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0fffffff6H
	DD	014H
	DD	01eH
	DD	01eH
	DD	014H
	DD	0fffffff6H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0fffffff6H
	DD	01eH
	DD	028H
	DD	028H
	DD	01eH
	DD	0fffffff6H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0fffffff6H
	DD	01eH
	DD	028H
	DD	028H
	DD	01eH
	DD	0fffffff6H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0fffffff6H
	DD	014H
	DD	01eH
	DD	01eH
	DD	014H
	DD	0fffffff6H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffceH
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffceH
CONST	ENDS
;	COMDAT ?KING_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B
CONST	SEGMENT
?KING_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B DD 0ffffffe2H ; Engine3::EvalParams::KING_TABLE
	DD	0ffffffd8H
	DD	0ffffffd8H
	DD	0ffffffceH
	DD	0ffffffceH
	DD	0ffffffd8H
	DD	0ffffffd8H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffd8H
	DD	0ffffffd8H
	DD	0ffffffceH
	DD	0ffffffceH
	DD	0ffffffd8H
	DD	0ffffffd8H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffd8H
	DD	0ffffffd8H
	DD	0ffffffceH
	DD	0ffffffceH
	DD	0ffffffd8H
	DD	0ffffffd8H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffd8H
	DD	0ffffffd8H
	DD	0ffffffceH
	DD	0ffffffceH
	DD	0ffffffd8H
	DD	0ffffffd8H
	DD	0ffffffe2H
	DD	0ffffffecH
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffd8H
	DD	0ffffffd8H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffecH
	DD	0fffffff6H
	DD	0ffffffecH
	DD	0ffffffecH
	DD	0ffffffecH
	DD	0ffffffecH
	DD	0ffffffecH
	DD	0ffffffecH
	DD	0fffffff6H
	DD	014H
	DD	014H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	014H
	DD	014H
	DD	014H
	DD	01eH
	DD	0aH
	DD	00H
	DD	00H
	DD	0aH
	DD	01eH
	DD	014H
CONST	ENDS
;	COMDAT ?QUEEN_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B
CONST	SEGMENT
?QUEEN_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B DD 0ffffffecH ; Engine3::EvalParams::QUEEN_TABLE
	DD	0fffffff6H
	DD	0fffffff6H
	DD	0fffffffbH
	DD	0fffffffbH
	DD	0fffffff6H
	DD	0fffffff6H
	DD	0ffffffecH
	DD	0fffffff6H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffff6H
	DD	0fffffff6H
	DD	00H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	00H
	DD	0fffffff6H
	DD	0fffffffbH
	DD	00H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	00H
	DD	0fffffffbH
	DD	00H
	DD	00H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	00H
	DD	0fffffffbH
	DD	0fffffff6H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	00H
	DD	0fffffff6H
	DD	0fffffff6H
	DD	00H
	DD	05H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffff6H
	DD	0ffffffecH
	DD	0fffffff6H
	DD	0fffffff6H
	DD	0fffffffbH
	DD	0fffffffbH
	DD	0fffffff6H
	DD	0fffffff6H
	DD	0ffffffecH
CONST	ENDS
;	COMDAT ?ROOK_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B
CONST	SEGMENT
?ROOK_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B DD 00H ; Engine3::EvalParams::ROOK_TABLE
	DD	00H
	DD	00H
	DD	05H
	DD	05H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffbH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffbH
	DD	0fffffffbH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffbH
	DD	0fffffffbH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffbH
	DD	0fffffffbH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffbH
	DD	0fffffffbH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffbH
	DD	05H
	DD	0aH
	DD	0aH
	DD	0aH
	DD	0aH
	DD	0aH
	DD	0aH
	DD	05H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?BISHOP_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B
CONST	SEGMENT
?BISHOP_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B DD 0ffffffecH ; Engine3::EvalParams::BISHOP_TABLE
	DD	0fffffff6H
	DD	0fffffff6H
	DD	0fffffff6H
	DD	0fffffff6H
	DD	0fffffff6H
	DD	0fffffff6H
	DD	0ffffffecH
	DD	0fffffff6H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffff6H
	DD	0fffffff6H
	DD	00H
	DD	05H
	DD	0aH
	DD	0aH
	DD	05H
	DD	00H
	DD	0fffffff6H
	DD	0fffffff6H
	DD	05H
	DD	05H
	DD	0aH
	DD	0aH
	DD	05H
	DD	05H
	DD	0fffffff6H
	DD	0fffffff6H
	DD	00H
	DD	0aH
	DD	0aH
	DD	0aH
	DD	0aH
	DD	00H
	DD	0fffffff6H
	DD	0fffffff6H
	DD	0aH
	DD	0aH
	DD	0aH
	DD	0aH
	DD	0aH
	DD	0aH
	DD	0fffffff6H
	DD	0fffffff6H
	DD	05H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	05H
	DD	0fffffff6H
	DD	0ffffffecH
	DD	0fffffff6H
	DD	0fffffff6H
	DD	0fffffff6H
	DD	0fffffff6H
	DD	0fffffff6H
	DD	0fffffff6H
	DD	0ffffffecH
CONST	ENDS
;	COMDAT ?KNIGHT_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B
CONST	SEGMENT
?KNIGHT_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B DD 0ffffffceH ; Engine3::EvalParams::KNIGHT_TABLE
	DD	0ffffffd8H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffd8H
	DD	0ffffffceH
	DD	0ffffffd8H
	DD	0ffffffecH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ffffffecH
	DD	0ffffffd8H
	DD	0ffffffe2H
	DD	00H
	DD	0aH
	DD	0fH
	DD	0fH
	DD	0aH
	DD	00H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	05H
	DD	0fH
	DD	014H
	DD	014H
	DD	0fH
	DD	05H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	00H
	DD	0fH
	DD	014H
	DD	014H
	DD	0fH
	DD	00H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	05H
	DD	0aH
	DD	0fH
	DD	0fH
	DD	0aH
	DD	05H
	DD	0ffffffe2H
	DD	0ffffffd8H
	DD	0ffffffecH
	DD	00H
	DD	05H
	DD	05H
	DD	00H
	DD	0ffffffecH
	DD	0ffffffd8H
	DD	0ffffffceH
	DD	0ffffffd8H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffe2H
	DD	0ffffffd8H
	DD	0ffffffceH
CONST	ENDS
;	COMDAT ?PAWN_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B
CONST	SEGMENT
?PAWN_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B DD 00H ; Engine3::EvalParams::PAWN_TABLE
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	05H
	DD	0aH
	DD	0aH
	DD	0ffffffecH
	DD	0ffffffecH
	DD	0aH
	DD	0aH
	DD	05H
	DD	05H
	DD	0fffffffbH
	DD	0fffffff6H
	DD	00H
	DD	00H
	DD	0fffffff6H
	DD	0fffffffbH
	DD	05H
	DD	00H
	DD	00H
	DD	00H
	DD	014H
	DD	014H
	DD	00H
	DD	00H
	DD	00H
	DD	05H
	DD	05H
	DD	0aH
	DD	019H
	DD	019H
	DD	0aH
	DD	05H
	DD	05H
	DD	0aH
	DD	0aH
	DD	014H
	DD	01eH
	DD	01eH
	DD	014H
	DD	0aH
	DD	0aH
	DD	032H
	DD	032H
	DD	032H
	DD	032H
	DD	032H
	DD	032H
	DD	032H
	DD	032H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0CNI@@std@@YA_K_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove_tail@PEAUS_UNDO@@@std@@YAPEAUS_UNDO@@QEBDQEAU1@_K2@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAUS_UNDO@@PEAU1@@std@@YAPEAUS_UNDO@@PEAU1@00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEAUS_UNDO@@PEAU1@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@PEAU1@00AEAV?$allocator@US_UNDO@@@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_at_least_helper@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@0@AEA_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Construct_n@AEBQEAUS_UNDO@@AEBQEAU1@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBQEAUS_UNDO@@1@Z DD 021H
	DD	imagerel $LN50
	DD	imagerel $LN50+53
	DD	imagerel $unwind$??$_Construct_n@AEBQEAUS_UNDO@@AEBQEAU1@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBQEAUS_UNDO@@1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Construct_n@AEBQEAUS_UNDO@@AEBQEAU1@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBQEAUS_UNDO@@1@Z DD 041121H
	DD	077411H
	DD	063405H
	DD	imagerel $LN50
	DD	imagerel $LN50+53
	DD	imagerel $unwind$??$_Construct_n@AEBQEAUS_UNDO@@AEBQEAU1@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBQEAUS_UNDO@@1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n@AEBQEAUS_UNDO@@AEBQEAU1@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBQEAUS_UNDO@@1@Z DD 061901H
	DD	09e419H
	DD	086419H
	DD	0f0153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?evaluate_mobility@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z DB 06H
	DB	082H
	DB	00H
	DB	082H
	DB	02H
	DB	08cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?evaluate_mobility@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z DB 02H
	DB	0aH
	DD	imagerel ??1Position@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?evaluate_mobility@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z DB 028H
	DD	imagerel $stateUnwindMap$?evaluate_mobility@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z
	DD	imagerel $ip2state$?evaluate_mobility@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?evaluate_mobility@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z DD 092719H
	DD	017a5415H
	DD	01793415H
	DD	01740115H
	DD	0700ce00eH
	DD	0600bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?evaluate_mobility@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z
	DD	0b92H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?evaluate_piece_activity@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z DD 0c1e01H
	DD	0b741eH
	DD	0a641eH
	DD	09541eH
	DD	08341eH
	DD	0f01a321eH
	DD	0c016e018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?evaluate_pawn_structure@HybridEvaluator@Engine3@@CAHAEBVPosition@@@Z DD 0a2919H
	DD	010741bH
	DD	0f641bH
	DD	0e341bH
	DD	0f014921bH
	DD	05010e012H
	DD	imagerel __GSHandlerCheck
	DD	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?evaluate_material@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z DD 081401H
	DD	04e414H
	DD	03740fH
	DD	02640aH
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z DB 0aH
	DB	'.'
	DB	00H
	DB	'\'
	DB	02H
	DB	09H, 07H
	DB	04H
	DB	0e4H
	DB	02H
	DB	082H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z DB 04H
	DB	0aH
	DD	imagerel ??1Position@@QEAA@XZ
	DB	01H
	DB	0eH
	DB	03aH
	DD	imagerel ??1Position@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z
	DD	imagerel $ip2state$?evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z DD 0b3119H
	DD	02ea541fH
	DD	02e9341fH
	DD	02e2011fH
	DD	0e010f012H
	DD	0700cc00eH
	DD	0600bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z
	DD	01702H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??0Position@@QEAA@AEBV0@@Z DD 021H
	DD	imagerel $LN64
	DD	imagerel $LN64+527
	DD	imagerel $unwind$??0Position@@QEAA@AEBV0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??0Position@@QEAA@AEBV0@@Z DD 041121H
	DD	077411H
	DD	063405H
	DD	imagerel $LN64
	DD	imagerel $LN64+527
	DD	imagerel $unwind$??0Position@@QEAA@AEBV0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Position@@QEAA@AEBV0@@Z DD 061001H
	DD	096410H
	DD	085410H
	DD	0e00c3210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXXZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Buy_nonzero@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z DD 021H
	DD	imagerel $LN21
	DD	imagerel $LN21+24
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Buy_nonzero@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z DD 020521H
	DD	063405H
	DD	imagerel $LN21
	DD	imagerel $LN21+24
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Buy_raw@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z DD 021H
	DD	imagerel $LN17
	DD	imagerel $LN17+24
	DD	imagerel $unwind$?_Buy_raw@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Buy_raw@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z DD 020521H
	DD	063405H
	DD	imagerel $LN17
	DD	imagerel $LN17+24
	DD	imagerel $unwind$?_Buy_raw@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??0?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@AEBV01@@Z DD 021H
	DD	imagerel $LN58
	DD	imagerel $LN58+93
	DD	imagerel $unwind$??0?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??0?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@AEBV01@@Z DD 041121H
	DD	077411H
	DD	063405H
	DD	imagerel $LN58
	DD	imagerel $LN58+93
	DD	imagerel $unwind$??0?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@AEBV01@@Z DD 061001H
	DD	096410H
	DD	085410H
	DD	0e00c3210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@US_UNDO@@@std@@QEAAPEAUS_UNDO@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@US_UNDO@@@std@@QEAAXQEAUS_UNDO@@_K@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 010401H
	DD	08204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 081901H
	DD	086419H
	DD	075419H
	DD	063419H
	DD	070153219H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 64
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 182
$LN11:
	sub	rsp, 56					; 00000038H
; Line 184
	lea	rax, QWORD PTR [rcx+39]
; Line 185
	cmp	rax, rcx
	jbe	SHORT $LN9@Allocate_m
; Line 136
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax
; Line 190
	test	rax, rax
	je	SHORT $LN10@Allocate_m
; Line 191
	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H
; Line 192
	mov	QWORD PTR [rax-8], rcx
; Line 198
	add	rsp, 56					; 00000038H
	ret	0
$LN9@Allocate_m:
; Line 186
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN10@Allocate_m:
; Line 190
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN7@Allocate_m:
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 64
??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 225
$LN18:
	sub	rsp, 56					; 00000038H
; Line 227
	test	rcx, rcx
	jne	SHORT $LN2@Allocate
; Line 228
	xor	eax, eax
; Line 258
	add	rsp, 56					; 00000038H
	ret	0
$LN2@Allocate:
; Line 251
	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN3@Allocate
; Line 184
	lea	rax, QWORD PTR [rcx+39]
; Line 185
	cmp	rax, rcx
	jbe	SHORT $LN16@Allocate
; Line 136
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax
; Line 190
	test	rax, rax
	je	SHORT $LN17@Allocate
; Line 191
	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H
; Line 192
	mov	QWORD PTR [rax-8], rcx
; Line 258
	add	rsp, 56					; 00000038H
	ret	0
$LN3@Allocate:
	add	rsp, 56					; 00000038H
; Line 136
	jmp	??2@YAPEAX_K@Z				; operator new
$LN16@Allocate:
; Line 186
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN17@Allocate:
; Line 190
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN14@Allocate:
??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Get_size_of_n@$0CNI@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Count$ = 48
??$_Get_size_of_n@$0CNI@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<728>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 112
$LN7:
	sub	rsp, 40					; 00000028H
; Line 117
	mov	rax, 25338934167183450			; 005a05a05a05a05aH
	cmp	rcx, rax
	ja	SHORT $LN6@Get_size_o
; Line 122
	imul	rax, rcx, 728				; 000002d8H
; Line 123
	add	rsp, 40					; 00000028H
	ret	0
$LN6@Get_size_o:
; Line 118
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN4@Get_size_o:
??$_Get_size_of_n@$0CNI@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<728>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$construct@US_UNDO@@AEAU1@@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SAXAEAV?$allocator@US_UNDO@@@1@QEAUS_UNDO@@AEAU3@@Z
_TEXT	SEGMENT
__formal$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@US_UNDO@@AEAU1@@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SAXAEAV?$allocator@US_UNDO@@@1@QEAUS_UNDO@@AEAU3@@Z PROC ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::construct<S_UNDO,S_UNDO &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 732
	mov	eax, 5
$LL3@construct:
	lea	rdx, QWORD PTR [rdx+128]
	movups	xmm0, XMMWORD PTR [r8]
	lea	r8, QWORD PTR [r8+128]
	movups	XMMWORD PTR [rdx-128], xmm0
	movups	xmm1, XMMWORD PTR [r8-112]
	movups	XMMWORD PTR [rdx-112], xmm1
	movups	xmm0, XMMWORD PTR [r8-96]
	movups	XMMWORD PTR [rdx-96], xmm0
	movups	xmm1, XMMWORD PTR [r8-80]
	movups	XMMWORD PTR [rdx-80], xmm1
	movups	xmm0, XMMWORD PTR [r8-64]
	movups	XMMWORD PTR [rdx-64], xmm0
	movups	xmm1, XMMWORD PTR [r8-48]
	movups	XMMWORD PTR [rdx-48], xmm1
	movups	xmm0, XMMWORD PTR [r8-32]
	movups	XMMWORD PTR [rdx-32], xmm0
	movups	xmm1, XMMWORD PTR [r8-16]
	movups	XMMWORD PTR [rdx-16], xmm1
	sub	rax, 1
	jne	SHORT $LL3@construct
	movups	xmm0, XMMWORD PTR [r8]
	movups	XMMWORD PTR [rdx], xmm0
	movups	xmm1, XMMWORD PTR [r8+16]
	movups	XMMWORD PTR [rdx+16], xmm1
	movups	xmm0, XMMWORD PTR [r8+32]
	movups	XMMWORD PTR [rdx+32], xmm0
	movups	xmm1, XMMWORD PTR [r8+48]
	movups	XMMWORD PTR [rdx+48], xmm1
	movups	xmm0, XMMWORD PTR [r8+64]
	movups	XMMWORD PTR [rdx+64], xmm0
	mov	rax, QWORD PTR [r8+80]
	mov	QWORD PTR [rdx+80], rax
; Line 734
	ret	0
??$construct@US_UNDO@@AEAU1@@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SAXAEAV?$allocator@US_UNDO@@@1@QEAUS_UNDO@@AEAU3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::construct<S_UNDO,S_UNDO &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$forward@AEAUS_UNDO@@@std@@YAAEAUS_UNDO@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAUS_UNDO@@@std@@YAAEAUS_UNDO@@AEAU1@@Z PROC ; std::forward<S_UNDO &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1502
	mov	rax, rcx
; Line 1503
	ret	0
??$forward@AEAUS_UNDO@@@std@@YAAEAUS_UNDO@@AEAU1@@Z ENDP ; std::forward<S_UNDO &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_memmove_tail@PEAUS_UNDO@@@std@@YAPEAUS_UNDO@@QEBDQEAU1@_K2@Z
_TEXT	SEGMENT
_First_ch$ = 48
_Dest$ = 56
_Byte_count$ = 64
_Object_count$ = 72
??$_Copy_memmove_tail@PEAUS_UNDO@@@std@@YAPEAUS_UNDO@@QEBDQEAU1@_K2@Z PROC ; std::_Copy_memmove_tail<S_UNDO *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 4747
$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; Line 4751
	mov	rdx, rcx
	mov	rcx, rbx
	call	memmove
; Line 4755
	lea	rax, QWORD PTR [rbx+rdi]
; Line 4759
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove_tail@PEAUS_UNDO@@@std@@YAPEAUS_UNDO@@QEBDQEAU1@_K2@Z ENDP ; std::_Copy_memmove_tail<S_UNDO *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 64
_Bytes$ = 72
??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 261
$LN13:
	sub	rsp, 56					; 00000038H
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN8@Deallocate
; Line 205
	mov	rax, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
; Line 219
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $LN7@Deallocate
; Line 220
	mov	rcx, rax
$LN8@Deallocate:
; Line 291
	add	rsp, 56					; 00000038H
; Line 289
	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN7@Deallocate:
; Line 219
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN10@Deallocate:
??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$?0$0A@@id@locale@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??$?0$0A@@id@locale@std@@QEAA@XZ PROC			; std::locale::id::id<0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xlocale
; Line 108
	mov	QWORD PTR [rcx], 0
	mov	rax, rcx
	ret	0
??$?0$0A@@id@locale@std@@QEAA@XZ ENDP			; std::locale::id::id<0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Emplace_back@AEAUS_UNDO@@@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAXAEAUS_UNDO@@@Z
_TEXT	SEGMENT
this$ = 8
<_Vals_0>$ = 16
??$_Emplace_back@AEAUS_UNDO@@@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAXAEAUS_UNDO@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Emplace_back<S_UNDO &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1844
	mov	rax, QWORD PTR [rcx+8]
	mov	r9, rcx
; Line 732
	mov	r8d, 5
	npad	3
$LL5@Emplace_ba:
	lea	rax, QWORD PTR [rax+128]
	movups	xmm0, XMMWORD PTR [rdx]
	lea	rdx, QWORD PTR [rdx+128]
	movups	XMMWORD PTR [rax-128], xmm0
	movups	xmm1, XMMWORD PTR [rdx-112]
	movups	XMMWORD PTR [rax-112], xmm1
	movups	xmm0, XMMWORD PTR [rdx-96]
	movups	XMMWORD PTR [rax-96], xmm0
	movups	xmm1, XMMWORD PTR [rdx-80]
	movups	XMMWORD PTR [rax-80], xmm1
	movups	xmm0, XMMWORD PTR [rdx-64]
	movups	XMMWORD PTR [rax-64], xmm0
	movups	xmm1, XMMWORD PTR [rdx-48]
	movups	XMMWORD PTR [rax-48], xmm1
	movups	xmm0, XMMWORD PTR [rdx-32]
	movups	XMMWORD PTR [rax-32], xmm0
	movups	xmm1, XMMWORD PTR [rdx-16]
	movups	XMMWORD PTR [rax-16], xmm1
	sub	r8, 1
	jne	SHORT $LL5@Emplace_ba
	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rax], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rax+16], xmm1
	movups	xmm0, XMMWORD PTR [rdx+32]
	movups	XMMWORD PTR [rax+32], xmm0
	movups	xmm1, XMMWORD PTR [rdx+48]
	movups	XMMWORD PTR [rax+48], xmm1
	movups	xmm0, XMMWORD PTR [rdx+64]
	movups	XMMWORD PTR [rax+64], xmm0
	mov	rcx, QWORD PTR [rdx+80]
	mov	QWORD PTR [rax+80], rcx
; Line 1845
	add	QWORD PTR [r9+8], 728			; 000002d8H
; Line 1846
	ret	0
??$_Emplace_back@AEAUS_UNDO@@@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAXAEAUS_UNDO@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Emplace_back<S_UNDO &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_To_address@PEAUS_UNDO@@@std@@YA?A_PAEBQEAUS_UNDO@@@Z
_TEXT	SEGMENT
_Val$ = 8
??$_To_address@PEAUS_UNDO@@@std@@YA?A_PAEBQEAUS_UNDO@@@Z PROC ; std::_To_address<S_UNDO *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 4627
	mov	rax, QWORD PTR [rcx]
; Line 4628
	ret	0
??$_To_address@PEAUS_UNDO@@@std@@YA?A_PAEBQEAUS_UNDO@@@Z ENDP ; std::_To_address<S_UNDO *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Get_unwrapped@PEAUS_UNDO@@@std@@YA?A_T$$QEAPEAUS_UNDO@@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@PEAUS_UNDO@@@std@@YA?A_T$$QEAPEAUS_UNDO@@@Z PROC ; std::_Get_unwrapped<S_UNDO *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 1382
	mov	rax, QWORD PTR [rcx]
; Line 1388
	ret	0
??$_Get_unwrapped@PEAUS_UNDO@@@std@@YA?A_T$$QEAPEAUS_UNDO@@@Z ENDP ; std::_Get_unwrapped<S_UNDO *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$move@AEAPEAUS_UNDO@@@std@@YA$$QEAPEAUS_UNDO@@AEAPEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAPEAUS_UNDO@@@std@@YA$$QEAPEAUS_UNDO@@AEAPEAU1@@Z PROC ; std::move<S_UNDO * &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1513
	mov	rax, rcx
; Line 1514
	ret	0
??$move@AEAPEAUS_UNDO@@@std@@YA$$QEAPEAUS_UNDO@@AEAPEAU1@@Z ENDP ; std::move<S_UNDO * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAPEAUS_UNDO@@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAPEAUS_UNDO@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Release, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1849
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rcx], rax
; Line 1851
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAAPEAUS_UNDO@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::~_Uninitialized_backout_al<std::allocator<S_UNDO> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1840
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::~_Uninitialized_backout_al<std::allocator<S_UNDO> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAA@PEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Dest$ = 16
_Al_$ = 24
??0?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAA@PEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Uninitialized_backout_al<std::allocator<S_UNDO> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1833
	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], r8
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@US_UNDO@@@std@@@std@@QEAA@PEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<S_UNDO> >::_Uninitialized_backout_al<std::allocator<S_UNDO> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_memmove@PEAUS_UNDO@@PEAU1@@std@@YAPEAUS_UNDO@@PEAU1@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAUS_UNDO@@PEAU1@@std@@YAPEAUS_UNDO@@PEAU1@00@Z PROC ; std::_Copy_memmove<S_UNDO *,S_UNDO *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 4762
$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; Line 4769
	sub	rbx, rcx
; Line 4751
	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove
; Line 4755
	lea	rax, QWORD PTR [rbx+rdi]
; Line 4771
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAUS_UNDO@@PEAU1@@std@@YAPEAUS_UNDO@@PEAU1@00@Z ENDP ; std::_Copy_memmove<S_UNDO *,S_UNDO *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unfancy@US_UNDO@@@std@@YAPEAUS_UNDO@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@US_UNDO@@@std@@YAPEAUS_UNDO@@PEAU1@@Z PROC	; std::_Unfancy<S_UNDO>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 69
	mov	rax, rcx
; Line 70
	ret	0
??$_Unfancy@US_UNDO@@@std@@YAPEAUS_UNDO@@PEAU1@@Z ENDP	; std::_Unfancy<S_UNDO>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Max_limit@_J@std@@YA_JXZ
_TEXT	SEGMENT
??$_Max_limit@_J@std@@YA_JXZ PROC			; std::_Max_limit<__int64>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; Line 867
	mov	rax, 9223372036854775807		; 7fffffffffffffffH
; Line 871
	ret	0
??$_Max_limit@_J@std@@YA_JXZ ENDP			; std::_Max_limit<__int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninitialized_copy@PEAUS_UNDO@@PEAU1@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@PEAU1@00AEAV?$allocator@US_UNDO@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$ = 72
??$_Uninitialized_copy@PEAUS_UNDO@@PEAU1@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@PEAU1@00AEAV?$allocator@US_UNDO@@@0@@Z PROC ; std::_Uninitialized_copy<S_UNDO *,S_UNDO *,std::allocator<S_UNDO> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1861
$LN20:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 4769
	sub	rbx, rcx
; Line 4751
	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1890
	mov	rax, 3243383573399481603		; 2d02d02d02d02d03H
	imul	rbx
; Line 1906
	mov	rbx, QWORD PTR [rsp+48]
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	imul	rax, rdx, 728				; 000002d8H
	add	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_copy@PEAUS_UNDO@@PEAU1@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@PEAU1@00AEAV?$allocator@US_UNDO@@@0@@Z ENDP ; std::_Uninitialized_copy<S_UNDO *,S_UNDO *,std::allocator<S_UNDO> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$forward@AEBQEAUS_UNDO@@@std@@YAAEBQEAUS_UNDO@@AEBQEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBQEAUS_UNDO@@@std@@YAAEBQEAUS_UNDO@@AEBQEAU1@@Z PROC ; std::forward<S_UNDO * const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1502
	mov	rax, rcx
; Line 1503
	ret	0
??$forward@AEBQEAUS_UNDO@@@std@@YAAEBQEAUS_UNDO@@AEBQEAU1@@Z ENDP ; std::forward<S_UNDO * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Tidy_guard@V?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Tidy_guard@V?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<S_UNDO,std::allocator<S_UNDO> > >::~_Tidy_guard<std::vector<S_UNDO,std::allocator<S_UNDO> > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 87
	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	jne	?_Tidy@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Tidy
; Line 90
	ret	0
??1?$_Tidy_guard@V?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<S_UNDO,std::allocator<S_UNDO> > >::~_Tidy_guard<std::vector<S_UNDO,std::allocator<S_UNDO> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$forward@V?$allocator@US_UNDO@@@std@@@std@@YA$$QEAV?$allocator@US_UNDO@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$allocator@US_UNDO@@@std@@@std@@YA$$QEAV?$allocator@US_UNDO@@@0@AEAV10@@Z PROC ; std::forward<std::allocator<S_UNDO> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; Line 1502
	mov	rax, rcx
; Line 1503
	ret	0
??$forward@V?$allocator@US_UNDO@@@std@@@std@@YA$$QEAV?$allocator@US_UNDO@@@0@AEAV10@@Z ENDP ; std::forward<std::allocator<S_UNDO> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy_range@V?$allocator@US_UNDO@@@std@@@std@@YAXPEAUS_UNDO@@QEAU1@AEAV?$allocator@US_UNDO@@@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Al$ = 24
??$_Destroy_range@V?$allocator@US_UNDO@@@std@@@std@@YAXPEAUS_UNDO@@QEAU1@AEAV?$allocator@US_UNDO@@@0@@Z PROC ; std::_Destroy_range<std::allocator<S_UNDO> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1106
	ret	0
??$_Destroy_range@V?$allocator@US_UNDO@@@std@@@std@@YAXPEAUS_UNDO@@QEAU1@AEAV?$allocator@US_UNDO@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<S_UNDO> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate_at_least_helper@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@0@AEA_K@Z
_TEXT	SEGMENT
_Al$ = 48
_Count$ = 56
??$_Allocate_at_least_helper@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@0@AEA_K@Z PROC ; std::_Allocate_at_least_helper<std::allocator<S_UNDO> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 2294
$LN13:
	sub	rsp, 40					; 00000028H
; Line 2303
	mov	rax, QWORD PTR [rdx]
; Line 117
	mov	rcx, 25338934167183450			; 005a05a05a05a05aH
	cmp	rax, rcx
	ja	SHORT $LN12@Allocate_a
; Line 122
	imul	rcx, rax, 728				; 000002d8H
; Line 2305
	add	rsp, 40					; 00000028H
; Line 990
	jmp	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
$LN12@Allocate_a:
; Line 118
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN10@Allocate_a:
??$_Allocate_at_least_helper@V?$allocator@US_UNDO@@@std@@@std@@YAPEAUS_UNDO@@AEAV?$allocator@US_UNDO@@@0@AEA_K@Z ENDP ; std::_Allocate_at_least_helper<std::allocator<S_UNDO> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Construct_n@AEBQEAUS_UNDO@@AEBQEAU1@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBQEAUS_UNDO@@1@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
<_Val_0>$ = 64
<_Val_1>$ = 72
??$_Construct_n@AEBQEAUS_UNDO@@AEBQEAU1@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBQEAUS_UNDO@@1@Z PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Construct_n<S_UNDO * const &,S_UNDO * const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2102
$LN50:
; Line 2111
	test	rdx, rdx
	je	$LN46@Construct_
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], r14
	push	r15
	sub	rsp, 32					; 00000020H
; Line 2051
	mov	rax, 25338934167183450			; 005a05a05a05a05aH
; Line 2102
	mov	r14, r9
	mov	r15, r8
	mov	rsi, rcx
; Line 2051
	cmp	rdx, rax
	ja	$LN48@Construct_
	mov	QWORD PTR [rsp+48], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 122
	imul	rbx, rdx, 728				; 000002d8H
	mov	QWORD PTR [rsp+56], rdi
; Line 990
	mov	rcx, rbx
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2035
	mov	QWORD PTR [rsi], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	mov	rdi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2036
	mov	QWORD PTR [rsi+8], rax
; Line 2037
	lea	rcx, QWORD PTR [rbx+rax]
	mov	QWORD PTR [rsi+16], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 4751
	mov	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1876
	mov	rdx, QWORD PTR [r15]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 4769
	mov	rbx, QWORD PTR [r14]
	sub	rbx, rdx
; Line 4751
	mov	r8, rbx
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2129
	mov	r14, QWORD PTR [rsp+72]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1890
	mov	rax, 3243383573399481603		; 2d02d02d02d02d03H
	imul	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2120
	mov	rbx, QWORD PTR [rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1890
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	imul	rax, rdx, 728				; 000002d8H
	add	rax, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2120
	mov	rdi, QWORD PTR [rsp+56]
	mov	QWORD PTR [rsi+8], rax
; Line 2129
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	r15
$LN46@Construct_:
	ret	0
$LN48@Construct_:
; Line 2052
	call	?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Xlength
	int	3
$LN45@Construct_:
??$_Construct_n@AEBQEAUS_UNDO@@AEBQEAU1@@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_KAEBQEAUS_UNDO@@1@Z ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Construct_n<S_UNDO * const &,S_UNDO * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$?0V?$allocator@US_UNDO@@@std@@$$V@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@US_UNDO@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
_Val1$ = 24
??$?0V?$allocator@US_UNDO@@@std@@$$V@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@US_UNDO@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1>::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1><std::allocator<S_UNDO> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 400
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1536
	mov	rax, rcx
	ret	0
??$?0V?$allocator@US_UNDO@@@std@@$$V@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@US_UNDO@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1>::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1><std::allocator<S_UNDO> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$min@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$min@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::min<unsigned __int64>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; Line 101
	mov	rax, QWORD PTR [rcx]
	cmp	QWORD PTR [rdx], rax
	cmovb	rcx, rdx
	mov	rax, rcx
; Line 102
	ret	0
??$min@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::min<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$min@H@std@@YAAEBHAEBH0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$min@H@std@@YAAEBHAEBH0@Z PROC			; std::min<int>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; Line 101
	mov	eax, DWORD PTR [rcx]
	cmp	DWORD PTR [rdx], eax
	cmovl	rcx, rdx
	mov	rax, rcx
; Line 102
	ret	0
??$min@H@std@@YAAEBHAEBH0@Z ENDP			; std::min<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$max@H@std@@YAAEBHAEBH0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$max@H@std@@YAAEBHAEBH0@Z PROC			; std::max<int>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; Line 77
	mov	eax, DWORD PTR [rdx]
	cmp	DWORD PTR [rcx], eax
	cmovl	rcx, rdx
	mov	rax, rcx
; Line 78
	ret	0
??$max@H@std@@YAAEBHAEBH0@Z ENDP			; std::max<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0S_MOVELIST@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0S_MOVELIST@@QEAA@XZ PROC				; S_MOVELIST::S_MOVELIST, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 20
	mov	rax, rcx
	mov	edx, 256				; 00000100H
	xor	r8d, r8d
	npad	5
$LL15@S_MOVELIST:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	mov	QWORD PTR [rax], r8
	lea	rax, QWORD PTR [rax+8]
	sub	rdx, 1
	jne	SHORT $LL15@S_MOVELIST
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 20
	mov	DWORD PTR [rcx+2048], r8d
	mov	rax, rcx
	ret	0
??0S_MOVELIST@@QEAA@XZ ENDP				; S_MOVELIST::S_MOVELIST
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?count_developed_pieces@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4Color@@@Z
_TEXT	SEGMENT
pos$ = 8
color$ = 16
?count_developed_pieces@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4Color@@@Z PROC ; Engine3::HybridEvaluator::count_developed_pieces, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 218
	mov	r8, rcx
; Line 221
	xor	ecx, ecx
	test	dl, dl
	jne	SHORT $LN2@count_deve
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	cmp	BYTE PTR [r8+22], 2
	setne	cl
	cmp	BYTE PTR [r8+27], 2
	lea	eax, DWORD PTR [rcx+1]
	cmove	eax, ecx
	cmp	BYTE PTR [r8+23], 3
	lea	ecx, DWORD PTR [rax+1]
	cmove	ecx, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 229
	cmp	BYTE PTR [r8+26], 3
	lea	eax, DWORD PTR [rcx+1]
	cmove	eax, ecx
; Line 240
	ret	0
$LN2@count_deve:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	cmp	BYTE PTR [r8+92], 10
	setne	cl
	cmp	BYTE PTR [r8+97], 10
	lea	eax, DWORD PTR [rcx+1]
	cmove	eax, ecx
	cmp	BYTE PTR [r8+93], 11
	lea	ecx, DWORD PTR [rax+1]
	cmove	ecx, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 236
	cmp	BYTE PTR [r8+96], 11
	lea	eax, DWORD PTR [rcx+1]
	jne	SHORT $LN11@count_deve
; Line 239
	mov	eax, ecx
$LN11@count_deve:
; Line 240
	ret	0
?count_developed_pieces@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4Color@@@Z ENDP ; Engine3::HybridEvaluator::count_developed_pieces
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?is_open_file@HybridEvaluator@Engine3@@CA_NAEBVPosition@@H@Z
_TEXT	SEGMENT
pos$ = 8
file$ = 16
?is_open_file@HybridEvaluator@Engine3@@CA_NAEBVPosition@@H@Z PROC ; Engine3::HybridEvaluator::is_open_file, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 205
	cmp	edx, 7
	ja	SHORT $LN6@is_open_fi
	xor	eax, eax
	movsxd	rdx, edx
	add	rcx, 21
	add	rcx, rdx
$LL4@is_open_fi:
; Line 209
	movzx	edx, BYTE PTR [rcx]
	cmp	dl, 1
	je	SHORT $LN6@is_open_fi
	cmp	dl, 9
	je	SHORT $LN6@is_open_fi
; Line 207
	inc	rax
	add	rcx, 10
	cmp	rax, 7
	jle	SHORT $LL4@is_open_fi
; Line 214
	mov	al, 1
; Line 215
	ret	0
$LN6@is_open_fi:
; Line 205
	xor	al, al
; Line 215
	ret	0
?is_open_file@HybridEvaluator@Engine3@@CA_NAEBVPosition@@H@Z ENDP ; Engine3::HybridEvaluator::is_open_file
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?is_knight_outpost@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z
_TEXT	SEGMENT
pos$ = 8
sq120$ = 16
color$ = 24
?is_knight_outpost@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z PROC ; Engine3::HybridEvaluator::is_knight_outpost, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 144
	mov	r9d, edx
; Line 145
	mov	eax, 1717986919				; 66666667H
	imul	edx
	mov	r10, rcx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31
	add	edx, eax
	lea	eax, DWORD PTR [rdx+rdx*4]
; Line 146
	add	edx, -2
	add	eax, eax
	sub	r9d, eax
	dec	r9d
; Line 148
	cmp	r9d, 7
	ja	$LN3@is_knight_
	cmp	edx, 7
	ja	$LN3@is_knight_
; Line 150
	test	r8b, r8b
	jne	$LN4@is_knight_
; Line 151
	cmp	edx, 3
	jl	$LN3@is_knight_
; Line 154
	test	r9d, r9d
	jle	SHORT $LN8@is_knight_
; Line 155
	lea	eax, DWORD PTR [rdx+3]
	lea	ecx, DWORD PTR [rax+rax*4]
	lea	eax, DWORD PTR [r9+rcx*2]
; Line 156
	movsxd	rcx, eax
	cmp	BYTE PTR [rcx+r10], 9
	je	$LN3@is_knight_
$LN8@is_knight_:
; Line 158
	mov	r11d, 1
	cmp	r9d, 7
	jge	SHORT $LN52@is_knight_
; Line 159
	lea	eax, DWORD PTR [rdx+rdx*4]
	lea	eax, DWORD PTR [r9+rax*2]
; Line 160
	cdqe
	cmp	BYTE PTR [rax+r10+32], 9
	je	$LN3@is_knight_
; Line 164
	xor	r8b, r8b
; Line 165
	test	r9d, r9d
	jle	SHORT $LN64@is_knight_
	jmp	SHORT $LN57@is_knight_
$LN52@is_knight_:
	xor	r8b, r8b
$LN57@is_knight_:
; Line 166
	lea	eax, DWORD PTR [rdx+rdx*4]
; Line 167
	movzx	r8d, r8b
	lea	eax, DWORD PTR [r9+rax*2]
	cdqe
	cmp	BYTE PTR [rax+r10+10], r11b
	cmove	r8d, r11d
; Line 169
	cmp	r9d, 7
	jge	SHORT $LN14@is_knight_
$LN64@is_knight_:
; Line 170
	lea	eax, DWORD PTR [rdx+rdx*4]
; Line 171
	movzx	r8d, r8b
	lea	eax, DWORD PTR [r9+rax*2]
	cdqe
	cmp	BYTE PTR [rax+r10+12], r11b
	cmove	r8d, r11d
$LN14@is_knight_:
; Line 174
	movzx	eax, r8b
; Line 201
	ret	0
$LN4@is_knight_:
; Line 176
	cmp	edx, 4
	jg	SHORT $LN3@is_knight_
; Line 179
	mov	r11d, 1
	test	r9d, r9d
	jle	SHORT $LN56@is_knight_
; Line 180
	lea	eax, DWORD PTR [rdx+rdx*4]
	lea	eax, DWORD PTR [r9+rax*2]
; Line 181
	cdqe
	cmp	BYTE PTR [rax+rcx+10], r11b
	je	SHORT $LN3@is_knight_
; Line 183
	cmp	r9d, 7
	jl	SHORT $LN56@is_knight_
	xor	r8b, r8b
	jmp	SHORT $LN55@is_knight_
$LN56@is_knight_:
; Line 184
	lea	eax, DWORD PTR [rdx+rdx*4]
	lea	eax, DWORD PTR [r9+rax*2]
; Line 185
	cdqe
	cmp	BYTE PTR [rax+rcx+12], r11b
	je	SHORT $LN3@is_knight_
; Line 189
	xor	r8b, r8b
; Line 190
	test	r9d, r9d
	jle	SHORT $LN21@is_knight_
$LN55@is_knight_:
; Line 191
	lea	eax, DWORD PTR [rdx+3]
; Line 192
	movzx	r8d, r8b
	lea	ecx, DWORD PTR [rax+rax*4]
	lea	eax, DWORD PTR [r9+rcx*2]
	movsxd	rcx, eax
	cmp	BYTE PTR [rcx+r10], 9
	cmove	r8d, r11d
$LN21@is_knight_:
; Line 194
	cmp	r9d, 7
	jge	SHORT $LN23@is_knight_
; Line 195
	lea	eax, DWORD PTR [rdx+rdx*4]
; Line 196
	movzx	r8d, r8b
	lea	eax, DWORD PTR [r9+rax*2]
	cdqe
	cmp	BYTE PTR [rax+r10+32], 9
	cmove	r8d, r11d
$LN23@is_knight_:
; Line 199
	movzx	eax, r8b
; Line 201
	ret	0
$LN3@is_knight_:
; Line 148
	xor	al, al
; Line 201
	ret	0
?is_knight_outpost@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z ENDP ; Engine3::HybridEvaluator::is_knight_outpost
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?is_doubled_pawn@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z
_TEXT	SEGMENT
pos$ = 8
sq120$ = 16
color$ = 24
?is_doubled_pawn@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z PROC ; Engine3::HybridEvaluator::is_doubled_pawn, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 123
	mov	r9d, edx
; Line 124
	mov	eax, 1717986919				; 66666667H
	imul	edx
	mov	r10, rcx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31
	add	edx, eax
	lea	eax, DWORD PTR [rdx+rdx*4]
; Line 125
	add	edx, -2
	add	eax, eax
	sub	r9d, eax
	lea	eax, DWORD PTR [r9-1]
; Line 127
	cmp	eax, 7
	ja	SHORT $LN6@is_doubled
	cmp	edx, 7
	ja	SHORT $LN6@is_doubled
; Line 129
	test	r8b, r8b
	mov	ecx, 1
; Line 135
	movsxd	r8, eax
	mov	r9d, 9
	cmove	r9d, ecx
	xor	eax, eax
	cmp	BYTE PTR [r8+r10+21], r9b
	sete	al
	cmp	BYTE PTR [r8+r10+31], r9b
	lea	ecx, DWORD PTR [rax+1]
	cmovne	ecx, eax
	cmp	BYTE PTR [r8+r10+41], r9b
	lea	eax, DWORD PTR [rcx+1]
	cmovne	eax, ecx
	cmp	BYTE PTR [r8+r10+51], r9b
	lea	ecx, DWORD PTR [rax+1]
	cmovne	ecx, eax
	cmp	BYTE PTR [r8+r10+61], r9b
	lea	eax, DWORD PTR [rcx+1]
	cmovne	eax, ecx
	cmp	BYTE PTR [r8+r10+71], r9b
	lea	ecx, DWORD PTR [rax+1]
	cmovne	ecx, eax
	cmp	BYTE PTR [r8+r10+81], r9b
	lea	edx, DWORD PTR [rcx+1]
	cmovne	edx, ecx
	cmp	BYTE PTR [r8+r10+91], r9b
	lea	eax, DWORD PTR [rdx+1]
	cmovne	eax, edx
; Line 140
	cmp	eax, 1
	seta	al
; Line 141
	ret	0
$LN6@is_doubled:
; Line 127
	xor	al, al
; Line 141
	ret	0
?is_doubled_pawn@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z ENDP ; Engine3::HybridEvaluator::is_doubled_pawn
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?is_isolated_pawn@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z
_TEXT	SEGMENT
pos$ = 8
sq120$ = 16
color$ = 24
?is_isolated_pawn@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z PROC ; Engine3::HybridEvaluator::is_isolated_pawn, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 92
	mov	r10d, edx
; Line 93
	mov	eax, 1717986919				; 66666667H
	imul	edx
	movzx	r11d, r8b
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31
	add	edx, eax
	lea	eax, DWORD PTR [rdx+rdx*4]
	add	eax, eax
	sub	r10d, eax
	dec	r10d
; Line 95
	cmp	r10d, 7
	ja	SHORT $LN9@is_isolate
; Line 97
	test	r11b, r11b
	movsxd	r9, r10d
	mov	eax, 1
	mov	r8d, 9
	cmove	r8d, eax
	add	r9, rcx
; Line 100
	xor	eax, eax
	test	r10d, r10d
	jle	SHORT $LN33@is_isolate
	mov	edx, eax
	lea	rcx, QWORD PTR [r9+20]
	npad	2
$LL4@is_isolate:
; Line 103
	cmp	BYTE PTR [rcx], r8b
	je	SHORT $LN9@is_isolate
; Line 101
	inc	rdx
	add	rcx, 10
	cmp	rdx, 7
	jle	SHORT $LL4@is_isolate
; Line 110
	cmp	r10d, 7
	jge	SHORT $LN6@is_isolate
$LN33@is_isolate:
	lea	rcx, QWORD PTR [r9+22]
	npad	4
$LL7@is_isolate:
; Line 113
	cmp	BYTE PTR [rcx], r8b
	je	SHORT $LN9@is_isolate
; Line 111
	inc	rax
	add	rcx, 10
	cmp	rax, 7
	jle	SHORT $LL7@is_isolate
$LN6@is_isolate:
; Line 119
	mov	al, 1
; Line 120
	ret	0
$LN9@is_isolate:
; Line 95
	xor	al, al
; Line 120
	ret	0
?is_isolated_pawn@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z ENDP ; Engine3::HybridEvaluator::is_isolated_pawn
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?is_passed_pawn@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z
_TEXT	SEGMENT
pos$ = 8
sq120$ = 16
color$ = 24
?is_passed_pawn@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z PROC ; Engine3::HybridEvaluator::is_passed_pawn, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 56
	mov	r10d, edx
; Line 57
	mov	eax, 1717986919				; 66666667H
	imul	edx
	mov	r11, rcx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31
	add	edx, eax
	lea	eax, DWORD PTR [rdx+rdx*4]
	add	eax, eax
	sub	r10d, eax
; Line 58
	lea	eax, DWORD PTR [rdx-2]
	lea	ecx, DWORD PTR [r10-1]
; Line 60
	cmp	ecx, 7
	ja	$LN15@is_passed_
	cmp	eax, 7
	ja	$LN15@is_passed_
; Line 63
	xor	eax, eax
	dec	ecx
	test	ecx, ecx
	cmovg	eax, ecx
; Line 64
	movsxd	r9, eax
	mov	eax, 7
	cmp	r10d, eax
	cmovl	eax, r10d
	movsxd	rcx, eax
; Line 66
	test	r8b, r8b
	jne	SHORT $LN16@is_passed_
; Line 68
	dec	edx
	cmp	edx, 7
	jg	SHORT $LN44@is_passed_
	movsxd	r8, edx
	lea	rdx, QWORD PTR [r11+21]
	lea	rax, QWORD PTR [r8+r8*4]
	lea	rdx, QWORD PTR [rdx+rax*2]
	npad	2
$LL4@is_passed_:
; Line 69
	mov	rax, r9
	cmp	r9, rcx
	jg	SHORT $LN2@is_passed_
$LL7@is_passed_:
; Line 71
	cmp	BYTE PTR [rdx+rax], 9
	je	SHORT $LN15@is_passed_
; Line 69
	inc	rax
	cmp	rax, rcx
	jle	SHORT $LL7@is_passed_
$LN2@is_passed_:
; Line 68
	inc	r8
	add	rdx, 10
	cmp	r8, 7
	jle	SHORT $LL4@is_passed_
; Line 88
	mov	al, 1
; Line 89
	ret	0
$LN16@is_passed_:
; Line 78
	add	edx, -3
	js	SHORT $LN44@is_passed_
	movsxd	r8, edx
	lea	rdx, QWORD PTR [r11+21]
	lea	rax, QWORD PTR [r8+r8*4]
	lea	rdx, QWORD PTR [rdx+rax*2]
	npad	6
$LL10@is_passed_:
; Line 79
	mov	rax, r9
	cmp	r9, rcx
	jg	SHORT $LN8@is_passed_
$LL13@is_passed_:
; Line 81
	cmp	BYTE PTR [rdx+rax], 1
	je	SHORT $LN15@is_passed_
; Line 79
	inc	rax
	cmp	rax, rcx
	jle	SHORT $LL13@is_passed_
$LN8@is_passed_:
; Line 78
	sub	rdx, 10
	sub	r8, 1
	jns	SHORT $LL10@is_passed_
$LN44@is_passed_:
; Line 88
	mov	al, 1
; Line 89
	ret	0
$LN15@is_passed_:
; Line 60
	xor	al, al
; Line 89
	ret	0
?is_passed_pawn@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z ENDP ; Engine3::HybridEvaluator::is_passed_pawn
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?evaluate_mobility@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z
_TEXT	SEGMENT
temp_pos$ = 32
moves$ = 896
__$ArrayPad$ = 2960
pos$ = 3008
phase$ = 3016
?evaluate_mobility@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z PROC ; Engine3::HybridEvaluator::evaluate_mobility, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 442
$LN37:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 2976				; 00000ba0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbp, rcx
; Line 443
	mov	esi, 5
	mov	ebx, 2
	cmp	edx, ebx
	cmove	esi, ebx
; Line 447
	mov	rdx, rcx
	lea	rcx, QWORD PTR temp_pos$[rsp]
	call	??0Position@@QEAA@AEBV0@@Z
	npad	1
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 20
	lea	rax, QWORD PTR moves$[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 442
	mov	ecx, 256				; 00000100H
	xor	r14d, r14d
	npad	9
$LL32@evaluate_m:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	mov	QWORD PTR [rax], r14
	lea	rax, QWORD PTR [rax+8]
	sub	rcx, 1
	jne	SHORT $LL32@evaluate_m
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 20
	mov	DWORD PTR moves$[rsp+2048], r14d
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 449
	lea	rdx, QWORD PTR moves$[rsp]
	lea	rcx, QWORD PTR temp_pos$[rsp]
	call	?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z ; generate_legal_moves_enhanced
; Line 450
	mov	edi, DWORD PTR moves$[rsp+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	movzx	eax, BYTE PTR temp_pos$[rsp+120]
	test	al, al
	jne	SHORT $LN18@evaluate_m
	mov	bl, 1
	jmp	SHORT $LN19@evaluate_m
$LN18@evaluate_m:
	cmp	al, 1
	cmove	ebx, r14d
$LN19@evaluate_m:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 453
	mov	BYTE PTR temp_pos$[rsp+120], bl
; Line 454
	lea	rdx, QWORD PTR moves$[rsp]
	lea	rcx, QWORD PTR temp_pos$[rsp]
	call	?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z ; generate_legal_moves_enhanced
	sub	edi, DWORD PTR moves$[rsp+2048]
; Line 458
	movzx	ebx, BYTE PTR [rbp+120]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 830
	lea	rcx, QWORD PTR temp_pos$[rsp+832]
	call	?_Tidy@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Tidy
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 458
	mov	ecx, edi
	neg	ecx
	test	bl, bl
	cmovne	edi, ecx
	imul	edi, esi
	mov	eax, edi
; Line 459
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+2976]
	mov	rbx, QWORD PTR [r11+40]
	mov	rbp, QWORD PTR [r11+48]
	mov	rsp, r11
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
?evaluate_mobility@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z ENDP ; Engine3::HybridEvaluator::evaluate_mobility
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
temp_pos$ = 32
moves$ = 896
__$ArrayPad$ = 2960
pos$ = 3008
phase$ = 3016
?dtor$0@?0??evaluate_mobility@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z@4HA PROC ; `Engine3::HybridEvaluator::evaluate_mobility'::`1'::dtor$0
	lea	rcx, QWORD PTR temp_pos$[rdx]
	jmp	??1Position@@QEAA@XZ
?dtor$0@?0??evaluate_mobility@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z@4HA ENDP ; `Engine3::HybridEvaluator::evaluate_mobility'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?evaluate_development@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z
_TEXT	SEGMENT
pos$ = 8
phase$ = 16
?evaluate_development@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z PROC ; Engine3::HybridEvaluator::evaluate_development, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 462
	mov	r9d, edx
	mov	r10, rcx
; Line 463
	cmp	edx, 2
	jne	SHORT $LN2@evaluate_d
	xor	eax, eax
; Line 472
	ret	0
$LN2@evaluate_d:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	xor	edx, edx
	cmp	BYTE PTR [rcx+22], 2
	mov	eax, edx
	setne	al
	cmp	BYTE PTR [r10+27], 2
	lea	ecx, DWORD PTR [rax+1]
	cmove	ecx, eax
	cmp	BYTE PTR [r10+23], 3
	lea	r8d, DWORD PTR [rcx+1]
	cmove	r8d, ecx
	cmp	BYTE PTR [r10+92], 10
	setne	dl
	cmp	BYTE PTR [r10+97], 10
	lea	eax, DWORD PTR [rdx+1]
	cmove	eax, edx
	cmp	BYTE PTR [r10+93], 11
	lea	ecx, DWORD PTR [rax+1]
	cmove	ecx, eax
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 471
	cmp	BYTE PTR [r10+96], 11
; Line 219
	lea	eax, DWORD PTR [r8+1]
; Line 471
	lea	edx, DWORD PTR [rcx+1]
	cmove	edx, ecx
; Line 219
	cmp	BYTE PTR [r10+26], 3
; Line 465
	mov	ecx, 15
; Line 219
	cmove	eax, r8d
; Line 471
	sub	eax, edx
	mov	edx, 20
	test	r9d, r9d
	cmove	ecx, edx
	imul	eax, ecx
; Line 472
	ret	0
?evaluate_development@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z ENDP ; Engine3::HybridEvaluator::evaluate_development
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?evaluate_king_safety@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z
_TEXT	SEGMENT
pos$ = 8
phase$ = 16
?evaluate_king_safety@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z PROC ; Engine3::HybridEvaluator::evaluate_king_safety, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 475
	mov	r8, rcx
; Line 476
	cmp	edx, 2
	jne	SHORT $LN2@evaluate_k
	xor	eax, eax
; Line 509
	ret	0
$LN2@evaluate_k:
; Line 481
	mov	edx, DWORD PTR [r8+136]
	xor	ecx, ecx
; Line 482
	test	edx, edx
	js	SHORT $LN6@evaluate_k
; Line 484
	lea	eax, DWORD PTR [rdx-23]
	test	eax, -5					; fffffffbH
	jne	SHORT $LN4@evaluate_k
; Line 488
	mov	ecx, 40					; 00000028H
	jmp	SHORT $LN6@evaluate_k
$LN4@evaluate_k:
; Line 485
	cmp	edx, 25
; Line 489
	jne	SHORT $LN6@evaluate_k
	test	BYTE PTR [r8+128], 3
	mov	eax, -20
	cmove	ecx, eax
$LN6@evaluate_k:
; Line 495
	mov	edx, DWORD PTR [r8+140]
; Line 496
	test	edx, edx
	js	SHORT $LN10@evaluate_k
; Line 498
	lea	eax, DWORD PTR [rdx-93]
	test	eax, -5					; fffffffbH
	jne	SHORT $LN8@evaluate_k
; Line 502
	sub	ecx, 40					; 00000028H
; Line 508
	mov	eax, ecx
; Line 509
	ret	0
$LN8@evaluate_k:
; Line 499
	cmp	edx, 95					; 0000005fH
; Line 503
	jne	SHORT $LN10@evaluate_k
	test	BYTE PTR [r8+128], 12
	jne	SHORT $LN10@evaluate_k
; Line 504
	add	ecx, 20
$LN10@evaluate_k:
; Line 508
	mov	eax, ecx
; Line 509
	ret	0
?evaluate_king_safety@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z ENDP ; Engine3::HybridEvaluator::evaluate_king_safety
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?evaluate_piece_activity@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z
_TEXT	SEGMENT
pos$ = 64
phase$ = 72
?evaluate_piece_activity@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z PROC ; Engine3::HybridEvaluator::evaluate_piece_activity, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 389
$LN100:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
; Line 390
	xor	esi, esi
; Line 391
	lea	r12, OFFSET FLAT:__ImageBase
	xor	r14d, r14d
	xor	r15d, r15d
; Line 393
	xor	ebx, ebx
	mov	rbp, rcx
	mov	rdi, rcx
	npad	11
$LL4@evaluate_p:
; Line 394
	movzx	r8d, BYTE PTR [rdi]
; Line 395
	test	r8b, r8b
	je	$LN2@evaluate_p
; Line 10
	lea	eax, DWORD PTR [rbx-21]
	cmp	eax, 77					; 0000004dH
	ja	$LN2@evaluate_p
; Line 12
	mov	eax, -858993459				; cccccccdH
	mul	ebx
	mov	eax, ebx
	shr	edx, 3
	lea	ecx, DWORD PTR [rdx+rdx*4]
; Line 13
	add	edx, -2
	add	ecx, ecx
	sub	eax, ecx
	dec	eax
; Line 15
	cmp	eax, 7
	ja	$LN2@evaluate_p
	cmp	edx, 7
	ja	$LN2@evaluate_p
; Line 17
	lea	edx, DWORD PTR [rax+rdx*8]
; Line 398
	test	edx, edx
	js	$LN2@evaluate_p
; Line 400
	and	edx, -2147483641			; ffffffff80000007H
	jge	SHORT $LN81@evaluate_p
	dec	edx
	or	edx, -8
	inc	edx
$LN81@evaluate_p:
; Line 402
	mov	eax, r8d
	add	eax, -2					; fffffffeH
	cmp	eax, 10
	ja	$LN2@evaluate_p
	cdqe
	mov	ecx, DWORD PTR $LN80@evaluate_p[r12+rax*4]
	add	rcx, r12
	jmp	rcx
$LN9@evaluate_p:
; Line 404
	xor	r8d, r8d
	mov	edx, ebx
	mov	rcx, rbp
	call	?is_knight_outpost@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z ; Engine3::HybridEvaluator::is_knight_outpost
; Line 407
	lea	ecx, DWORD PTR [rsi+25]
	test	al, al
	cmove	ecx, esi
	mov	esi, ecx
	jmp	$LN2@evaluate_p
$LN11@evaluate_p:
; Line 409
	mov	r8b, 1
	mov	edx, ebx
	mov	rcx, rbp
	call	?is_knight_outpost@HybridEvaluator@Engine3@@CA_NAEBVPosition@@HW4Color@@@Z ; Engine3::HybridEvaluator::is_knight_outpost
; Line 412
	lea	ecx, DWORD PTR [rsi-25]
	test	al, al
	cmove	ecx, esi
	mov	esi, ecx
	jmp	$LN2@evaluate_p
$LN13@evaluate_p:
; Line 414
	inc	r14d
; Line 415
	jmp	SHORT $LN2@evaluate_p
$LN14@evaluate_p:
; Line 417
	inc	r15d
; Line 418
	jmp	SHORT $LN2@evaluate_p
$LN15@evaluate_p:
; Line 205
	cmp	edx, 7
	ja	SHORT $LN37@evaluate_p
	movsxd	rdx, edx
	xor	ecx, ecx
	add	rdx, 21
	add	rdx, rbp
	npad	2
$LL35@evaluate_p:
; Line 209
	movzx	eax, BYTE PTR [rdx]
	cmp	al, 1
	je	SHORT $LN37@evaluate_p
	cmp	al, 9
	je	SHORT $LN37@evaluate_p
; Line 207
	inc	rcx
	add	rdx, 10
	cmp	rcx, 7
	jle	SHORT $LL35@evaluate_p
; Line 423
	lea	eax, DWORD PTR [rsi+15]
; Line 214
	mov	cl, 1
; Line 423
	test	cl, cl
	cmove	eax, esi
	mov	esi, eax
	jmp	SHORT $LN2@evaluate_p
$LN37@evaluate_p:
	lea	eax, DWORD PTR [rsi+15]
	xor	cl, cl
	test	cl, cl
	cmove	eax, esi
	mov	esi, eax
	jmp	SHORT $LN2@evaluate_p
$LN17@evaluate_p:
; Line 205
	cmp	edx, 7
	ja	SHORT $LN2@evaluate_p
	movsxd	rdx, edx
	xor	eax, eax
	add	rdx, 21
	add	rdx, rbp
$LL50@evaluate_p:
; Line 209
	movzx	ecx, BYTE PTR [rdx]
	cmp	cl, 1
	je	SHORT $LN2@evaluate_p
	cmp	cl, 9
	je	SHORT $LN2@evaluate_p
; Line 207
	inc	rax
	add	rdx, 10
	cmp	rax, 7
	jle	SHORT $LL50@evaluate_p
; Line 426
	sub	esi, 15
$LN2@evaluate_p:
; Line 393
	inc	ebx
	inc	rdi
	cmp	ebx, 120				; 00000078H
	jl	$LL4@evaluate_p
; Line 439
	mov	rbx, QWORD PTR [rsp+64]
	lea	ecx, DWORD PTR [rsi+50]
	mov	rbp, QWORD PTR [rsp+72]
	cmp	r14d, 2
	mov	rdi, QWORD PTR [rsp+88]
	cmovl	ecx, esi
	mov	rsi, QWORD PTR [rsp+80]
	cmp	r15d, 2
	lea	eax, DWORD PTR [rcx-50]
	cmovl	eax, ecx
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	r12
	ret	0
	npad	1
$LN80@evaluate_p:
	DD	$LN9@evaluate_p
	DD	$LN13@evaluate_p
	DD	$LN15@evaluate_p
	DD	$LN2@evaluate_p
	DD	$LN2@evaluate_p
	DD	$LN2@evaluate_p
	DD	$LN2@evaluate_p
	DD	$LN2@evaluate_p
	DD	$LN11@evaluate_p
	DD	$LN14@evaluate_p
	DD	$LN17@evaluate_p
?evaluate_piece_activity@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z ENDP ; Engine3::HybridEvaluator::evaluate_piece_activity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?evaluate_pawn_structure@HybridEvaluator@Engine3@@CAHAEBVPosition@@@Z
_TEXT	SEGMENT
white_file_counts$ = 0
black_file_counts$ = 32
__$ArrayPad$ = 64
pos$ = 112
?evaluate_pawn_structure@HybridEvaluator@Engine3@@CAHAEBVPosition@@@Z PROC ; Engine3::HybridEvaluator::evaluate_pawn_structure, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 320
$LN297:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	push	rbp
	push	r14
	push	r15
	mov	rbp, rsp
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-80], rax
	xorps	xmm0, xmm0
; Line 322
	lea	r15, OFFSET FLAT:?PASSED_PAWN_BONUS@EvalParams@Engine3@@3V?$array@H$07@std@@B ; Engine3::EvalParams::PASSED_PAWN_BONUS
	xorps	xmm1, xmm1
	xor	r8d, r8d
	movups	XMMWORD PTR white_file_counts$[rbp-80], xmm0
; Line 334
	xor	edi, edi
	mov	r14, rcx
	movups	XMMWORD PTR white_file_counts$[rbp-64], xmm0
	mov	rsi, rcx
	movups	XMMWORD PTR black_file_counts$[rbp-80], xmm1
	movups	XMMWORD PTR black_file_counts$[rbp-64], xmm1
$LL4@evaluate_p:
; Line 328
	movzx	r10d, BYTE PTR [rsi]
	cmp	r10b, 1
	je	SHORT $LN8@evaluate_p
	cmp	r10b, 9
	jne	$LN2@evaluate_p
$LN8@evaluate_p:
; Line 10
	lea	eax, DWORD PTR [rdi-21]
	cmp	eax, 77					; 0000004dH
	ja	$LN2@evaluate_p
; Line 12
	mov	eax, -858993459				; cccccccdH
	mov	r9d, edi
	mul	edi
	shr	edx, 3
	lea	eax, DWORD PTR [rdx+rdx*4]
	add	eax, eax
; Line 13
	lea	r11d, DWORD PTR [rdx-2]
	sub	r9d, eax
	lea	ecx, DWORD PTR [r9-1]
; Line 15
	cmp	ecx, 7
	ja	$LN2@evaluate_p
	cmp	r11d, 7
	ja	$LN2@evaluate_p
; Line 17
	lea	eax, DWORD PTR [rcx+r11*8]
; Line 331
	test	eax, eax
	js	$LN2@evaluate_p
; Line 334
	cdq
	and	edx, 7
	add	eax, edx
	mov	ebx, eax
	and	eax, 7
	sub	eax, edx
	sar	ebx, 3
	movsxd	rdx, eax
	shl	rdx, 2
; Line 336
	cmp	r10b, 1
	jne	SHORT $LN10@evaluate_p
; Line 337
	inc	DWORD PTR white_file_counts$[rbp+rdx-80]
; Line 60
	test	ecx, ecx
	js	$LN2@evaluate_p
	cmp	ecx, 7
	jg	$LN2@evaluate_p
; Line 63
	dec	ecx
; Line 64
	mov	eax, 7
; Line 68
	inc	r11d
	cmp	r9d, eax
	cmovl	eax, r9d
; Line 69
	movsxd	rdx, eax
	cmp	r11d, 7
	jg	SHORT $LN205@evaluate_p
; Line 63
	xor	eax, eax
	movsxd	r9, r11d
	test	ecx, ecx
	cmovg	eax, ecx
	lea	rcx, QWORD PTR [r14+21]
	movsxd	r10, eax
	lea	rax, QWORD PTR [r9+r9*4]
	lea	rcx, QWORD PTR [rcx+rax*2]
$LL37@evaluate_p:
; Line 69
	mov	rax, r10
	cmp	r10, rdx
	jg	SHORT $LN35@evaluate_p
	npad	6
$LL40@evaluate_p:
; Line 71
	cmp	BYTE PTR [rax+rcx], 9
	je	$LN2@evaluate_p
; Line 69
	inc	rax
	cmp	rax, rdx
	jle	SHORT $LL40@evaluate_p
$LN35@evaluate_p:
; Line 68
	inc	r9
	add	rcx, 10
	cmp	r9, 7
	jle	SHORT $LL37@evaluate_p
$LN205@evaluate_p:
; Line 341
	movsxd	rax, ebx
	add	r8d, DWORD PTR [r15+rax*4]
; Line 343
	jmp	SHORT $LN2@evaluate_p
$LN10@evaluate_p:
; Line 344
	inc	DWORD PTR black_file_counts$[rbp+rdx-80]
; Line 60
	test	ecx, ecx
	js	SHORT $LN2@evaluate_p
	cmp	ecx, 7
	jg	SHORT $LN2@evaluate_p
; Line 63
	dec	ecx
; Line 64
	mov	eax, 7
	cmp	r9d, eax
	cmovl	eax, r9d
; Line 78
	sub	r11d, 1
; Line 79
	movsxd	rdx, eax
	js	SHORT $LN206@evaluate_p
; Line 63
	xor	eax, eax
	movsxd	r9, r11d
	test	ecx, ecx
	cmovg	eax, ecx
	lea	rcx, QWORD PTR [r14+21]
	movsxd	r10, eax
	lea	rax, QWORD PTR [r9+r9*4]
	lea	rcx, QWORD PTR [rcx+rax*2]
$LL78@evaluate_p:
; Line 79
	mov	rax, r10
	cmp	r10, rdx
	jg	SHORT $LN76@evaluate_p
	npad	3
$LL81@evaluate_p:
; Line 81
	cmp	BYTE PTR [rax+rcx], 1
	je	SHORT $LN2@evaluate_p
; Line 79
	inc	rax
	cmp	rax, rdx
	jle	SHORT $LL81@evaluate_p
$LN76@evaluate_p:
; Line 78
	sub	rcx, 10
	sub	r9, 1
	jns	SHORT $LL78@evaluate_p
$LN206@evaluate_p:
; Line 348
	mov	eax, 7
	sub	eax, ebx
	movsxd	rcx, eax
	sub	r8d, DWORD PTR [r15+rcx*4]
$LN2@evaluate_p:
; Line 328
	movzx	r9d, BYTE PTR [rsi+1]
	cmp	r9b, 1
	je	SHORT $LN137@evaluate_p
	cmp	r9b, 9
	jne	$LN157@evaluate_p
$LN137@evaluate_p:
; Line 10
	lea	ecx, DWORD PTR [rdi+1]
	cmp	ecx, 21
	jl	$LN157@evaluate_p
	cmp	ecx, 98					; 00000062H
	jg	$LN157@evaluate_p
; Line 12
	mov	eax, 1717986919				; 66666667H
	imul	ecx
	mov	ecx, edi
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31
	add	edx, eax
	lea	eax, DWORD PTR [rdx+rdx*4]
	add	eax, eax
; Line 13
	lea	r10d, DWORD PTR [rdx-2]
	sub	ecx, eax
; Line 15
	cmp	ecx, 7
	ja	$LN157@evaluate_p
	cmp	r10d, 7
	ja	$LN157@evaluate_p
; Line 17
	lea	eax, DWORD PTR [rcx+r10*8]
; Line 331
	test	eax, eax
	js	$LN157@evaluate_p
; Line 334
	cdq
	and	edx, 7
	add	eax, edx
	mov	ebx, eax
	and	eax, 7
	sub	eax, edx
	sar	ebx, 3
	movsxd	r11, eax
	lea	edx, DWORD PTR [rcx+1]
	shl	r11, 2
; Line 336
	cmp	r9b, 1
	jne	SHORT $LN149@evaluate_p
; Line 337
	inc	DWORD PTR white_file_counts$[rbp+r11-80]
; Line 60
	test	ecx, ecx
	js	$LN157@evaluate_p
	cmp	ecx, 7
	jg	$LN157@evaluate_p
; Line 63
	dec	ecx
; Line 64
	mov	eax, 7
; Line 68
	inc	r10d
	cmp	edx, eax
	cmovl	eax, edx
; Line 69
	movsxd	rdx, eax
	cmp	r10d, 7
	jg	SHORT $LN207@evaluate_p
; Line 63
	xor	eax, eax
	movsxd	r9, r10d
	test	ecx, ecx
	cmovg	eax, ecx
	lea	rcx, QWORD PTR [r14+21]
	movsxd	r10, eax
	lea	rax, QWORD PTR [r9+r9*4]
	lea	rcx, QWORD PTR [rcx+rax*2]
$LL141@evaluate_p:
; Line 69
	mov	rax, r10
	cmp	r10, rdx
	jg	SHORT $LN143@evaluate_p
	npad	4
$LL142@evaluate_p:
; Line 71
	cmp	BYTE PTR [rax+rcx], 9
	je	$LN157@evaluate_p
; Line 69
	inc	rax
	cmp	rax, rdx
	jle	SHORT $LL142@evaluate_p
$LN143@evaluate_p:
; Line 68
	inc	r9
	add	rcx, 10
	cmp	r9, 7
	jle	SHORT $LL141@evaluate_p
$LN207@evaluate_p:
; Line 341
	movsxd	rax, ebx
	add	r8d, DWORD PTR [r15+rax*4]
; Line 343
	jmp	SHORT $LN157@evaluate_p
$LN149@evaluate_p:
; Line 344
	inc	DWORD PTR black_file_counts$[rbp+r11-80]
; Line 60
	test	ecx, ecx
	js	SHORT $LN157@evaluate_p
	cmp	ecx, 7
	jg	SHORT $LN157@evaluate_p
; Line 63
	dec	ecx
; Line 64
	mov	eax, 7
	cmp	edx, eax
	cmovl	eax, edx
; Line 78
	sub	r10d, 1
; Line 79
	movsxd	rdx, eax
	js	SHORT $LN208@evaluate_p
; Line 63
	xor	eax, eax
	movsxd	r9, r10d
	test	ecx, ecx
	cmovg	eax, ecx
	lea	rcx, QWORD PTR [r14+21]
	movsxd	r10, eax
	lea	rax, QWORD PTR [r9+r9*4]
	lea	rcx, QWORD PTR [rcx+rax*2]
$LL150@evaluate_p:
; Line 79
	mov	rax, r10
	cmp	r10, rdx
	jg	SHORT $LN152@evaluate_p
	npad	4
$LL151@evaluate_p:
; Line 81
	cmp	BYTE PTR [rax+rcx], 1
	je	SHORT $LN157@evaluate_p
; Line 79
	inc	rax
	cmp	rax, rdx
	jle	SHORT $LL151@evaluate_p
$LN152@evaluate_p:
; Line 78
	sub	rcx, 10
	sub	r9, 1
	jns	SHORT $LL150@evaluate_p
$LN208@evaluate_p:
; Line 348
	mov	eax, 7
	sub	eax, ebx
	movsxd	rcx, eax
	sub	r8d, DWORD PTR [r15+rcx*4]
$LN157@evaluate_p:
; Line 326
	add	edi, 2
	add	rsi, 2
	cmp	edi, 120				; 00000078H
	jl	$LL4@evaluate_p
; Line 328
	mov	rdx, -4
	mov	r9d, 2
	mov	r14d, 1
	npad	7
$LL126@evaluate_p:
; Line 356
	mov	r10d, DWORD PTR white_file_counts$[rbp+rdx-76]
	cmp	r10d, r14d
	jle	SHORT $LN127@evaluate_p
; Line 357
	lea	ecx, DWORD PTR [r10+r10*4]
	mov	eax, 10
	add	ecx, ecx
	sub	eax, ecx
	add	r8d, eax
$LN127@evaluate_p:
; Line 359
	mov	ebx, DWORD PTR black_file_counts$[rbp+rdx-76]
	cmp	ebx, r14d
	jle	SHORT $LN128@evaluate_p
; Line 360
	lea	eax, DWORD PTR [rbx+rbx*4]
	lea	r8d, DWORD PTR [r8+rax*2]
	add	r8d, -10
$LN128@evaluate_p:
; Line 364
	test	r10d, r10d
	jle	SHORT $LN131@evaluate_p
; Line 365
	xor	al, al
; Line 366
	lea	ecx, DWORD PTR [r9-2]
	test	ecx, ecx
	jle	SHORT $LN129@evaluate_p
	cmp	DWORD PTR white_file_counts$[rbp+rdx-80], 0
	movzx	eax, al
	cmovg	eax, r14d
$LN129@evaluate_p:
; Line 367
	cmp	ecx, 7
	jge	SHORT $LN210@evaluate_p
	cmp	DWORD PTR white_file_counts$[rbp+rdx-72], 0
	jg	SHORT $LN131@evaluate_p
$LN210@evaluate_p:
; Line 369
	test	al, al
	jne	SHORT $LN131@evaluate_p
; Line 370
	imul	eax, r10d, -15
	add	r8d, eax
$LN131@evaluate_p:
; Line 374
	test	ebx, ebx
	jle	SHORT $LN134@evaluate_p
; Line 375
	xor	al, al
; Line 376
	lea	ecx, DWORD PTR [r9-2]
	test	ecx, ecx
	jle	SHORT $LN132@evaluate_p
	cmp	DWORD PTR black_file_counts$[rbp+rdx-80], 0
	movzx	eax, al
	cmovg	eax, r14d
$LN132@evaluate_p:
; Line 377
	cmp	ecx, 7
	jge	SHORT $LN211@evaluate_p
	cmp	DWORD PTR black_file_counts$[rbp+rdx-72], 0
	jg	SHORT $LN134@evaluate_p
$LN211@evaluate_p:
; Line 379
	test	al, al
	jne	SHORT $LN134@evaluate_p
; Line 380
	imul	eax, ebx, 15
	add	r8d, eax
$LN134@evaluate_p:
; Line 356
	mov	r11d, DWORD PTR white_file_counts$[rbp+rdx-72]
	cmp	r11d, r14d
	jle	SHORT $LN159@evaluate_p
; Line 357
	lea	ecx, DWORD PTR [r11+r11*4]
	mov	eax, 10
	add	ecx, ecx
	sub	eax, ecx
	add	r8d, eax
$LN159@evaluate_p:
; Line 359
	mov	esi, DWORD PTR black_file_counts$[rbp+rdx-72]
	cmp	esi, r14d
	jle	SHORT $LN160@evaluate_p
; Line 360
	lea	eax, DWORD PTR [rsi+rsi*4]
	lea	r8d, DWORD PTR [r8+rax*2]
	add	r8d, -10
$LN160@evaluate_p:
; Line 364
	test	r11d, r11d
	jle	SHORT $LN163@evaluate_p
; Line 365
	xor	al, al
; Line 366
	lea	ecx, DWORD PTR [r9-1]
	test	ecx, ecx
	jle	SHORT $LN161@evaluate_p
	test	r10d, r10d
	movzx	eax, al
	cmovg	eax, r14d
$LN161@evaluate_p:
; Line 367
	cmp	ecx, 7
	jge	SHORT $LN212@evaluate_p
	cmp	DWORD PTR white_file_counts$[rbp+rdx-68], 0
	jg	SHORT $LN163@evaluate_p
$LN212@evaluate_p:
; Line 369
	test	al, al
	jne	SHORT $LN163@evaluate_p
; Line 370
	imul	eax, r11d, -15
	add	r8d, eax
$LN163@evaluate_p:
; Line 374
	test	esi, esi
	jle	SHORT $LN166@evaluate_p
; Line 375
	xor	al, al
; Line 376
	lea	ecx, DWORD PTR [r9-1]
	test	ecx, ecx
	jle	SHORT $LN164@evaluate_p
	test	ebx, ebx
	movzx	eax, al
	cmovg	eax, r14d
$LN164@evaluate_p:
; Line 377
	cmp	ecx, 7
	jge	SHORT $LN213@evaluate_p
	cmp	DWORD PTR black_file_counts$[rbp+rdx-68], 0
	jg	SHORT $LN166@evaluate_p
$LN213@evaluate_p:
; Line 379
	test	al, al
	jne	SHORT $LN166@evaluate_p
; Line 380
	imul	eax, esi, 15
	add	r8d, eax
$LN166@evaluate_p:
; Line 356
	mov	r10d, DWORD PTR white_file_counts$[rbp+rdx-68]
	cmp	r10d, r14d
	jle	SHORT $LN168@evaluate_p
; Line 357
	lea	ecx, DWORD PTR [r10+r10*4]
	mov	eax, 10
	add	ecx, ecx
	sub	eax, ecx
	add	r8d, eax
$LN168@evaluate_p:
; Line 359
	mov	edi, DWORD PTR black_file_counts$[rbp+rdx-68]
	cmp	edi, r14d
	jle	SHORT $LN169@evaluate_p
; Line 360
	lea	eax, DWORD PTR [rdi+rdi*4]
	lea	r8d, DWORD PTR [r8+rax*2]
	add	r8d, -10
$LN169@evaluate_p:
; Line 364
	test	r10d, r10d
	jle	SHORT $LN172@evaluate_p
; Line 365
	xor	al, al
; Line 366
	test	r9d, r9d
	jle	SHORT $LN170@evaluate_p
	test	r11d, r11d
	movzx	eax, al
	cmovg	eax, r14d
$LN170@evaluate_p:
; Line 367
	cmp	r9d, 7
	jge	SHORT $LN214@evaluate_p
	cmp	DWORD PTR white_file_counts$[rbp+rdx-64], 0
	jg	SHORT $LN172@evaluate_p
$LN214@evaluate_p:
; Line 369
	test	al, al
	jne	SHORT $LN172@evaluate_p
; Line 370
	imul	eax, r10d, -15
	add	r8d, eax
$LN172@evaluate_p:
; Line 374
	test	edi, edi
	jle	SHORT $LN175@evaluate_p
; Line 375
	xor	al, al
; Line 376
	test	r9d, r9d
	jle	SHORT $LN173@evaluate_p
	test	esi, esi
	movzx	eax, al
	cmovg	eax, r14d
$LN173@evaluate_p:
; Line 377
	cmp	r9d, 7
	jge	SHORT $LN215@evaluate_p
	cmp	DWORD PTR black_file_counts$[rbp+rdx-64], 0
	jg	SHORT $LN175@evaluate_p
$LN215@evaluate_p:
; Line 379
	test	al, al
	jne	SHORT $LN175@evaluate_p
; Line 380
	imul	eax, edi, 15
	add	r8d, eax
$LN175@evaluate_p:
; Line 356
	mov	r11d, DWORD PTR white_file_counts$[rbp+rdx-64]
	cmp	r11d, r14d
	jle	SHORT $LN177@evaluate_p
; Line 357
	lea	ecx, DWORD PTR [r11+r11*4]
	mov	eax, 10
	add	ecx, ecx
	sub	eax, ecx
	add	r8d, eax
$LN177@evaluate_p:
; Line 359
	mov	ebx, DWORD PTR black_file_counts$[rbp+rdx-64]
	cmp	ebx, r14d
	jle	SHORT $LN178@evaluate_p
; Line 360
	lea	eax, DWORD PTR [rbx+rbx*4]
	lea	r8d, DWORD PTR [r8+rax*2]
	add	r8d, -10
$LN178@evaluate_p:
; Line 364
	test	r11d, r11d
	jle	SHORT $LN181@evaluate_p
; Line 365
	xor	al, al
; Line 366
	lea	ecx, DWORD PTR [r9+1]
	test	ecx, ecx
	jle	SHORT $LN179@evaluate_p
	test	r10d, r10d
	movzx	eax, al
	cmovg	eax, r14d
$LN179@evaluate_p:
; Line 367
	cmp	ecx, 7
	jge	SHORT $LN180@evaluate_p
	cmp	DWORD PTR white_file_counts$[rbp+rdx-60], 0
	jg	SHORT $LN181@evaluate_p
$LN180@evaluate_p:
; Line 369
	test	al, al
	jne	SHORT $LN181@evaluate_p
; Line 370
	imul	eax, r11d, -15
	add	r8d, eax
$LN181@evaluate_p:
; Line 374
	test	ebx, ebx
	jle	SHORT $LN184@evaluate_p
; Line 375
	xor	cl, cl
; Line 376
	lea	eax, DWORD PTR [r9+1]
	test	eax, eax
	jle	SHORT $LN182@evaluate_p
	test	edi, edi
	movzx	ecx, cl
	cmovg	ecx, r14d
$LN182@evaluate_p:
; Line 377
	cmp	eax, 7
	jge	SHORT $LN183@evaluate_p
	cmp	DWORD PTR black_file_counts$[rbp+rdx-60], 0
	jg	SHORT $LN184@evaluate_p
$LN183@evaluate_p:
; Line 379
	test	cl, cl
	jne	SHORT $LN184@evaluate_p
; Line 380
	imul	ecx, ebx, 15
	add	r8d, ecx
$LN184@evaluate_p:
; Line 354
	add	r9d, 4
	add	rdx, 16
	lea	ecx, DWORD PTR [r9-2]
	cmp	ecx, 8
	jl	$LL126@evaluate_p
; Line 385
	mov	eax, r8d
; Line 386
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-80]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+112]
	mov	rsi, QWORD PTR [rsp+120]
	mov	rdi, QWORD PTR [rsp+128]
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r14
	pop	rbp
	ret	0
?evaluate_pawn_structure@HybridEvaluator@Engine3@@CAHAEBVPosition@@@Z ENDP ; Engine3::HybridEvaluator::evaluate_pawn_structure
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?evaluate_material@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z
_TEXT	SEGMENT
pos$ = 8
phase$ = 16
?evaluate_material@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z PROC ; Engine3::HybridEvaluator::evaluate_material, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 243
$LN126:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	mov	QWORD PTR [rsp+32], r14
; Line 244
	xor	edi, edi
; Line 246
	lea	rax, OFFSET FLAT:?KING_TABLE_ENDGAME@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B ; Engine3::EvalParams::KING_TABLE_ENDGAME
	cmp	edx, 2
	lea	rsi, OFFSET FLAT:?KING_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B ; Engine3::EvalParams::KING_TABLE
	mov	rbx, rcx
	lea	r14, OFFSET FLAT:__ImageBase
	cmove	rsi, rax
; Line 249
	xor	r11d, r11d
	npad	8
$LL4@evaluate_m:
; Line 250
	movzx	r10d, BYTE PTR [rbx]
; Line 251
	test	r10b, r10b
	je	$LN2@evaluate_m
; Line 10
	lea	eax, DWORD PTR [r11-21]
	cmp	eax, 77					; 0000004dH
	ja	$LN2@evaluate_m
; Line 12
	mov	eax, -858993459				; cccccccdH
	mul	r11d
	mov	eax, r11d
	shr	edx, 3
	lea	ecx, DWORD PTR [rdx+rdx*4]
; Line 13
	add	edx, -2
	add	ecx, ecx
	sub	eax, ecx
	dec	eax
; Line 15
	cmp	eax, 7
	ja	$LN2@evaluate_m
	cmp	edx, 7
	ja	$LN2@evaluate_m
; Line 17
	lea	ecx, DWORD PTR [rax+rdx*8]
; Line 254
	test	ecx, ecx
	js	$LN2@evaluate_m
; Line 256
	xor	r9d, r9d
; Line 260
	lea	eax, DWORD PTR [r10-1]
	xor	r8d, r8d
	cmp	eax, 13
	ja	$LN21@evaluate_m
	cdqe
	mov	edx, DWORD PTR $LN103@evaluate_m[r14+rax*4]
	add	rdx, r14
	jmp	rdx
$LN9@evaluate_m:
; Line 263
	movsxd	rax, ecx
	mov	r9d, 100				; 00000064H
	mov	r8d, DWORD PTR ?PAWN_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B[r14+rax*4]
; Line 264
	jmp	$LN21@evaluate_m
$LN10@evaluate_m:
; Line 266
	mov	r9d, -100				; ffffffffffffff9cH
; Line 32
	cmp	ecx, 63					; 0000003fH
	jg	SHORT $LN37@evaluate_m
; Line 33
	mov	eax, ecx
	cdq
	and	edx, 7
	add	eax, edx
	mov	edx, 7
	sar	eax, 3
	sub	edx, eax
	and	ecx, -2147483641			; ffffffff80000007H
	jge	SHORT $LN102@evaluate_m
	dec	ecx
	or	ecx, -8
	inc	ecx
$LN102@evaluate_m:
	lea	ecx, DWORD PTR [rcx+rdx*8]
$LN37@evaluate_m:
; Line 267
	movsxd	rax, ecx
	mov	r8d, DWORD PTR ?PAWN_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B[r14+rax*4]
; Line 268
	jmp	$LN123@evaluate_m
$LN11@evaluate_m:
; Line 271
	movsxd	rax, ecx
	mov	r9d, 300				; 0000012cH
	mov	r8d, DWORD PTR ?KNIGHT_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B[r14+rax*4]
; Line 272
	jmp	$LN21@evaluate_m
$LN12@evaluate_m:
; Line 274
	mov	r9d, -300				; fffffffffffffed4H
; Line 32
	cmp	ecx, 63					; 0000003fH
	jg	SHORT $LN47@evaluate_m
; Line 33
	mov	eax, ecx
	cdq
	and	edx, 7
	add	eax, edx
	mov	edx, 7
	sar	eax, 3
	sub	edx, eax
	and	ecx, -2147483641			; ffffffff80000007H
	jge	SHORT $LN101@evaluate_m
	dec	ecx
	or	ecx, -8
	inc	ecx
$LN101@evaluate_m:
	lea	ecx, DWORD PTR [rcx+rdx*8]
$LN47@evaluate_m:
; Line 275
	movsxd	rax, ecx
	mov	r8d, DWORD PTR ?KNIGHT_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B[r14+rax*4]
; Line 276
	jmp	$LN123@evaluate_m
$LN13@evaluate_m:
; Line 279
	movsxd	rax, ecx
	mov	r9d, 350				; 0000015eH
	mov	r8d, DWORD PTR ?BISHOP_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B[r14+rax*4]
; Line 280
	jmp	$LN21@evaluate_m
$LN14@evaluate_m:
; Line 282
	mov	r9d, -350				; fffffffffffffea2H
; Line 32
	cmp	ecx, 63					; 0000003fH
	jg	SHORT $LN57@evaluate_m
; Line 33
	mov	eax, ecx
	cdq
	and	edx, 7
	add	eax, edx
	mov	edx, 7
	sar	eax, 3
	sub	edx, eax
	and	ecx, -2147483641			; ffffffff80000007H
	jge	SHORT $LN100@evaluate_m
	dec	ecx
	or	ecx, -8
	inc	ecx
$LN100@evaluate_m:
	lea	ecx, DWORD PTR [rcx+rdx*8]
$LN57@evaluate_m:
; Line 283
	movsxd	rax, ecx
	mov	r8d, DWORD PTR ?BISHOP_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B[r14+rax*4]
; Line 284
	jmp	$LN123@evaluate_m
$LN15@evaluate_m:
; Line 287
	movsxd	rax, ecx
	mov	r9d, 500				; 000001f4H
	mov	r8d, DWORD PTR ?ROOK_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B[r14+rax*4]
; Line 288
	jmp	$LN21@evaluate_m
$LN16@evaluate_m:
; Line 290
	mov	r9d, -500				; fffffffffffffe0cH
; Line 32
	cmp	ecx, 63					; 0000003fH
	jg	SHORT $LN67@evaluate_m
; Line 33
	mov	eax, ecx
	cdq
	and	edx, 7
	add	eax, edx
	mov	edx, 7
	sar	eax, 3
	sub	edx, eax
	and	ecx, -2147483641			; ffffffff80000007H
	jge	SHORT $LN99@evaluate_m
	dec	ecx
	or	ecx, -8
	inc	ecx
$LN99@evaluate_m:
	lea	ecx, DWORD PTR [rcx+rdx*8]
$LN67@evaluate_m:
; Line 291
	movsxd	rax, ecx
	mov	r8d, DWORD PTR ?ROOK_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B[r14+rax*4]
; Line 292
	jmp	$LN123@evaluate_m
$LN17@evaluate_m:
; Line 295
	movsxd	rax, ecx
	mov	r9d, 1000				; 000003e8H
	mov	r8d, DWORD PTR ?QUEEN_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B[r14+rax*4]
; Line 296
	jmp	$LN21@evaluate_m
$LN18@evaluate_m:
; Line 298
	mov	r9d, -1000				; fffffffffffffc18H
; Line 32
	cmp	ecx, 63					; 0000003fH
	jg	SHORT $LN77@evaluate_m
; Line 33
	mov	eax, ecx
	cdq
	and	edx, 7
	add	eax, edx
	mov	edx, 7
	sar	eax, 3
	sub	edx, eax
	and	ecx, -2147483641			; ffffffff80000007H
	jge	SHORT $LN98@evaluate_m
	dec	ecx
	or	ecx, -8
	inc	ecx
$LN98@evaluate_m:
	lea	ecx, DWORD PTR [rcx+rdx*8]
$LN77@evaluate_m:
; Line 299
	movsxd	rax, ecx
	mov	r8d, DWORD PTR ?QUEEN_TABLE@EvalParams@Engine3@@3V?$array@H$0EA@@std@@B[r14+rax*4]
; Line 300
	jmp	SHORT $LN123@evaluate_m
$LN19@evaluate_m:
; Line 303
	movsxd	rax, ecx
	mov	r9d, 10000				; 00002710H
	mov	r8d, DWORD PTR [rsi+rax*4]
; Line 304
	jmp	SHORT $LN21@evaluate_m
$LN20@evaluate_m:
; Line 306
	mov	r9d, -10000				; ffffffffffffd8f0H
; Line 32
	cmp	ecx, 63					; 0000003fH
	jg	SHORT $LN87@evaluate_m
; Line 33
	mov	eax, ecx
	cdq
	and	edx, 7
	add	eax, edx
	mov	edx, 7
	sar	eax, 3
	sub	edx, eax
	and	ecx, -2147483641			; ffffffff80000007H
	jge	SHORT $LN97@evaluate_m
	dec	ecx
	or	ecx, -8
	inc	ecx
$LN97@evaluate_m:
	lea	ecx, DWORD PTR [rcx+rdx*8]
$LN87@evaluate_m:
; Line 307
	movsxd	rax, ecx
	mov	r8d, DWORD PTR [rsi+rax*4]
$LN123@evaluate_m:
; Line 313
	neg	r8d
$LN21@evaluate_m:
	lea	ecx, DWORD PTR [r8+r9]
	add	edi, ecx
$LN2@evaluate_m:
; Line 249
	inc	r11d
	inc	rbx
	cmp	r11d, 120				; 00000078H
	jl	$LL4@evaluate_m
; Line 317
	mov	rbx, QWORD PTR [rsp+8]
	mov	eax, edi
	mov	rdi, QWORD PTR [rsp+24]
	mov	rsi, QWORD PTR [rsp+16]
	mov	r14, QWORD PTR [rsp+32]
	ret	0
	npad	2
$LN103@evaluate_m:
	DD	$LN9@evaluate_m
	DD	$LN11@evaluate_m
	DD	$LN13@evaluate_m
	DD	$LN15@evaluate_m
	DD	$LN17@evaluate_m
	DD	$LN19@evaluate_m
	DD	$LN21@evaluate_m
	DD	$LN21@evaluate_m
	DD	$LN10@evaluate_m
	DD	$LN12@evaluate_m
	DD	$LN14@evaluate_m
	DD	$LN16@evaluate_m
	DD	$LN18@evaluate_m
	DD	$LN20@evaluate_m
?evaluate_material@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z ENDP ; Engine3::HybridEvaluator::evaluate_material
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?square64_to_120@HybridEvaluator@Engine3@@SAHH@Z
_TEXT	SEGMENT
sq64$ = 8
?square64_to_120@HybridEvaluator@Engine3@@SAHH@Z PROC	; Engine3::HybridEvaluator::square64_to_120, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 22
	cmp	ecx, 63					; 0000003fH
	ja	SHORT $LN3@square64_t
; Line 25
	mov	eax, ecx
	cdq
	and	edx, 7
	add	eax, edx
	mov	ecx, eax
	and	eax, 7
	sar	ecx, 3
	sub	eax, edx
; Line 27
	lea	ecx, DWORD PTR [rcx+rcx*4]
	lea	eax, DWORD PTR [rax+rcx*2]
	add	eax, 21
; Line 28
	ret	0
$LN3@square64_t:
; Line 22
	mov	eax, -1
; Line 28
	ret	0
?square64_to_120@HybridEvaluator@Engine3@@SAHH@Z ENDP	; Engine3::HybridEvaluator::square64_to_120
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?square120_to_64@HybridEvaluator@Engine3@@SAHH@Z
_TEXT	SEGMENT
sq120$ = 8
?square120_to_64@HybridEvaluator@Engine3@@SAHH@Z PROC	; Engine3::HybridEvaluator::square120_to_64, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 10
	lea	eax, DWORD PTR [rcx-21]
	cmp	eax, 77					; 0000004dH
	ja	SHORT $LN3@square120_
; Line 12
	mov	eax, 1717986919				; 66666667H
	imul	ecx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31
	add	edx, eax
	lea	eax, DWORD PTR [rdx+rdx*4]
; Line 13
	add	edx, -2
	add	eax, eax
	sub	ecx, eax
	dec	ecx
; Line 15
	cmp	ecx, 7
	ja	SHORT $LN3@square120_
; Line 17
	lea	eax, DWORD PTR [rcx+rdx*8]
	cmp	edx, 7
	jbe	SHORT $LN1@square120_
$LN3@square120_:
; Line 10
	mov	eax, -1
$LN1@square120_:
; Line 18
	ret	0
?square120_to_64@HybridEvaluator@Engine3@@SAHH@Z ENDP	; Engine3::HybridEvaluator::square120_to_64
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?mirror_square@HybridEvaluator@Engine3@@SAHH@Z
_TEXT	SEGMENT
sq64$ = 8
?mirror_square@HybridEvaluator@Engine3@@SAHH@Z PROC	; Engine3::HybridEvaluator::mirror_square, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 32
	mov	eax, ecx
	cmp	ecx, 63					; 0000003fH
	ja	SHORT $LN1@mirror_squ
; Line 33
	cdq
	mov	ecx, 7
	and	edx, 7
	add	eax, edx
	mov	r8d, eax
	and	eax, 7
	sub	eax, edx
	sar	r8d, 3
	sub	ecx, r8d
	lea	eax, DWORD PTR [rax+rcx*8]
$LN1@mirror_squ:
; Line 34
	ret	0
?mirror_square@HybridEvaluator@Engine3@@SAHH@Z ENDP	; Engine3::HybridEvaluator::mirror_square
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?get_game_phase@HybridEvaluator@Engine3@@SA?AW4GamePhase@2@AEBVPosition@@@Z
_TEXT	SEGMENT
pos$ = 8
?get_game_phase@HybridEvaluator@Engine3@@SA?AW4GamePhase@2@AEBVPosition@@@Z PROC ; Engine3::HybridEvaluator::get_game_phase, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 38
	xor	r9d, r9d
	mov	r8d, 8
	mov	eax, r9d
	add	rcx, 2
$LL4@get_game_p:
; Line 42
	movzx	edx, BYTE PTR [rcx-2]
; Line 43
	test	dl, dl
	je	SHORT $LN2@get_game_p
	sub	dl, 6
	test	dl, 247					; 000000f7H
	je	SHORT $LN2@get_game_p
; Line 44
	inc	eax
$LN2@get_game_p:
; Line 42
	movzx	edx, BYTE PTR [rcx-1]
; Line 43
	test	dl, dl
	je	SHORT $LN16@get_game_p
	sub	dl, 6
	test	dl, 247					; 000000f7H
	je	SHORT $LN16@get_game_p
; Line 44
	inc	eax
$LN16@get_game_p:
; Line 42
	movzx	edx, BYTE PTR [rcx]
; Line 43
	test	dl, dl
	je	SHORT $LN18@get_game_p
	sub	dl, 6
	test	dl, 247					; 000000f7H
	je	SHORT $LN18@get_game_p
; Line 44
	inc	eax
$LN18@get_game_p:
; Line 42
	movzx	edx, BYTE PTR [rcx+1]
; Line 43
	test	dl, dl
	je	SHORT $LN20@get_game_p
	sub	dl, 6
	test	dl, 247					; 000000f7H
	je	SHORT $LN20@get_game_p
; Line 44
	inc	eax
$LN20@get_game_p:
; Line 42
	movzx	edx, BYTE PTR [rcx+2]
; Line 43
	test	dl, dl
	je	SHORT $LN22@get_game_p
	sub	dl, 6
	test	dl, 247					; 000000f7H
	je	SHORT $LN22@get_game_p
; Line 44
	inc	eax
$LN22@get_game_p:
; Line 42
	movzx	edx, BYTE PTR [rcx+3]
; Line 43
	test	dl, dl
	je	SHORT $LN24@get_game_p
	sub	dl, 6
	test	dl, 247					; 000000f7H
	je	SHORT $LN24@get_game_p
; Line 44
	inc	eax
$LN24@get_game_p:
; Line 42
	movzx	edx, BYTE PTR [rcx+4]
; Line 43
	test	dl, dl
	je	SHORT $LN26@get_game_p
	sub	dl, 6
	test	dl, 247					; 000000f7H
	je	SHORT $LN26@get_game_p
; Line 44
	inc	eax
$LN26@get_game_p:
; Line 42
	movzx	edx, BYTE PTR [rcx+5]
; Line 43
	test	dl, dl
	je	SHORT $LN28@get_game_p
	sub	dl, 6
	test	dl, 247					; 000000f7H
	je	SHORT $LN28@get_game_p
; Line 44
	inc	eax
$LN28@get_game_p:
; Line 42
	movzx	edx, BYTE PTR [rcx+6]
; Line 43
	test	dl, dl
	je	SHORT $LN30@get_game_p
	sub	dl, 6
	test	dl, 247					; 000000f7H
	je	SHORT $LN30@get_game_p
; Line 44
	inc	eax
$LN30@get_game_p:
; Line 42
	movzx	edx, BYTE PTR [rcx+7]
; Line 43
	test	dl, dl
	je	SHORT $LN32@get_game_p
	sub	dl, 6
	test	dl, 247					; 000000f7H
	je	SHORT $LN32@get_game_p
; Line 44
	inc	eax
$LN32@get_game_p:
; Line 42
	movzx	edx, BYTE PTR [rcx+8]
; Line 43
	test	dl, dl
	je	SHORT $LN34@get_game_p
	sub	dl, 6
	test	dl, 247					; 000000f7H
	je	SHORT $LN34@get_game_p
; Line 44
	inc	eax
$LN34@get_game_p:
; Line 42
	movzx	edx, BYTE PTR [rcx+9]
; Line 43
	test	dl, dl
	je	SHORT $LN36@get_game_p
	sub	dl, 6
	test	dl, 247					; 000000f7H
	je	SHORT $LN36@get_game_p
; Line 44
	inc	eax
$LN36@get_game_p:
; Line 42
	movzx	edx, BYTE PTR [rcx+10]
; Line 43
	test	dl, dl
	je	SHORT $LN38@get_game_p
	sub	dl, 6
	test	dl, 247					; 000000f7H
	je	SHORT $LN38@get_game_p
; Line 44
	inc	eax
$LN38@get_game_p:
; Line 42
	movzx	edx, BYTE PTR [rcx+11]
; Line 43
	test	dl, dl
	je	SHORT $LN40@get_game_p
	sub	dl, 6
	test	dl, 247					; 000000f7H
	je	SHORT $LN40@get_game_p
; Line 44
	inc	eax
$LN40@get_game_p:
; Line 42
	movzx	edx, BYTE PTR [rcx+12]
; Line 43
	test	dl, dl
	je	SHORT $LN42@get_game_p
	sub	dl, 6
	test	dl, 247					; 000000f7H
	je	SHORT $LN42@get_game_p
; Line 44
	inc	eax
$LN42@get_game_p:
; Line 41
	add	rcx, 15
	sub	r8, 1
	jne	$LL4@get_game_p
; Line 48
	cmp	eax, 24
	jle	SHORT $LN6@get_game_p
; Line 49
	xor	eax, eax
; Line 53
	ret	0
$LN6@get_game_p:
; Line 50
	cmp	eax, 12
	setle	r9b
	lea	eax, DWORD PTR [r9+1]
; Line 53
	ret	0
?get_game_phase@HybridEvaluator@Engine3@@SA?AW4GamePhase@2@AEBVPosition@@@Z ENDP ; Engine3::HybridEvaluator::get_game_phase
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z
_TEXT	SEGMENT
temp_pos$1 = 32
temp_pos$ = 896
moves$2 = 1760
legal_moves$ = 3824
__$ArrayPad$ = 5888
pos$ = 5952
?evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z PROC ; Engine3::HybridEvaluator::evaluate, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 512
$LN196:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	mov	eax, 5904				; 00001710H
	call	__chkstk
	sub	rsp, rax
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	r14, rcx
; Line 514
	mov	rdx, rcx
	lea	rcx, QWORD PTR temp_pos$[rsp]
	call	??0Position@@QEAA@AEBV0@@Z
	npad	1
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 20
	lea	rax, QWORD PTR legal_moves$[rsp]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 512
	mov	ebp, 256				; 00000100H
	mov	ecx, ebp
	xor	ebx, ebx
	npad	10
$LL183@evaluate:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	mov	QWORD PTR [rax], rbx
	lea	rax, QWORD PTR [rax+8]
	sub	rcx, 1
	jne	SHORT $LL183@evaluate
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 20
	mov	DWORD PTR legal_moves$[rsp+2048], ebx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 516
	lea	rdx, QWORD PTR legal_moves$[rsp]
	lea	rcx, QWORD PTR temp_pos$[rsp]
	call	?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z ; generate_legal_moves_enhanced
; Line 518
	cmp	DWORD PTR legal_moves$[rsp+2048], ebx
	jne	SHORT $LN4@evaluate
; Line 519
	movzx	eax, BYTE PTR [r14+120]
	mov	ecx, DWORD PTR [r14+rax*4+136]
; Line 520
	test	ecx, ecx
	js	$LN7@evaluate
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	test	al, al
	jne	SHORT $LN26@evaluate
	mov	dil, 1
	jmp	SHORT $LN27@evaluate
$LN26@evaluate:
	mov	edi, 2
	cmp	al, 1
	cmove	edi, ebx
$LN27@evaluate:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 520
	movzx	r8d, dil
	mov	rdx, r14
	call	?SqAttacked@@YA_NHAEBVPosition@@W4Color@@@Z ; SqAttacked
	test	al, al
	je	$LN7@evaluate
	mov	ebx, -32000				; ffffffffffff8300H
	jmp	$LN7@evaluate
$LN4@evaluate:
; Line 529
	mov	rcx, r14
	call	?get_game_phase@HybridEvaluator@Engine3@@SA?AW4GamePhase@2@AEBVPosition@@@Z ; Engine3::HybridEvaluator::get_game_phase
	mov	r15d, eax
; Line 532
	mov	edx, eax
	mov	rcx, r14
	call	?evaluate_material@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z ; Engine3::HybridEvaluator::evaluate_material
	mov	esi, eax
; Line 534
	mov	edx, r15d
	mov	rcx, r14
	call	?evaluate_piece_activity@HybridEvaluator@Engine3@@CAHAEBVPosition@@W4GamePhase@2@@Z ; Engine3::HybridEvaluator::evaluate_piece_activity
	mov	edi, eax
; Line 533
	mov	rcx, r14
	call	?evaluate_pawn_structure@HybridEvaluator@Engine3@@CAHAEBVPosition@@@Z ; Engine3::HybridEvaluator::evaluate_pawn_structure
; Line 534
	add	esi, edi
	add	esi, eax
; Line 463
	cmp	r15d, 2
	jne	SHORT $LN45@evaluate
; Line 476
	mov	ecx, ebx
	jmp	$LN119@evaluate
$LN45@evaluate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	mov	eax, ebx
	cmp	BYTE PTR [r14+22], 2
	setne	al
	lea	ecx, DWORD PTR [rax+1]
	cmp	BYTE PTR [r14+27], 2
	cmove	ecx, eax
	lea	r8d, DWORD PTR [rcx+1]
	cmp	BYTE PTR [r14+23], 3
	cmove	r8d, ecx
	mov	eax, ebx
	cmp	BYTE PTR [r14+92], 10
	setne	al
	lea	ecx, DWORD PTR [rax+1]
	cmp	BYTE PTR [r14+97], 10
	cmove	ecx, eax
	lea	edx, DWORD PTR [rcx+1]
	cmp	BYTE PTR [r14+93], 11
	cmove	edx, ecx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 219
	lea	ecx, DWORD PTR [r8+1]
	cmp	BYTE PTR [r14+26], 3
	cmove	ecx, r8d
; Line 471
	lea	eax, DWORD PTR [rdx+1]
	cmp	BYTE PTR [r14+96], 11
	cmove	eax, edx
	sub	ecx, eax
; Line 465
	mov	eax, 15
	mov	edx, 20
	test	r15d, r15d
	cmove	eax, edx
; Line 471
	imul	ecx, eax
; Line 535
	add	esi, ecx
; Line 478
	mov	ecx, ebx
; Line 481
	mov	edx, DWORD PTR [r14+136]
; Line 482
	test	edx, edx
	js	SHORT $LN124@evaluate
; Line 484
	lea	eax, DWORD PTR [rdx-23]
	test	eax, -5					; fffffffbH
	jne	SHORT $LN122@evaluate
; Line 488
	mov	ecx, 40					; 00000028H
	jmp	SHORT $LN124@evaluate
$LN122@evaluate:
; Line 489
	cmp	edx, 25
	jne	SHORT $LN124@evaluate
	test	BYTE PTR [r14+128], 3
	mov	eax, -20
	cmove	ecx, eax
$LN124@evaluate:
; Line 495
	mov	edx, DWORD PTR [r14+140]
; Line 496
	test	edx, edx
	js	SHORT $LN119@evaluate
; Line 498
	lea	eax, DWORD PTR [rdx-93]
	test	eax, -5					; fffffffbH
	jne	SHORT $LN126@evaluate
; Line 502
	sub	ecx, 40					; 00000028H
	jmp	SHORT $LN119@evaluate
$LN126@evaluate:
; Line 503
	cmp	edx, 95					; 0000005fH
	jne	SHORT $LN119@evaluate
	test	BYTE PTR [r14+128], 12
	jne	SHORT $LN119@evaluate
; Line 504
	add	ecx, 20
$LN119@evaluate:
; Line 536
	add	esi, ecx
; Line 443
	mov	edi, 2
	mov	r12d, 5
	cmp	r15d, edi
	cmove	r12d, edi
; Line 447
	mov	rdx, r14
	lea	rcx, QWORD PTR temp_pos$1[rsp]
	call	??0Position@@QEAA@AEBV0@@Z
	npad	1
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 20
	lea	rax, QWORD PTR moves$2[rsp]
	npad	1
$LL184@evaluate:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	mov	QWORD PTR [rax], rbx
	lea	rax, QWORD PTR [rax+8]
	sub	rbp, 1
	jne	SHORT $LL184@evaluate
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\movegen_enhanced.hpp
; Line 20
	mov	DWORD PTR moves$2[rsp+2048], ebx
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 449
	lea	rdx, QWORD PTR moves$2[rsp]
	lea	rcx, QWORD PTR temp_pos$1[rsp]
	call	?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z ; generate_legal_moves_enhanced
; Line 450
	mov	ebp, DWORD PTR moves$2[rsp+2048]
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	movzx	eax, BYTE PTR temp_pos$1[rsp+120]
	test	al, al
	jne	SHORT $LN157@evaluate
	mov	dil, 1
	jmp	SHORT $LN158@evaluate
$LN157@evaluate:
	cmp	al, 1
	cmove	edi, ebx
$LN158@evaluate:
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 453
	mov	BYTE PTR temp_pos$1[rsp+120], dil
; Line 454
	lea	rdx, QWORD PTR moves$2[rsp]
	lea	rcx, QWORD PTR temp_pos$1[rsp]
	call	?generate_legal_moves_enhanced@@YAXAEAVPosition@@AEAUS_MOVELIST@@@Z ; generate_legal_moves_enhanced
	sub	ebp, DWORD PTR moves$2[rsp+2048]
; Line 458
	movzx	ebx, BYTE PTR [r14+120]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 830
	lea	rcx, QWORD PTR temp_pos$1[rsp+832]
	call	?_Tidy@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Tidy
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 458
	mov	eax, ebp
	neg	eax
	test	bl, bl
	cmovne	ebp, eax
	imul	ebp, r12d
; Line 537
	add	esi, ebp
; Line 540
	mov	ebx, esi
	cmp	BYTE PTR [r14+120], 0
	je	SHORT $LN7@evaluate
	neg	ebx
$LN7@evaluate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 830
	lea	rcx, QWORD PTR temp_pos$[rsp+832]
	call	?_Tidy@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Tidy
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\Engine3_src\hybrid_evaluation.cpp
; Line 540
	mov	eax, ebx
; Line 541
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+5904]
	mov	rbx, QWORD PTR [r11+56]
	mov	rbp, QWORD PTR [r11+64]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
?evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z ENDP ; Engine3::HybridEvaluator::evaluate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
temp_pos$1 = 32
temp_pos$ = 896
moves$2 = 1760
legal_moves$ = 3824
__$ArrayPad$ = 5888
pos$ = 5952
?dtor$0@?0??evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z@4HA PROC ; `Engine3::HybridEvaluator::evaluate'::`1'::dtor$0
	lea	rcx, QWORD PTR temp_pos$[rdx]
	jmp	??1Position@@QEAA@XZ
?dtor$0@?0??evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z@4HA ENDP ; `Engine3::HybridEvaluator::evaluate'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
temp_pos$1 = 32
temp_pos$ = 896
moves$2 = 1760
legal_moves$ = 3824
__$ArrayPad$ = 5888
pos$ = 5952
?dtor$3@?0??evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z@4HA PROC ; `Engine3::HybridEvaluator::evaluate'::`1'::dtor$3
	lea	rcx, QWORD PTR temp_pos$1[rdx]
	jmp	??1Position@@QEAA@XZ
?dtor$3@?0??evaluate@HybridEvaluator@Engine3@@SAHAEBVPosition@@@Z@4HA ENDP ; `Engine3::HybridEvaluator::evaluate'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0Position@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0Position@@QEAA@AEBV0@@Z PROC				; Position::Position, COMDAT
$LN64:
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	r14
	sub	rsp, 32					; 00000020H
	movups	xmm0, XMMWORD PTR [rdx]
	mov	rbp, rdx
	mov	rsi, rcx
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rcx+16], xmm1
	movups	xmm0, XMMWORD PTR [rdx+32]
	movups	XMMWORD PTR [rcx+32], xmm0
	movups	xmm1, XMMWORD PTR [rdx+48]
	movups	XMMWORD PTR [rcx+48], xmm1
	movups	xmm0, XMMWORD PTR [rdx+64]
	movups	XMMWORD PTR [rcx+64], xmm0
	movups	xmm1, XMMWORD PTR [rdx+80]
	movups	XMMWORD PTR [rcx+80], xmm1
	movups	xmm0, XMMWORD PTR [rdx+96]
	movups	XMMWORD PTR [rcx+96], xmm0
	movsd	xmm1, QWORD PTR [rdx+112]
	movsd	QWORD PTR [rcx+112], xmm1
	movzx	eax, BYTE PTR [rdx+120]
	mov	BYTE PTR [rcx+120], al
	mov	eax, DWORD PTR [rdx+124]
	mov	DWORD PTR [rcx+124], eax
	movzx	eax, BYTE PTR [rdx+128]
	mov	BYTE PTR [rcx+128], al
	movzx	eax, WORD PTR [rdx+130]
	mov	WORD PTR [rcx+130], ax
	movzx	eax, WORD PTR [rdx+132]
	mov	WORD PTR [rcx+132], ax
	mov	rax, QWORD PTR [rdx+136]
	mov	QWORD PTR [rcx+136], rax
	movups	xmm0, XMMWORD PTR [rdx+144]
	movups	XMMWORD PTR [rcx+144], xmm0
	mov	rax, QWORD PTR [rdx+160]
	mov	QWORD PTR [rcx+160], rax
	movups	xmm0, XMMWORD PTR [rdx+168]
	movups	XMMWORD PTR [rcx+168], xmm0
	movsd	xmm1, QWORD PTR [rdx+184]
	movsd	QWORD PTR [rcx+184], xmm1
	mov	eax, DWORD PTR [rdx+192]
	mov	DWORD PTR [rcx+192], eax
	mov	rax, QWORD PTR [rdx+200]
	mov	QWORD PTR [rcx+200], rax
	mov	rax, QWORD PTR [rdx+208]
	mov	QWORD PTR [rcx+208], rax
	lea	rax, QWORD PTR [rdx+216]
	mov	edx, 4
	add	rcx, 216				; 000000d8H
	npad	1
$LL56@Position:
	lea	rcx, QWORD PTR [rcx+128]
	movups	xmm0, XMMWORD PTR [rax]
	lea	rax, QWORD PTR [rax+128]
	movups	XMMWORD PTR [rcx-128], xmm0
	movups	xmm1, XMMWORD PTR [rax-112]
	movups	XMMWORD PTR [rcx-112], xmm1
	movups	xmm0, XMMWORD PTR [rax-96]
	movups	XMMWORD PTR [rcx-96], xmm0
	movups	xmm1, XMMWORD PTR [rax-80]
	movups	XMMWORD PTR [rcx-80], xmm1
	movups	xmm0, XMMWORD PTR [rax-64]
	movups	XMMWORD PTR [rcx-64], xmm0
	movups	xmm1, XMMWORD PTR [rax-48]
	movups	XMMWORD PTR [rcx-48], xmm1
	movups	xmm0, XMMWORD PTR [rax-32]
	movups	XMMWORD PTR [rcx-32], xmm0
	movups	xmm1, XMMWORD PTR [rax-16]
	movups	XMMWORD PTR [rcx-16], xmm1
	sub	rdx, 1
	jne	SHORT $LL56@Position
	movups	xmm0, XMMWORD PTR [rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 748
	mov	r14, 3243383573399481603		; 2d02d02d02d02d03H
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR [rcx+16], xmm1
	movups	xmm0, XMMWORD PTR [rax+32]
; Line 400
	xor	eax, eax
	movups	XMMWORD PTR [rcx+32], xmm0
	movups	xmm0, XMMWORD PTR [rbp+776]
	movups	XMMWORD PTR [rsi+776], xmm0
	movups	xmm1, XMMWORD PTR [rbp+792]
	movups	XMMWORD PTR [rsi+792], xmm1
	movups	xmm0, XMMWORD PTR [rbp+808]
	movups	XMMWORD PTR [rsi+808], xmm0
	movsd	xmm1, QWORD PTR [rbp+824]
	movsd	QWORD PTR [rsi+824], xmm1
	mov	QWORD PTR [rsi+832], rax
	mov	QWORD PTR [rsi+840], rax
	mov	QWORD PTR [rsi+848], rax
; Line 748
	mov	rax, r14
	mov	rcx, QWORD PTR [rbp+840]
	sub	rcx, QWORD PTR [rbp+832]
	imul	rcx
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
; Line 2111
	je	$LN51@Position
; Line 2051
	mov	rax, 25338934167183450			; 005a05a05a05a05aH
	cmp	rdx, rax
	ja	$LN62@Position
	mov	QWORD PTR [rsp+48], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 122
	imul	rbx, rdx, 728				; 000002d8H
	mov	QWORD PTR [rsp+56], rdi
; Line 990
	mov	rcx, rbx
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2035
	mov	QWORD PTR [rsi+832], rax
; Line 2036
	mov	QWORD PTR [rsi+840], rax
; Line 2037
	lea	rcx, QWORD PTR [rbx+rax]
	mov	QWORD PTR [rsi+848], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1876
	mov	rdx, QWORD PTR [rbp+832]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 4769
	mov	rbx, QWORD PTR [rbp+840]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2120
	mov	rdi, QWORD PTR [rsi+832]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 4769
	sub	rbx, rdx
; Line 4751
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1890
	mov	rax, r14
	imul	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2120
	mov	rbx, QWORD PTR [rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1890
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	imul	rax, rdx, 728				; 000002d8H
	add	rax, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2120
	mov	rdi, QWORD PTR [rsp+56]
	mov	QWORD PTR [rsi+840], rax
$LN51@Position:
	mov	eax, DWORD PTR [rbp+856]
	mov	rbp, QWORD PTR [rsp+64]
	mov	DWORD PTR [rsi+856], eax
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN62@Position:
; Line 2052
	call	?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Xlength
	int	3
$LN60@Position:
??0Position@@QEAA@AEBV0@@Z ENDP				; Position::Position
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1Position@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1Position@@QEAA@XZ PROC				; Position::~Position, COMDAT
	add	rcx, 832				; 00000340H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 830
	jmp	?_Tidy@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Tidy
??1Position@@QEAA@XZ ENDP				; Position::~Position
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEBAAEBV?$allocator@US_UNDO@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEBAAEBV?$allocator@US_UNDO@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1>::_Get_first, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1543
	mov	rax, rcx
; Line 1544
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEBAAEBV?$allocator@US_UNDO@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEAAAEAV?$allocator@US_UNDO@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEAAAEAV?$allocator@US_UNDO@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1>::_Get_first, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1539
	mov	rax, rcx
; Line 1540
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@US_UNDO@@@std@@V?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@2@$00@std@@QEAAAEAV?$allocator@US_UNDO@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<S_UNDO>,std::_Vector_val<std::_Simple_types<S_UNDO> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<S_UNDO> >::_Vector_val<std::_Simple_types<S_UNDO> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 400
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@US_UNDO@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<S_UNDO> >::_Vector_val<std::_Simple_types<S_UNDO> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Getal@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEBAAEBV?$allocator@US_UNDO@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEBAAEBV?$allocator@US_UNDO@@@2@XZ PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Getal, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2231
	mov	rax, rcx
; Line 2232
	ret	0
?_Getal@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEBAAEBV?$allocator@US_UNDO@@@2@XZ ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Getal@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAAEAV?$allocator@US_UNDO@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAAEAV?$allocator@US_UNDO@@@2@XZ PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Getal, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2227
	mov	rax, rcx
; Line 2228
	ret	0
?_Getal@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAAEAV?$allocator@US_UNDO@@@2@XZ ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Xlength, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2183
$LN4:
	sub	rsp, 40					; 00000028H
; Line 2184
	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
	int	3
$LN3@Xlength:
?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 64
?_Tidy@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXXZ PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Tidy, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2081
$LN25:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	rbx, rcx
; Line 2090
	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy
; Line 2093
	mov	rdx, QWORD PTR [rbx+16]
	mov	rax, 3243383573399481603		; 2d02d02d02d02d03H
	sub	rdx, rcx
	imul	rdx
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 985
	imul	rdx, rdx, 728				; 000002d8H
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN15@Tidy
; Line 205
	mov	rax, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
; Line 219
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $LN14@Tidy
; Line 220
	mov	rcx, rax
$LN15@Tidy:
; Line 289
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2095
	xor	eax, eax
	mov	QWORD PTR [rbx], rax
; Line 2096
	mov	QWORD PTR [rbx+8], rax
; Line 2097
	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:
; Line 2099
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
$LN14@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 219
	xor	eax, eax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	QWORD PTR [rsp+32], rax
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN22@Tidy:
?_Tidy@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXXZ ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Buy_nonzero@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Buy_nonzero, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2040
$LN21:
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 2051
	mov	rax, 25338934167183450			; 005a05a05a05a05aH
	mov	rdi, rcx
	cmp	rdx, rax
	ja	SHORT $LN20@Buy_nonzer
	mov	QWORD PTR [rsp+48], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 122
	imul	rbx, rdx, 728				; 000002d8H
; Line 990
	mov	rcx, rbx
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2035
	mov	QWORD PTR [rdi], rax
; Line 2036
	mov	QWORD PTR [rdi+8], rax
; Line 2037
	add	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi+16], rax
; Line 2056
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN20@Buy_nonzer:
; Line 2052
	call	?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Xlength
	int	3
$LN18@Buy_nonzer:
?_Buy_nonzero@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Buy_raw@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_raw@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Buy_raw, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2024
$LN17:
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 117
	mov	rax, 25338934167183450			; 005a05a05a05a05aH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2024
	mov	rdi, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 117
	cmp	rdx, rax
	ja	SHORT $LN16@Buy_raw
	mov	QWORD PTR [rsp+48], rbx
; Line 122
	imul	rbx, rdx, 728				; 000002d8H
; Line 990
	mov	rcx, rbx
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2035
	mov	QWORD PTR [rdi], rax
; Line 2036
	mov	QWORD PTR [rdi+8], rax
; Line 2037
	add	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi+16], rax
; Line 2038
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN16@Buy_raw:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 118
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN14@Buy_raw:
?_Buy_raw@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEBA_KXZ PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::max_size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 1919
	mov	rax, 25338934167183450			; 005a05a05a05a05aH
; Line 1920
	ret	0
?max_size@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::~vector<S_UNDO,std::allocator<S_UNDO> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 830
	jmp	?_Tidy@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@AEAAXXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Tidy
??1?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@XZ ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::~vector<S_UNDO,std::allocator<S_UNDO> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::vector<S_UNDO,std::allocator<S_UNDO> >::vector<S_UNDO,std::allocator<S_UNDO> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 746
$LN58:
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	r14
	sub	rsp, 32					; 00000020H
; Line 400
	xor	eax, eax
; Line 746
	mov	r14, rdx
; Line 400
	mov	QWORD PTR [rcx], rax
; Line 748
	mov	rbp, 3243383573399481603		; 2d02d02d02d02d03H
; Line 400
	mov	QWORD PTR [rcx+8], rax
; Line 746
	mov	rsi, rcx
; Line 400
	mov	QWORD PTR [rcx+16], rax
; Line 748
	mov	rax, rbp
	mov	r8, QWORD PTR [rdx+8]
	sub	r8, QWORD PTR [rdx]
	imul	r8
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
; Line 2111
	je	SHORT $LN48@vector
; Line 2051
	mov	rax, 25338934167183450			; 005a05a05a05a05aH
	cmp	rdx, rax
	ja	$LN56@vector
	mov	QWORD PTR [rsp+48], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 122
	imul	rbx, rdx, 728				; 000002d8H
	mov	QWORD PTR [rsp+56], rdi
; Line 990
	mov	rcx, rbx
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2035
	mov	QWORD PTR [rsi], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 990
	mov	rdi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2036
	mov	QWORD PTR [rsi+8], rax
; Line 2037
	lea	rcx, QWORD PTR [rbx+rax]
	mov	QWORD PTR [rsi+16], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 4751
	mov	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1876
	mov	rdx, QWORD PTR [r14]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; Line 4769
	mov	rbx, QWORD PTR [r14+8]
	sub	rbx, rdx
; Line 4751
	mov	r8, rbx
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1890
	mov	rax, rbp
	imul	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2120
	mov	rbx, QWORD PTR [rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1890
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	imul	rax, rdx, 728				; 000002d8H
	add	rax, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; Line 2120
	mov	rdi, QWORD PTR [rsp+56]
	mov	QWORD PTR [rsi+8], rax
$LN48@vector:
; Line 750
	mov	rbp, QWORD PTR [rsp+64]
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN56@vector:
; Line 2052
	call	?_Xlength@?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@CAXXZ ; std::vector<S_UNDO,std::allocator<S_UNDO> >::_Xlength
	int	3
$LN54@vector:
??0?$vector@US_UNDO@@V?$allocator@US_UNDO@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::vector<S_UNDO,std::allocator<S_UNDO> >::vector<S_UNDO,std::allocator<S_UNDO> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SA?AV?$allocator@US_UNDO@@@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Al$ = 16
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SA?AV?$allocator@US_UNDO@@@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::select_on_container_copy_construction, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 750
	mov	rax, rcx
; Line 751
	ret	0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SA?AV?$allocator@US_UNDO@@@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SA_KAEBV?$allocator@US_UNDO@@@2@@Z
_TEXT	SEGMENT
__formal$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SA_KAEBV?$allocator@US_UNDO@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::max_size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 746
	mov	rax, 25338934167183450			; 005a05a05a05a05aH
; Line 747
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@US_UNDO@@@std@@@std@@SA_KAEBV?$allocator@US_UNDO@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<S_UNDO> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?allocate@?$allocator@US_UNDO@@@std@@QEAAPEAUS_UNDO@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@US_UNDO@@@std@@QEAAPEAUS_UNDO@@_K@Z PROC ; std::allocator<S_UNDO>::allocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 988
$LN10:
	sub	rsp, 40					; 00000028H
; Line 117
	mov	rax, 25338934167183450			; 005a05a05a05a05aH
	cmp	rdx, rax
	ja	SHORT $LN9@allocate
; Line 122
	imul	rcx, rdx, 728				; 000002d8H
; Line 991
	add	rsp, 40					; 00000028H
; Line 990
	jmp	??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits>
$LN9@allocate:
; Line 118
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN7@allocate:
?allocate@?$allocator@US_UNDO@@@std@@QEAAPEAUS_UNDO@@_K@Z ENDP ; std::allocator<S_UNDO>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@US_UNDO@@@std@@QEAAXQEAUS_UNDO@@_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@US_UNDO@@@std@@QEAAXQEAUS_UNDO@@_K@Z PROC ; std::allocator<S_UNDO>::deallocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 982
$LN17:
	sub	rsp, 56					; 00000038H
	mov	rax, rdx
; Line 985
	imul	rdx, r8, 728				; 000002d8H
; Line 284
	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN11@deallocate
; Line 205
	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H
; Line 219
	sub	rax, rcx
	sub	rax, 8
	cmp	rax, 31
	ja	SHORT $LN10@deallocate
; Line 220
	mov	rax, rcx
$LN11@deallocate:
; Line 289
	mov	rcx, rax
; Line 986
	add	rsp, 56					; 00000038H
; Line 289
	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN10@deallocate:
; Line 219
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN14@deallocate:
?deallocate@?$allocator@US_UNDO@@@std@@QEAAXQEAUS_UNDO@@_K@Z ENDP ; std::allocator<S_UNDO>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@W4Piece@@$0HI@@std@@QEBAAEBW4Piece@@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@W4Piece@@$0HI@@std@@QEBAAEBW4Piece@@_K@Z PROC ; std::array<enum Piece,120>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rax, QWORD PTR [rdx+rcx]
; Line 544
	ret	0
??A?$array@W4Piece@@$0HI@@std@@QEBAAEBW4Piece@@_K@Z ENDP ; std::array<enum Piece,120>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@H$01@std@@QEBAAEBH_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@H$01@std@@QEBAAEBH_K@Z PROC			; std::array<int,2>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rax, QWORD PTR [rcx+rdx*4]
; Line 544
	ret	0
??A?$array@H$01@std@@QEBAAEBH_K@Z ENDP			; std::array<int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0S_MOVE@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0S_MOVE@@QEAA@XZ PROC					; S_MOVE::S_MOVE, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\move.hpp
; Line 42
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??0S_MOVE@@QEAA@XZ ENDP					; S_MOVE::S_MOVE
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@H$0EA@@std@@QEBAAEBH_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@H$0EA@@std@@QEBAAEBH_K@Z PROC		; std::array<int,64>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rax, QWORD PTR [rcx+rdx*4]
; Line 544
	ret	0
??A?$array@H$0EA@@std@@QEBAAEBH_K@Z ENDP		; std::array<int,64>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$array@H$07@std@@QEBAAEBH_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$array@H$07@std@@QEBAAEBH_K@Z PROC			; std::array<int,8>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\array
; Line 543
	lea	rax, QWORD PTR [rcx+rdx*4]
; Line 544
	ret	0
??A?$array@H$07@std@@QEBAAEBH_K@Z ENDP			; std::array<int,8>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??7@YA?AW4Color@@W40@@Z
_TEXT	SEGMENT
c$ = 8
??7@YA?AW4Color@@W40@@Z PROC				; operator!, COMDAT
; File C:\Users\m_lad\source\repos\MTDuke71\Huginn\src\chess_types.hpp
; Line 37
	test	cl, cl
	jne	SHORT $LN3@operator
	mov	al, 1
; Line 40
	ret	0
$LN3@operator:
; Line 37
	xor	edx, edx
	mov	eax, 2
	cmp	cl, 1
	cmove	eax, edx
; Line 40
	ret	0
??7@YA?AW4Color@@W40@@Z ENDP				; operator!
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Release@_Fake_proxy_ptr_impl@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Release@_Fake_proxy_ptr_impl@std@@QEAAXXZ PROC	; std::_Fake_proxy_ptr_impl::_Release, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1453
	ret	0
?_Release@_Fake_proxy_ptr_impl@std@@QEAAXXZ ENDP	; std::_Fake_proxy_ptr_impl::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0_Fake_proxy_ptr_impl@std@@QEAA@AEBU_Fake_allocator@1@AEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
__formal$ = 24
??0_Fake_proxy_ptr_impl@std@@QEAA@AEBU_Fake_allocator@1@AEBU_Container_base0@1@@Z PROC ; std::_Fake_proxy_ptr_impl::_Fake_proxy_ptr_impl, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1450
	mov	rax, rcx
	ret	0
??0_Fake_proxy_ptr_impl@std@@QEAA@AEBU_Fake_allocator@1@AEBU_Container_base0@1@@Z ENDP ; std::_Fake_proxy_ptr_impl::_Fake_proxy_ptr_impl
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Orphan_all@_Container_base0@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Orphan_all@_Container_base0@std@@QEAAXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 1184
	ret	0
?_Orphan_all@_Container_base0@std@@QEAAXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr$ = 64
_Bytes$ = 72
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 200
$LN7:
	sub	rsp, 56					; 00000038H
; Line 202
	add	QWORD PTR [rdx], 39			; 00000027H
; Line 205
	mov	rax, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax-8]
; Line 219
	sub	rax, rdx
	sub	rax, 8
	cmp	rax, 31
	ja	SHORT $LN3@Adjust_man
; Line 220
	mov	QWORD PTR [rcx], rdx
; Line 221
	add	rsp, 56					; 00000038H
	ret	0
$LN3@Adjust_man:
; Line 219
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	_invoke_watson
	int	3
$LN5@Adjust_man:
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 8
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 136
	jmp	??2@YAPEAX_K@Z				; operator new
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; Line 107
$LN4:
	sub	rsp, 72					; 00000048H
; Line 108
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0bad_array_new_length@std@@QEAA@XZ	; std::bad_array_new_length::bad_array_new_length
	lea	rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
	lea	rcx, QWORD PTR $T1[rsp]
	call	_CxxThrowException
	int	3
$LN3@Throw_bad_:
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN22:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx
; Line 91
	add	rcx, 8
	call	__std_exception_destroy
	test	bl, 1
	je	SHORT $LN18@scalar
	mov	edx, 24
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN18@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN14:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 73
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	xorps	xmm0, xmm0
; Line 72
	lea	rdx, QWORD PTR [rbx+8]
; Line 73
	mov	QWORD PTR [rbx], rcx
; Line 74
	lea	rcx, QWORD PTR [rax+8]
	movups	XMMWORD PTR [rdx], xmm0
	call	__std_exception_copy
	lea	rax, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
; Line 91
	add	rcx, 8
	jmp	__std_exception_destroy
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 68
	lea	rax, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	QWORD PTR [rcx+16], 0
	mov	QWORD PTR [rcx+8], rax
; Line 144
	lea	rax, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rcx], rax
; Line 145
	mov	rax, rcx
	ret	0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN17:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx
; Line 91
	add	rcx, 8
	call	__std_exception_destroy
	test	bl, 1
	je	SHORT $LN13@scalar
	mov	edx, 24
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN13@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 73
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	xorps	xmm0, xmm0
; Line 72
	lea	rdx, QWORD PTR [rbx+8]
; Line 73
	mov	QWORD PTR [rbx], rcx
; Line 74
	lea	rcx, QWORD PTR [rax+8]
	movups	XMMWORD PTR [rdx], xmm0
	call	__std_exception_copy
	lea	rax, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
; Line 91
	add	rcx, 8
	jmp	__std_exception_destroy
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 8
_Message$ = 16
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 133
	lea	rax, OFFSET FLAT:??_7bad_alloc@std@@6B@
; Line 66
	mov	QWORD PTR [rcx+16], 0
; Line 133
	mov	QWORD PTR [rcx], rax
; Line 134
	mov	rax, rcx
; Line 68
	mov	QWORD PTR [rcx+8], rdx
; Line 134
	ret	0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN12:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx
; Line 91
	add	rcx, 8
	call	__std_exception_destroy
	test	bl, 1
	je	SHORT $LN8@scalar
	mov	edx, 24
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN8@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 96
	mov	rdx, QWORD PTR [rcx+8]
	lea	rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
	test	rdx, rdx
	cmovne	rax, rdx
; Line 97
	ret	0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 90
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
; Line 91
	add	rcx, 8
	jmp	__std_exception_destroy
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 73
$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rax, rdx
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	xorps	xmm0, xmm0
	lea	rdx, QWORD PTR [rbx+8]
	mov	QWORD PTR [rbx], rcx
; Line 74
	lea	rcx, QWORD PTR [rax+8]
	movups	XMMWORD PTR [rdx], xmm0
	call	__std_exception_copy
; Line 75
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 8
_Message$ = 16
__formal$ = 24
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h
; Line 67
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
; Line 69
	mov	rax, rcx
	mov	QWORD PTR [rcx+16], 0
	mov	QWORD PTR [rcx+8], rdx
	ret	0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 8
_Where$ = 16
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_new.h
; Line 166
	mov	rax, rdx
; Line 167
	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
__t$ = 48
__s$ = 56
__n$ = 64
__f$ = 72
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN14:
	test	r8, r8
	je	SHORT $LN12@vector
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, r9
	mov	rbx, r8
	mov	rbp, rdx
	mov	rdi, rcx
$LL2@vector:
	mov	rcx, rdi
	call	rsi
	add	rdi, rbp
	sub	rbx, 1
	jne	SHORT $LL2@vector
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN12@vector:
	ret	0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
