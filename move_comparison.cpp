#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <algorithm>

int main() {
    std::cout << "=== Comparing Expected vs Actual Moves after a2a4 ===" << std::endl;
    
    // Expected 44 moves (from reliable perft source)
    std::vector<std::string> expected = {
        "a6b5", "a6b7", "a6c4", "a6c8", "a6d3", "a6e2",
        "a8b8", "a8c8", "a8d8",
        "b4a3", "b4b3", "b4c3",
        "b6a4", "b6c4", "b6c8", "b6d5",
        "c7c5", "c7c6",
        "d7d6",
        "e6d5",
        "e7c5", "e7d6", "e7d8", "e7f8",
        "e8c8", "e8d8", "e8f8", "e8g8",
        "f6d5", "f6e4", "f6g4", "f6g8", "f6h5", "f6h7",
        "g6g5",
        "g7f8", "g7h6",
        "h3g2",
        "h8f8", "h8g8", "h8h4", "h8h5", "h8h6", "h8h7"
    };
    
    // Actual 43 moves generated by your engine
    std::vector<std::string> actual = {
        "b6c8", "b6d5", "b6c4", "b6a4", "f6g8", "f6h7", "f6h5", "f6d5", "f6g4", "f6e4",
        "a8b8", "a8c8", "a8d8", "h8h7", "h8h6", "h8h5", "h8h4", "h8g8", "h8f8",
        "a6b7", "a6c8", "a6b5", "a6c4", "a6d3", "a6e2", "g7f8", "g7h6",
        "e7f8", "e7d8", "e7d6", "e7c5", "e8f8", "e8d8", "e8g8", "e8c8",
        "h3g2", "b4b3", "b4c3", "e6d5", "g6g5", "c7c6", "c7c5", "d7d6"
    };
    
    std::cout << "Expected moves: " << expected.size() << std::endl;
    std::cout << "Actual moves: " << actual.size() << std::endl;
    std::cout << "Difference: " << (int(expected.size()) - int(actual.size())) << std::endl;
    
    // Convert to sets for easier comparison
    std::set<std::string> expected_set(expected.begin(), expected.end());
    std::set<std::string> actual_set(actual.begin(), actual.end());
    
    // Find missing moves (in expected but not in actual)
    std::cout << "\n=== MISSING MOVES (in expected but not generated) ===" << std::endl;
    std::vector<std::string> missing;
    std::set_difference(expected_set.begin(), expected_set.end(),
                       actual_set.begin(), actual_set.end(),
                       std::back_inserter(missing));
    
    if (missing.empty()) {
        std::cout << "No missing moves found!" << std::endl;
    } else {
        for (const auto& move : missing) {
            std::cout << "MISSING: " << move << std::endl;
        }
    }
    
    // Find extra moves (in actual but not in expected)
    std::cout << "\n=== EXTRA MOVES (generated but not in expected) ===" << std::endl;
    std::vector<std::string> extra;
    std::set_difference(actual_set.begin(), actual_set.end(),
                       expected_set.begin(), expected_set.end(),
                       std::back_inserter(extra));
    
    if (extra.empty()) {
        std::cout << "No extra moves found!" << std::endl;
    } else {
        for (const auto& move : extra) {
            std::cout << "EXTRA: " << move << std::endl;
        }
    }
    
    std::cout << "\n=== ANALYSIS ===" << std::endl;
    std::cout << "Missing count: " << missing.size() << std::endl;
    std::cout << "Extra count: " << extra.size() << std::endl;
    
    return 0;
}
